{"ast":null,"code":"'use strict';\n\nmodule.exports = exports;\nconst fs = require('fs');\nconst path = require('path');\nconst win = process.platform === 'win32';\nconst existsSync = fs.existsSync || path.existsSync;\nconst cp = require('child_process');\n\n// try to build up the complete path to node-gyp\n/* priority:\n  - node-gyp on ENV:npm_config_node_gyp (https://github.com/npm/npm/pull/4887)\n  - node-gyp on NODE_PATH\n  - node-gyp inside npm on NODE_PATH (ignore on iojs)\n  - node-gyp inside npm beside node exe\n*/\nfunction which_node_gyp() {\n  let node_gyp_bin;\n  if (process.env.npm_config_node_gyp) {\n    try {\n      node_gyp_bin = process.env.npm_config_node_gyp;\n      if (existsSync(node_gyp_bin)) {\n        return node_gyp_bin;\n      }\n    } catch (err) {\n      // do nothing\n    }\n  }\n  try {\n    const node_gyp_main = require.resolve('node-gyp'); // eslint-disable-line node/no-missing-require\n    node_gyp_bin = path.join(path.dirname(path.dirname(node_gyp_main)), 'bin/node-gyp.js');\n    if (existsSync(node_gyp_bin)) {\n      return node_gyp_bin;\n    }\n  } catch (err) {\n    // do nothing\n  }\n  if (process.execPath.indexOf('iojs') === -1) {\n    try {\n      const npm_main = require.resolve('npm'); // eslint-disable-line node/no-missing-require\n      node_gyp_bin = path.join(path.dirname(path.dirname(npm_main)), 'node_modules/node-gyp/bin/node-gyp.js');\n      if (existsSync(node_gyp_bin)) {\n        return node_gyp_bin;\n      }\n    } catch (err) {\n      // do nothing\n    }\n  }\n  const npm_base = path.join(path.dirname(path.dirname(process.execPath)), 'lib/node_modules/npm/');\n  node_gyp_bin = path.join(npm_base, 'node_modules/node-gyp/bin/node-gyp.js');\n  if (existsSync(node_gyp_bin)) {\n    return node_gyp_bin;\n  }\n}\nmodule.exports.run_gyp = function (args, opts, callback) {\n  let shell_cmd = '';\n  const cmd_args = [];\n  if (opts.runtime && opts.runtime === 'node-webkit') {\n    shell_cmd = 'nw-gyp';\n    if (win) shell_cmd += '.cmd';\n  } else {\n    const node_gyp_path = which_node_gyp();\n    if (node_gyp_path) {\n      shell_cmd = process.execPath;\n      cmd_args.push(node_gyp_path);\n    } else {\n      shell_cmd = 'node-gyp';\n      if (win) shell_cmd += '.cmd';\n    }\n  }\n  const final_args = cmd_args.concat(args);\n  const cmd = cp.spawn(shell_cmd, final_args, {\n    cwd: undefined,\n    env: process.env,\n    stdio: [0, 1, 2]\n  });\n  cmd.on('error', err => {\n    if (err) {\n      return callback(new Error(\"Failed to execute '\" + shell_cmd + ' ' + final_args.join(' ') + \"' (\" + err + ')'));\n    }\n    callback(null, opts);\n  });\n  cmd.on('close', code => {\n    if (code && code !== 0) {\n      return callback(new Error(\"Failed to execute '\" + shell_cmd + ' ' + final_args.join(' ') + \"' (\" + code + ')'));\n    }\n    callback(null, opts);\n  });\n};","map":{"version":3,"names":["module","exports","fs","require","path","win","process","platform","existsSync","cp","which_node_gyp","node_gyp_bin","env","npm_config_node_gyp","err","node_gyp_main","resolve","join","dirname","execPath","indexOf","npm_main","npm_base","run_gyp","args","opts","callback","shell_cmd","cmd_args","runtime","node_gyp_path","push","final_args","concat","cmd","spawn","cwd","undefined","stdio","on","Error","code"],"sources":["C:/Users/Ryan/Documents/school/fall 2023/cmpe 133/project/CookChad/frontend/node_modules/@mapbox/node-pre-gyp/lib/util/compile.js"],"sourcesContent":["'use strict';\n\nmodule.exports = exports;\n\nconst fs = require('fs');\nconst path = require('path');\nconst win = process.platform === 'win32';\nconst existsSync = fs.existsSync || path.existsSync;\nconst cp = require('child_process');\n\n// try to build up the complete path to node-gyp\n/* priority:\n  - node-gyp on ENV:npm_config_node_gyp (https://github.com/npm/npm/pull/4887)\n  - node-gyp on NODE_PATH\n  - node-gyp inside npm on NODE_PATH (ignore on iojs)\n  - node-gyp inside npm beside node exe\n*/\nfunction which_node_gyp() {\n  let node_gyp_bin;\n  if (process.env.npm_config_node_gyp) {\n    try {\n      node_gyp_bin = process.env.npm_config_node_gyp;\n      if (existsSync(node_gyp_bin)) {\n        return node_gyp_bin;\n      }\n    } catch (err) {\n      // do nothing\n    }\n  }\n  try {\n    const node_gyp_main = require.resolve('node-gyp'); // eslint-disable-line node/no-missing-require\n    node_gyp_bin = path.join(path.dirname(\n      path.dirname(node_gyp_main)),\n    'bin/node-gyp.js');\n    if (existsSync(node_gyp_bin)) {\n      return node_gyp_bin;\n    }\n  } catch (err) {\n    // do nothing\n  }\n  if (process.execPath.indexOf('iojs') === -1) {\n    try {\n      const npm_main = require.resolve('npm'); // eslint-disable-line node/no-missing-require\n      node_gyp_bin = path.join(path.dirname(\n        path.dirname(npm_main)),\n      'node_modules/node-gyp/bin/node-gyp.js');\n      if (existsSync(node_gyp_bin)) {\n        return node_gyp_bin;\n      }\n    } catch (err) {\n      // do nothing\n    }\n  }\n  const npm_base = path.join(path.dirname(\n    path.dirname(process.execPath)),\n  'lib/node_modules/npm/');\n  node_gyp_bin = path.join(npm_base, 'node_modules/node-gyp/bin/node-gyp.js');\n  if (existsSync(node_gyp_bin)) {\n    return node_gyp_bin;\n  }\n}\n\nmodule.exports.run_gyp = function(args, opts, callback) {\n  let shell_cmd = '';\n  const cmd_args = [];\n  if (opts.runtime && opts.runtime === 'node-webkit') {\n    shell_cmd = 'nw-gyp';\n    if (win) shell_cmd += '.cmd';\n  } else {\n    const node_gyp_path = which_node_gyp();\n    if (node_gyp_path) {\n      shell_cmd = process.execPath;\n      cmd_args.push(node_gyp_path);\n    } else {\n      shell_cmd = 'node-gyp';\n      if (win) shell_cmd += '.cmd';\n    }\n  }\n  const final_args = cmd_args.concat(args);\n  const cmd = cp.spawn(shell_cmd, final_args, { cwd: undefined, env: process.env, stdio: [0, 1, 2] });\n  cmd.on('error', (err) => {\n    if (err) {\n      return callback(new Error(\"Failed to execute '\" + shell_cmd + ' ' + final_args.join(' ') + \"' (\" + err + ')'));\n    }\n    callback(null, opts);\n  });\n  cmd.on('close', (code) => {\n    if (code && code !== 0) {\n      return callback(new Error(\"Failed to execute '\" + shell_cmd + ' ' + final_args.join(' ') + \"' (\" + code + ')'));\n    }\n    callback(null, opts);\n  });\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"'use strict';\n\nconst npg = require('..');\nconst versioning = require('../lib/util/versioning.js');\nconst napi = require('../lib/util/napi.js');\nconst existsSync = require('fs').existsSync || require('path').existsSync;\nconst path = require('path');\nmodule.exports = exports;\nexports.usage = 'Finds the require path for the node-pre-gyp installed module';\nexports.validate = function (package_json, opts) {\n  versioning.validate_config(package_json, opts);\n};\nexports.find = function (package_json_path, opts) {\n  if (!existsSync(package_json_path)) {\n    throw new Error(package_json_path + 'does not exist');\n  }\n  const prog = new npg.Run({\n    package_json_path,\n    argv: process.argv\n  });\n  prog.setBinaryHostProperty();\n  const package_json = prog.package_json;\n  versioning.validate_config(package_json, opts);\n  let napi_build_version;\n  if (napi.get_napi_build_versions(package_json, opts)) {\n    napi_build_version = napi.get_best_napi_build_version(package_json, opts);\n  }\n  opts = opts || {};\n  if (!opts.module_root) opts.module_root = path.dirname(package_json_path);\n  const meta = versioning.evaluate(package_json, opts, napi_build_version);\n  return meta.module;\n};","map":{"version":3,"names":["npg","require","versioning","napi","existsSync","path","module","exports","usage","validate","package_json","opts","validate_config","find","package_json_path","Error","prog","Run","argv","process","setBinaryHostProperty","napi_build_version","get_napi_build_versions","get_best_napi_build_version","module_root","dirname","meta","evaluate"],"sources":["C:/Users/Ryan/Documents/school/fall 2023/cmpe 133/project/CookChad/frontend/node_modules/@mapbox/node-pre-gyp/lib/pre-binding.js"],"sourcesContent":["'use strict';\n\nconst npg = require('..');\nconst versioning = require('../lib/util/versioning.js');\nconst napi = require('../lib/util/napi.js');\nconst existsSync = require('fs').existsSync || require('path').existsSync;\nconst path = require('path');\n\nmodule.exports = exports;\n\nexports.usage = 'Finds the require path for the node-pre-gyp installed module';\n\nexports.validate = function(package_json, opts) {\n  versioning.validate_config(package_json, opts);\n};\n\nexports.find = function(package_json_path, opts) {\n  if (!existsSync(package_json_path)) {\n    throw new Error(package_json_path + 'does not exist');\n  }\n  const prog = new npg.Run({ package_json_path, argv: process.argv });\n  prog.setBinaryHostProperty();\n  const package_json = prog.package_json;\n\n  versioning.validate_config(package_json, opts);\n  let napi_build_version;\n  if (napi.get_napi_build_versions(package_json, opts)) {\n    napi_build_version = napi.get_best_napi_build_version(package_json, opts);\n  }\n  opts = opts || {};\n  if (!opts.module_root) opts.module_root = path.dirname(package_json_path);\n  const meta = versioning.evaluate(package_json, opts, napi_build_version);\n  return meta.module;\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,GAAG,GAAGC,OAAO,CAAC,IAAI,CAAC;AACzB,MAAMC,UAAU,GAAGD,OAAO,CAAC,2BAA2B,CAAC;AACvD,MAAME,IAAI,GAAGF,OAAO,CAAC,qBAAqB,CAAC;AAC3C,MAAMG,UAAU,GAAGH,OAAO,CAAC,IAAI,CAAC,CAACG,UAAU,IAAIH,OAAO,CAAC,MAAM,CAAC,CAACG,UAAU;AACzE,MAAMC,IAAI,GAAGJ,OAAO,CAAC,MAAM,CAAC;AAE5BK,MAAM,CAACC,OAAO,GAAGA,OAAO;AAExBA,OAAO,CAACC,KAAK,GAAG,8DAA8D;AAE9ED,OAAO,CAACE,QAAQ,GAAG,UAASC,YAAY,EAAEC,IAAI,EAAE;EAC9CT,UAAU,CAACU,eAAe,CAACF,YAAY,EAAEC,IAAI,CAAC;AAChD,CAAC;AAEDJ,OAAO,CAACM,IAAI,GAAG,UAASC,iBAAiB,EAAEH,IAAI,EAAE;EAC/C,IAAI,CAACP,UAAU,CAACU,iBAAiB,CAAC,EAAE;IAClC,MAAM,IAAIC,KAAK,CAACD,iBAAiB,GAAG,gBAAgB,CAAC;EACvD;EACA,MAAME,IAAI,GAAG,IAAIhB,GAAG,CAACiB,GAAG,CAAC;IAAEH,iBAAiB;IAAEI,IAAI,EAAEC,OAAO,CAACD;EAAK,CAAC,CAAC;EACnEF,IAAI,CAACI,qBAAqB,CAAC,CAAC;EAC5B,MAAMV,YAAY,GAAGM,IAAI,CAACN,YAAY;EAEtCR,UAAU,CAACU,eAAe,CAACF,YAAY,EAAEC,IAAI,CAAC;EAC9C,IAAIU,kBAAkB;EACtB,IAAIlB,IAAI,CAACmB,uBAAuB,CAACZ,YAAY,EAAEC,IAAI,CAAC,EAAE;IACpDU,kBAAkB,GAAGlB,IAAI,CAACoB,2BAA2B,CAACb,YAAY,EAAEC,IAAI,CAAC;EAC3E;EACAA,IAAI,GAAGA,IAAI,IAAI,CAAC,CAAC;EACjB,IAAI,CAACA,IAAI,CAACa,WAAW,EAAEb,IAAI,CAACa,WAAW,GAAGnB,IAAI,CAACoB,OAAO,CAACX,iBAAiB,CAAC;EACzE,MAAMY,IAAI,GAAGxB,UAAU,CAACyB,QAAQ,CAACjB,YAAY,EAAEC,IAAI,EAAEU,kBAAkB,CAAC;EACxE,OAAOK,IAAI,CAACpB,MAAM;AACpB,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"'use strict';\n\nmodule.exports = exports = publish;\nexports.usage = 'Publishes pre-built binary (requires aws-sdk)';\nconst fs = require('fs');\nconst path = require('path');\nconst log = require('npmlog');\nconst versioning = require('./util/versioning.js');\nconst napi = require('./util/napi.js');\nconst s3_setup = require('./util/s3_setup.js');\nconst existsAsync = fs.exists || path.exists;\nconst url = require('url');\nfunction publish(gyp, argv, callback) {\n  const package_json = gyp.package_json;\n  const napi_build_version = napi.get_napi_build_version_from_command_args(argv);\n  const opts = versioning.evaluate(package_json, gyp.opts, napi_build_version);\n  const tarball = opts.staged_tarball;\n  existsAsync(tarball, found => {\n    if (!found) {\n      return callback(new Error('Cannot publish because ' + tarball + ' missing: run `node-pre-gyp package` first'));\n    }\n    log.info('publish', 'Detecting s3 credentials');\n    const config = {};\n    s3_setup.detect(opts, config);\n    const s3 = s3_setup.get_s3(config);\n    const key_name = url.resolve(config.prefix, opts.package_name);\n    const s3_opts = {\n      Bucket: config.bucket,\n      Key: key_name\n    };\n    log.info('publish', 'Authenticating with s3');\n    log.info('publish', config);\n    log.info('publish', 'Checking for existing binary at ' + opts.hosted_path);\n    s3.headObject(s3_opts, (err, meta) => {\n      if (meta) log.info('publish', JSON.stringify(meta));\n      if (err && err.code === 'NotFound') {\n        // we are safe to publish because\n        // the object does not already exist\n        log.info('publish', 'Preparing to put object');\n        const s3_put_opts = {\n          ACL: 'public-read',\n          Body: fs.createReadStream(tarball),\n          Key: key_name,\n          Bucket: config.bucket\n        };\n        log.info('publish', 'Putting object', s3_put_opts.ACL, s3_put_opts.Bucket, s3_put_opts.Key);\n        try {\n          s3.putObject(s3_put_opts, (err2, resp) => {\n            log.info('publish', 'returned from putting object');\n            if (err2) {\n              log.info('publish', 's3 putObject error: \"' + err2 + '\"');\n              return callback(err2);\n            }\n            if (resp) log.info('publish', 's3 putObject response: \"' + JSON.stringify(resp) + '\"');\n            log.info('publish', 'successfully put object');\n            console.log('[' + package_json.name + '] published to ' + opts.hosted_path);\n            return callback();\n          });\n        } catch (err3) {\n          log.info('publish', 's3 putObject error: \"' + err3 + '\"');\n          return callback(err3);\n        }\n      } else if (err) {\n        log.info('publish', 's3 headObject error: \"' + err + '\"');\n        return callback(err);\n      } else {\n        log.error('publish', 'Cannot publish over existing version');\n        log.error('publish', \"Update the 'version' field in package.json and try again\");\n        log.error('publish', 'If the previous version was published in error see:');\n        log.error('publish', '\\t node-pre-gyp unpublish');\n        return callback(new Error('Failed publishing to ' + opts.hosted_path));\n      }\n    });\n  });\n}","map":{"version":3,"names":["module","exports","publish","usage","fs","require","path","log","versioning","napi","s3_setup","existsAsync","exists","url","gyp","argv","callback","package_json","napi_build_version","get_napi_build_version_from_command_args","opts","evaluate","tarball","staged_tarball","found","Error","info","config","detect","s3","get_s3","key_name","resolve","prefix","package_name","s3_opts","Bucket","bucket","Key","hosted_path","headObject","err","meta","JSON","stringify","code","s3_put_opts","ACL","Body","createReadStream","putObject","err2","resp","console","name","err3","error"],"sources":["C:/Users/Ryan/Documents/school/fall 2023/cmpe 133/project/CookChad/frontend/node_modules/@mapbox/node-pre-gyp/lib/publish.js"],"sourcesContent":["'use strict';\n\nmodule.exports = exports = publish;\n\nexports.usage = 'Publishes pre-built binary (requires aws-sdk)';\n\nconst fs = require('fs');\nconst path = require('path');\nconst log = require('npmlog');\nconst versioning = require('./util/versioning.js');\nconst napi = require('./util/napi.js');\nconst s3_setup = require('./util/s3_setup.js');\nconst existsAsync = fs.exists || path.exists;\nconst url = require('url');\n\nfunction publish(gyp, argv, callback) {\n  const package_json = gyp.package_json;\n  const napi_build_version = napi.get_napi_build_version_from_command_args(argv);\n  const opts = versioning.evaluate(package_json, gyp.opts, napi_build_version);\n  const tarball = opts.staged_tarball;\n  existsAsync(tarball, (found) => {\n    if (!found) {\n      return callback(new Error('Cannot publish because ' + tarball + ' missing: run `node-pre-gyp package` first'));\n    }\n\n    log.info('publish', 'Detecting s3 credentials');\n    const config = {};\n    s3_setup.detect(opts, config);\n    const s3 = s3_setup.get_s3(config);\n\n    const key_name = url.resolve(config.prefix, opts.package_name);\n    const s3_opts = {\n      Bucket: config.bucket,\n      Key: key_name\n    };\n    log.info('publish', 'Authenticating with s3');\n    log.info('publish', config);\n\n    log.info('publish', 'Checking for existing binary at ' + opts.hosted_path);\n    s3.headObject(s3_opts, (err, meta) => {\n      if (meta) log.info('publish', JSON.stringify(meta));\n      if (err && err.code === 'NotFound') {\n        // we are safe to publish because\n        // the object does not already exist\n        log.info('publish', 'Preparing to put object');\n        const s3_put_opts = {\n          ACL: 'public-read',\n          Body: fs.createReadStream(tarball),\n          Key: key_name,\n          Bucket: config.bucket\n        };\n        log.info('publish', 'Putting object', s3_put_opts.ACL, s3_put_opts.Bucket, s3_put_opts.Key);\n        try {\n          s3.putObject(s3_put_opts, (err2, resp) => {\n            log.info('publish', 'returned from putting object');\n            if (err2) {\n              log.info('publish', 's3 putObject error: \"' + err2 + '\"');\n              return callback(err2);\n            }\n            if (resp) log.info('publish', 's3 putObject response: \"' + JSON.stringify(resp) + '\"');\n            log.info('publish', 'successfully put object');\n            console.log('[' + package_json.name + '] published to ' + opts.hosted_path);\n            return callback();\n          });\n        } catch (err3) {\n          log.info('publish', 's3 putObject error: \"' + err3 + '\"');\n          return callback(err3);\n        }\n      } else if (err) {\n        log.info('publish', 's3 headObject error: \"' + err + '\"');\n        return callback(err);\n      } else {\n        log.error('publish', 'Cannot publish over existing version');\n        log.error('publish', \"Update the 'version' field in package.json and try again\");\n        log.error('publish', 'If the previous version was published in error see:');\n        log.error('publish', '\\t node-pre-gyp unpublish');\n        return callback(new Error('Failed publishing to ' + opts.hosted_path));\n      }\n    });\n  });\n}\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,OAAO,GAAGA,OAAO,GAAGC,OAAO;AAElCD,OAAO,CAACE,KAAK,GAAG,+CAA+C;AAE/D,MAAMC,EAAE,GAAGC,OAAO,CAAC,IAAI,CAAC;AACxB,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAME,GAAG,GAAGF,OAAO,CAAC,QAAQ,CAAC;AAC7B,MAAMG,UAAU,GAAGH,OAAO,CAAC,sBAAsB,CAAC;AAClD,MAAMI,IAAI,GAAGJ,OAAO,CAAC,gBAAgB,CAAC;AACtC,MAAMK,QAAQ,GAAGL,OAAO,CAAC,oBAAoB,CAAC;AAC9C,MAAMM,WAAW,GAAGP,EAAE,CAACQ,MAAM,IAAIN,IAAI,CAACM,MAAM;AAC5C,MAAMC,GAAG,GAAGR,OAAO,CAAC,KAAK,CAAC;AAE1B,SAASH,OAAOA,CAACY,GAAG,EAAEC,IAAI,EAAEC,QAAQ,EAAE;EACpC,MAAMC,YAAY,GAAGH,GAAG,CAACG,YAAY;EACrC,MAAMC,kBAAkB,GAAGT,IAAI,CAACU,wCAAwC,CAACJ,IAAI,CAAC;EAC9E,MAAMK,IAAI,GAAGZ,UAAU,CAACa,QAAQ,CAACJ,YAAY,EAAEH,GAAG,CAACM,IAAI,EAAEF,kBAAkB,CAAC;EAC5E,MAAMI,OAAO,GAAGF,IAAI,CAACG,cAAc;EACnCZ,WAAW,CAACW,OAAO,EAAGE,KAAK,IAAK;IAC9B,IAAI,CAACA,KAAK,EAAE;MACV,OAAOR,QAAQ,CAAC,IAAIS,KAAK,CAAC,yBAAyB,GAAGH,OAAO,GAAG,4CAA4C,CAAC,CAAC;IAChH;IAEAf,GAAG,CAACmB,IAAI,CAAC,SAAS,EAAE,0BAA0B,CAAC;IAC/C,MAAMC,MAAM,GAAG,CAAC,CAAC;IACjBjB,QAAQ,CAACkB,MAAM,CAACR,IAAI,EAAEO,MAAM,CAAC;IAC7B,MAAME,EAAE,GAAGnB,QAAQ,CAACoB,MAAM,CAACH,MAAM,CAAC;IAElC,MAAMI,QAAQ,GAAGlB,GAAG,CAACmB,OAAO,CAACL,MAAM,CAACM,MAAM,EAAEb,IAAI,CAACc,YAAY,CAAC;IAC9D,MAAMC,OAAO,GAAG;MACdC,MAAM,EAAET,MAAM,CAACU,MAAM;MACrBC,GAAG,EAAEP;IACP,CAAC;IACDxB,GAAG,CAACmB,IAAI,CAAC,SAAS,EAAE,wBAAwB,CAAC;IAC7CnB,GAAG,CAACmB,IAAI,CAAC,SAAS,EAAEC,MAAM,CAAC;IAE3BpB,GAAG,CAACmB,IAAI,CAAC,SAAS,EAAE,kCAAkC,GAAGN,IAAI,CAACmB,WAAW,CAAC;IAC1EV,EAAE,CAACW,UAAU,CAACL,OAAO,EAAE,CAACM,GAAG,EAAEC,IAAI,KAAK;MACpC,IAAIA,IAAI,EAAEnC,GAAG,CAACmB,IAAI,CAAC,SAAS,EAAEiB,IAAI,CAACC,SAAS,CAACF,IAAI,CAAC,CAAC;MACnD,IAAID,GAAG,IAAIA,GAAG,CAACI,IAAI,KAAK,UAAU,EAAE;QAClC;QACA;QACAtC,GAAG,CAACmB,IAAI,CAAC,SAAS,EAAE,yBAAyB,CAAC;QAC9C,MAAMoB,WAAW,GAAG;UAClBC,GAAG,EAAE,aAAa;UAClBC,IAAI,EAAE5C,EAAE,CAAC6C,gBAAgB,CAAC3B,OAAO,CAAC;UAClCgB,GAAG,EAAEP,QAAQ;UACbK,MAAM,EAAET,MAAM,CAACU;QACjB,CAAC;QACD9B,GAAG,CAACmB,IAAI,CAAC,SAAS,EAAE,gBAAgB,EAAEoB,WAAW,CAACC,GAAG,EAAED,WAAW,CAACV,MAAM,EAAEU,WAAW,CAACR,GAAG,CAAC;QAC3F,IAAI;UACFT,EAAE,CAACqB,SAAS,CAACJ,WAAW,EAAE,CAACK,IAAI,EAAEC,IAAI,KAAK;YACxC7C,GAAG,CAACmB,IAAI,CAAC,SAAS,EAAE,8BAA8B,CAAC;YACnD,IAAIyB,IAAI,EAAE;cACR5C,GAAG,CAACmB,IAAI,CAAC,SAAS,EAAE,uBAAuB,GAAGyB,IAAI,GAAG,GAAG,CAAC;cACzD,OAAOnC,QAAQ,CAACmC,IAAI,CAAC;YACvB;YACA,IAAIC,IAAI,EAAE7C,GAAG,CAACmB,IAAI,CAAC,SAAS,EAAE,0BAA0B,GAAGiB,IAAI,CAACC,SAAS,CAACQ,IAAI,CAAC,GAAG,GAAG,CAAC;YACtF7C,GAAG,CAACmB,IAAI,CAAC,SAAS,EAAE,yBAAyB,CAAC;YAC9C2B,OAAO,CAAC9C,GAAG,CAAC,GAAG,GAAGU,YAAY,CAACqC,IAAI,GAAG,iBAAiB,GAAGlC,IAAI,CAACmB,WAAW,CAAC;YAC3E,OAAOvB,QAAQ,CAAC,CAAC;UACnB,CAAC,CAAC;QACJ,CAAC,CAAC,OAAOuC,IAAI,EAAE;UACbhD,GAAG,CAACmB,IAAI,CAAC,SAAS,EAAE,uBAAuB,GAAG6B,IAAI,GAAG,GAAG,CAAC;UACzD,OAAOvC,QAAQ,CAACuC,IAAI,CAAC;QACvB;MACF,CAAC,MAAM,IAAId,GAAG,EAAE;QACdlC,GAAG,CAACmB,IAAI,CAAC,SAAS,EAAE,wBAAwB,GAAGe,GAAG,GAAG,GAAG,CAAC;QACzD,OAAOzB,QAAQ,CAACyB,GAAG,CAAC;MACtB,CAAC,MAAM;QACLlC,GAAG,CAACiD,KAAK,CAAC,SAAS,EAAE,sCAAsC,CAAC;QAC5DjD,GAAG,CAACiD,KAAK,CAAC,SAAS,EAAE,0DAA0D,CAAC;QAChFjD,GAAG,CAACiD,KAAK,CAAC,SAAS,EAAE,qDAAqD,CAAC;QAC3EjD,GAAG,CAACiD,KAAK,CAAC,SAAS,EAAE,2BAA2B,CAAC;QACjD,OAAOxC,QAAQ,CAAC,IAAIS,KAAK,CAAC,uBAAuB,GAAGL,IAAI,CAACmB,WAAW,CAAC,CAAC;MACxE;IACF,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"script","externalDependencies":[]}
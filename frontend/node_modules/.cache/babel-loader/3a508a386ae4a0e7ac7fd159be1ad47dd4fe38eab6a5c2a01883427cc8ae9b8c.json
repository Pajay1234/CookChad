{"ast":null,"code":"'use strict';\n\nmodule.exports = exports = clean;\nexports.usage = 'Removes the entire folder containing the compiled .node module';\nconst rm = require('rimraf');\nconst exists = require('fs').exists || require('path').exists;\nconst versioning = require('./util/versioning.js');\nconst napi = require('./util/napi.js');\nconst path = require('path');\nfunction clean(gyp, argv, callback) {\n  const package_json = gyp.package_json;\n  const napi_build_version = napi.get_napi_build_version_from_command_args(argv);\n  const opts = versioning.evaluate(package_json, gyp.opts, napi_build_version);\n  const to_delete = opts.module_path;\n  if (!to_delete) {\n    return callback(new Error('module_path is empty, refusing to delete'));\n  } else if (path.normalize(to_delete) === path.normalize(process.cwd())) {\n    return callback(new Error('module_path is not set, refusing to delete'));\n  } else {\n    exists(to_delete, found => {\n      if (found) {\n        if (!gyp.opts.silent_clean) console.log('[' + package_json.name + '] Removing \"%s\"', to_delete);\n        return rm(to_delete, callback);\n      }\n      return callback();\n    });\n  }\n}","map":{"version":3,"names":["module","exports","clean","usage","rm","require","exists","versioning","napi","path","gyp","argv","callback","package_json","napi_build_version","get_napi_build_version_from_command_args","opts","evaluate","to_delete","module_path","Error","normalize","process","cwd","found","silent_clean","console","log","name"],"sources":["C:/Users/Ryan/Documents/school/fall 2023/cmpe 133/project/CookChad/frontend/node_modules/@mapbox/node-pre-gyp/lib/clean.js"],"sourcesContent":["'use strict';\n\nmodule.exports = exports = clean;\n\nexports.usage = 'Removes the entire folder containing the compiled .node module';\n\nconst rm = require('rimraf');\nconst exists = require('fs').exists || require('path').exists;\nconst versioning = require('./util/versioning.js');\nconst napi = require('./util/napi.js');\nconst path = require('path');\n\nfunction clean(gyp, argv, callback) {\n  const package_json = gyp.package_json;\n  const napi_build_version = napi.get_napi_build_version_from_command_args(argv);\n  const opts = versioning.evaluate(package_json, gyp.opts, napi_build_version);\n  const to_delete = opts.module_path;\n  if (!to_delete) {\n    return callback(new Error('module_path is empty, refusing to delete'));\n  } else if (path.normalize(to_delete) === path.normalize(process.cwd())) {\n    return callback(new Error('module_path is not set, refusing to delete'));\n  } else {\n    exists(to_delete, (found) => {\n      if (found) {\n        if (!gyp.opts.silent_clean) console.log('[' + package_json.name + '] Removing \"%s\"', to_delete);\n        return rm(to_delete, callback);\n      }\n      return callback();\n    });\n  }\n}\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,OAAO,GAAGA,OAAO,GAAGC,KAAK;AAEhCD,OAAO,CAACE,KAAK,GAAG,gEAAgE;AAEhF,MAAMC,EAAE,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAC5B,MAAMC,MAAM,GAAGD,OAAO,CAAC,IAAI,CAAC,CAACC,MAAM,IAAID,OAAO,CAAC,MAAM,CAAC,CAACC,MAAM;AAC7D,MAAMC,UAAU,GAAGF,OAAO,CAAC,sBAAsB,CAAC;AAClD,MAAMG,IAAI,GAAGH,OAAO,CAAC,gBAAgB,CAAC;AACtC,MAAMI,IAAI,GAAGJ,OAAO,CAAC,MAAM,CAAC;AAE5B,SAASH,KAAKA,CAACQ,GAAG,EAAEC,IAAI,EAAEC,QAAQ,EAAE;EAClC,MAAMC,YAAY,GAAGH,GAAG,CAACG,YAAY;EACrC,MAAMC,kBAAkB,GAAGN,IAAI,CAACO,wCAAwC,CAACJ,IAAI,CAAC;EAC9E,MAAMK,IAAI,GAAGT,UAAU,CAACU,QAAQ,CAACJ,YAAY,EAAEH,GAAG,CAACM,IAAI,EAAEF,kBAAkB,CAAC;EAC5E,MAAMI,SAAS,GAAGF,IAAI,CAACG,WAAW;EAClC,IAAI,CAACD,SAAS,EAAE;IACd,OAAON,QAAQ,CAAC,IAAIQ,KAAK,CAAC,0CAA0C,CAAC,CAAC;EACxE,CAAC,MAAM,IAAIX,IAAI,CAACY,SAAS,CAACH,SAAS,CAAC,KAAKT,IAAI,CAACY,SAAS,CAACC,OAAO,CAACC,GAAG,CAAC,CAAC,CAAC,EAAE;IACtE,OAAOX,QAAQ,CAAC,IAAIQ,KAAK,CAAC,4CAA4C,CAAC,CAAC;EAC1E,CAAC,MAAM;IACLd,MAAM,CAACY,SAAS,EAAGM,KAAK,IAAK;MAC3B,IAAIA,KAAK,EAAE;QACT,IAAI,CAACd,GAAG,CAACM,IAAI,CAACS,YAAY,EAAEC,OAAO,CAACC,GAAG,CAAC,GAAG,GAAGd,YAAY,CAACe,IAAI,GAAG,iBAAiB,EAAEV,SAAS,CAAC;QAC/F,OAAOd,EAAE,CAACc,SAAS,EAAEN,QAAQ,CAAC;MAChC;MACA,OAAOA,QAAQ,CAAC,CAAC;IACnB,CAAC,CAAC;EACJ;AACF"},"metadata":{},"sourceType":"script","externalDependencies":[]}
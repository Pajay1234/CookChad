{"ast":null,"code":"exports = module.exports = SemVer;\nvar debug;\n/* istanbul ignore next */\nif (typeof process === 'object' && process.env && process.env.NODE_DEBUG && /\\bsemver\\b/i.test(process.env.NODE_DEBUG)) {\n  debug = function () {\n    var args = Array.prototype.slice.call(arguments, 0);\n    args.unshift('SEMVER');\n    console.log.apply(console, args);\n  };\n} else {\n  debug = function () {};\n}\n\n// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nexports.SEMVER_SPEC_VERSION = '2.0.0';\nvar MAX_LENGTH = 256;\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || /* istanbul ignore next */9007199254740991;\n\n// Max safe segment length for coercion.\nvar MAX_SAFE_COMPONENT_LENGTH = 16;\nvar MAX_SAFE_BUILD_LENGTH = MAX_LENGTH - 6;\n\n// The actual regexps go on exports.re\nvar re = exports.re = [];\nvar safeRe = exports.safeRe = [];\nvar src = exports.src = [];\nvar t = exports.tokens = {};\nvar R = 0;\nfunction tok(n) {\n  t[n] = R++;\n}\nvar LETTERDASHNUMBER = '[a-zA-Z0-9-]';\n\n// Replace some greedy regex tokens to prevent regex dos issues. These regex are\n// used internally via the safeRe object since all inputs in this library get\n// normalized first to trim and collapse all extra whitespace. The original\n// regexes are exported for userland consumption and lower level usage. A\n// future breaking change could export the safer regex only with a note that\n// all input should have extra whitespace removed.\nvar safeRegexReplacements = [['\\\\s', 1], ['\\\\d', MAX_LENGTH], [LETTERDASHNUMBER, MAX_SAFE_BUILD_LENGTH]];\nfunction makeSafeRe(value) {\n  for (var i = 0; i < safeRegexReplacements.length; i++) {\n    var token = safeRegexReplacements[i][0];\n    var max = safeRegexReplacements[i][1];\n    value = value.split(token + '*').join(token + '{0,' + max + '}').split(token + '+').join(token + '{1,' + max + '}');\n  }\n  return value;\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ntok('NUMERICIDENTIFIER');\nsrc[t.NUMERICIDENTIFIER] = '0|[1-9]\\\\d*';\ntok('NUMERICIDENTIFIERLOOSE');\nsrc[t.NUMERICIDENTIFIERLOOSE] = '\\\\d+';\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ntok('NONNUMERICIDENTIFIER');\nsrc[t.NONNUMERICIDENTIFIER] = '\\\\d*[a-zA-Z-]' + LETTERDASHNUMBER + '*';\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ntok('MAINVERSION');\nsrc[t.MAINVERSION] = '(' + src[t.NUMERICIDENTIFIER] + ')\\\\.' + '(' + src[t.NUMERICIDENTIFIER] + ')\\\\.' + '(' + src[t.NUMERICIDENTIFIER] + ')';\ntok('MAINVERSIONLOOSE');\nsrc[t.MAINVERSIONLOOSE] = '(' + src[t.NUMERICIDENTIFIERLOOSE] + ')\\\\.' + '(' + src[t.NUMERICIDENTIFIERLOOSE] + ')\\\\.' + '(' + src[t.NUMERICIDENTIFIERLOOSE] + ')';\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\ntok('PRERELEASEIDENTIFIER');\nsrc[t.PRERELEASEIDENTIFIER] = '(?:' + src[t.NUMERICIDENTIFIER] + '|' + src[t.NONNUMERICIDENTIFIER] + ')';\ntok('PRERELEASEIDENTIFIERLOOSE');\nsrc[t.PRERELEASEIDENTIFIERLOOSE] = '(?:' + src[t.NUMERICIDENTIFIERLOOSE] + '|' + src[t.NONNUMERICIDENTIFIER] + ')';\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ntok('PRERELEASE');\nsrc[t.PRERELEASE] = '(?:-(' + src[t.PRERELEASEIDENTIFIER] + '(?:\\\\.' + src[t.PRERELEASEIDENTIFIER] + ')*))';\ntok('PRERELEASELOOSE');\nsrc[t.PRERELEASELOOSE] = '(?:-?(' + src[t.PRERELEASEIDENTIFIERLOOSE] + '(?:\\\\.' + src[t.PRERELEASEIDENTIFIERLOOSE] + ')*))';\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ntok('BUILDIDENTIFIER');\nsrc[t.BUILDIDENTIFIER] = LETTERDASHNUMBER + '+';\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ntok('BUILD');\nsrc[t.BUILD] = '(?:\\\\+(' + src[t.BUILDIDENTIFIER] + '(?:\\\\.' + src[t.BUILDIDENTIFIER] + ')*))';\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ntok('FULL');\ntok('FULLPLAIN');\nsrc[t.FULLPLAIN] = 'v?' + src[t.MAINVERSION] + src[t.PRERELEASE] + '?' + src[t.BUILD] + '?';\nsrc[t.FULL] = '^' + src[t.FULLPLAIN] + '$';\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ntok('LOOSEPLAIN');\nsrc[t.LOOSEPLAIN] = '[v=\\\\s]*' + src[t.MAINVERSIONLOOSE] + src[t.PRERELEASELOOSE] + '?' + src[t.BUILD] + '?';\ntok('LOOSE');\nsrc[t.LOOSE] = '^' + src[t.LOOSEPLAIN] + '$';\ntok('GTLT');\nsrc[t.GTLT] = '((?:<|>)?=?)';\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ntok('XRANGEIDENTIFIERLOOSE');\nsrc[t.XRANGEIDENTIFIERLOOSE] = src[t.NUMERICIDENTIFIERLOOSE] + '|x|X|\\\\*';\ntok('XRANGEIDENTIFIER');\nsrc[t.XRANGEIDENTIFIER] = src[t.NUMERICIDENTIFIER] + '|x|X|\\\\*';\ntok('XRANGEPLAIN');\nsrc[t.XRANGEPLAIN] = '[v=\\\\s]*(' + src[t.XRANGEIDENTIFIER] + ')' + '(?:\\\\.(' + src[t.XRANGEIDENTIFIER] + ')' + '(?:\\\\.(' + src[t.XRANGEIDENTIFIER] + ')' + '(?:' + src[t.PRERELEASE] + ')?' + src[t.BUILD] + '?' + ')?)?';\ntok('XRANGEPLAINLOOSE');\nsrc[t.XRANGEPLAINLOOSE] = '[v=\\\\s]*(' + src[t.XRANGEIDENTIFIERLOOSE] + ')' + '(?:\\\\.(' + src[t.XRANGEIDENTIFIERLOOSE] + ')' + '(?:\\\\.(' + src[t.XRANGEIDENTIFIERLOOSE] + ')' + '(?:' + src[t.PRERELEASELOOSE] + ')?' + src[t.BUILD] + '?' + ')?)?';\ntok('XRANGE');\nsrc[t.XRANGE] = '^' + src[t.GTLT] + '\\\\s*' + src[t.XRANGEPLAIN] + '$';\ntok('XRANGELOOSE');\nsrc[t.XRANGELOOSE] = '^' + src[t.GTLT] + '\\\\s*' + src[t.XRANGEPLAINLOOSE] + '$';\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ntok('COERCE');\nsrc[t.COERCE] = '(^|[^\\\\d])' + '(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '})' + '(?:\\\\.(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' + '(?:\\\\.(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' + '(?:$|[^\\\\d])';\ntok('COERCERTL');\nre[t.COERCERTL] = new RegExp(src[t.COERCE], 'g');\nsafeRe[t.COERCERTL] = new RegExp(makeSafeRe(src[t.COERCE]), 'g');\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ntok('LONETILDE');\nsrc[t.LONETILDE] = '(?:~>?)';\ntok('TILDETRIM');\nsrc[t.TILDETRIM] = '(\\\\s*)' + src[t.LONETILDE] + '\\\\s+';\nre[t.TILDETRIM] = new RegExp(src[t.TILDETRIM], 'g');\nsafeRe[t.TILDETRIM] = new RegExp(makeSafeRe(src[t.TILDETRIM]), 'g');\nvar tildeTrimReplace = '$1~';\ntok('TILDE');\nsrc[t.TILDE] = '^' + src[t.LONETILDE] + src[t.XRANGEPLAIN] + '$';\ntok('TILDELOOSE');\nsrc[t.TILDELOOSE] = '^' + src[t.LONETILDE] + src[t.XRANGEPLAINLOOSE] + '$';\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ntok('LONECARET');\nsrc[t.LONECARET] = '(?:\\\\^)';\ntok('CARETTRIM');\nsrc[t.CARETTRIM] = '(\\\\s*)' + src[t.LONECARET] + '\\\\s+';\nre[t.CARETTRIM] = new RegExp(src[t.CARETTRIM], 'g');\nsafeRe[t.CARETTRIM] = new RegExp(makeSafeRe(src[t.CARETTRIM]), 'g');\nvar caretTrimReplace = '$1^';\ntok('CARET');\nsrc[t.CARET] = '^' + src[t.LONECARET] + src[t.XRANGEPLAIN] + '$';\ntok('CARETLOOSE');\nsrc[t.CARETLOOSE] = '^' + src[t.LONECARET] + src[t.XRANGEPLAINLOOSE] + '$';\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ntok('COMPARATORLOOSE');\nsrc[t.COMPARATORLOOSE] = '^' + src[t.GTLT] + '\\\\s*(' + src[t.LOOSEPLAIN] + ')$|^$';\ntok('COMPARATOR');\nsrc[t.COMPARATOR] = '^' + src[t.GTLT] + '\\\\s*(' + src[t.FULLPLAIN] + ')$|^$';\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ntok('COMPARATORTRIM');\nsrc[t.COMPARATORTRIM] = '(\\\\s*)' + src[t.GTLT] + '\\\\s*(' + src[t.LOOSEPLAIN] + '|' + src[t.XRANGEPLAIN] + ')';\n\n// this one has to use the /g flag\nre[t.COMPARATORTRIM] = new RegExp(src[t.COMPARATORTRIM], 'g');\nsafeRe[t.COMPARATORTRIM] = new RegExp(makeSafeRe(src[t.COMPARATORTRIM]), 'g');\nvar comparatorTrimReplace = '$1$2$3';\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ntok('HYPHENRANGE');\nsrc[t.HYPHENRANGE] = '^\\\\s*(' + src[t.XRANGEPLAIN] + ')' + '\\\\s+-\\\\s+' + '(' + src[t.XRANGEPLAIN] + ')' + '\\\\s*$';\ntok('HYPHENRANGELOOSE');\nsrc[t.HYPHENRANGELOOSE] = '^\\\\s*(' + src[t.XRANGEPLAINLOOSE] + ')' + '\\\\s+-\\\\s+' + '(' + src[t.XRANGEPLAINLOOSE] + ')' + '\\\\s*$';\n\n// Star ranges basically just allow anything at all.\ntok('STAR');\nsrc[t.STAR] = '(<|>)?=?\\\\s*\\\\*';\n\n// Compile to actual regexp objects.\n// All are flag-free, unless they were created above with a flag.\nfor (var i = 0; i < R; i++) {\n  debug(i, src[i]);\n  if (!re[i]) {\n    re[i] = new RegExp(src[i]);\n\n    // Replace all greedy whitespace to prevent regex dos issues. These regex are\n    // used internally via the safeRe object since all inputs in this library get\n    // normalized first to trim and collapse all extra whitespace. The original\n    // regexes are exported for userland consumption and lower level usage. A\n    // future breaking change could export the safer regex only with a note that\n    // all input should have extra whitespace removed.\n    safeRe[i] = new RegExp(makeSafeRe(src[i]));\n  }\n}\nexports.parse = parse;\nfunction parse(version, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    };\n  }\n  if (version instanceof SemVer) {\n    return version;\n  }\n  if (typeof version !== 'string') {\n    return null;\n  }\n  if (version.length > MAX_LENGTH) {\n    return null;\n  }\n  var r = options.loose ? safeRe[t.LOOSE] : safeRe[t.FULL];\n  if (!r.test(version)) {\n    return null;\n  }\n  try {\n    return new SemVer(version, options);\n  } catch (er) {\n    return null;\n  }\n}\nexports.valid = valid;\nfunction valid(version, options) {\n  var v = parse(version, options);\n  return v ? v.version : null;\n}\nexports.clean = clean;\nfunction clean(version, options) {\n  var s = parse(version.trim().replace(/^[=v]+/, ''), options);\n  return s ? s.version : null;\n}\nexports.SemVer = SemVer;\nfunction SemVer(version, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    };\n  }\n  if (version instanceof SemVer) {\n    if (version.loose === options.loose) {\n      return version;\n    } else {\n      version = version.version;\n    }\n  } else if (typeof version !== 'string') {\n    throw new TypeError('Invalid Version: ' + version);\n  }\n  if (version.length > MAX_LENGTH) {\n    throw new TypeError('version is longer than ' + MAX_LENGTH + ' characters');\n  }\n  if (!(this instanceof SemVer)) {\n    return new SemVer(version, options);\n  }\n  debug('SemVer', version, options);\n  this.options = options;\n  this.loose = !!options.loose;\n  var m = version.trim().match(options.loose ? safeRe[t.LOOSE] : safeRe[t.FULL]);\n  if (!m) {\n    throw new TypeError('Invalid Version: ' + version);\n  }\n  this.raw = version;\n\n  // these are actually numbers\n  this.major = +m[1];\n  this.minor = +m[2];\n  this.patch = +m[3];\n  if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n    throw new TypeError('Invalid major version');\n  }\n  if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n    throw new TypeError('Invalid minor version');\n  }\n  if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n    throw new TypeError('Invalid patch version');\n  }\n\n  // numberify any prerelease numeric ids\n  if (!m[4]) {\n    this.prerelease = [];\n  } else {\n    this.prerelease = m[4].split('.').map(function (id) {\n      if (/^[0-9]+$/.test(id)) {\n        var num = +id;\n        if (num >= 0 && num < MAX_SAFE_INTEGER) {\n          return num;\n        }\n      }\n      return id;\n    });\n  }\n  this.build = m[5] ? m[5].split('.') : [];\n  this.format();\n}\nSemVer.prototype.format = function () {\n  this.version = this.major + '.' + this.minor + '.' + this.patch;\n  if (this.prerelease.length) {\n    this.version += '-' + this.prerelease.join('.');\n  }\n  return this.version;\n};\nSemVer.prototype.toString = function () {\n  return this.version;\n};\nSemVer.prototype.compare = function (other) {\n  debug('SemVer.compare', this.version, this.options, other);\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options);\n  }\n  return this.compareMain(other) || this.comparePre(other);\n};\nSemVer.prototype.compareMain = function (other) {\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options);\n  }\n  return compareIdentifiers(this.major, other.major) || compareIdentifiers(this.minor, other.minor) || compareIdentifiers(this.patch, other.patch);\n};\nSemVer.prototype.comparePre = function (other) {\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options);\n  }\n\n  // NOT having a prerelease is > having one\n  if (this.prerelease.length && !other.prerelease.length) {\n    return -1;\n  } else if (!this.prerelease.length && other.prerelease.length) {\n    return 1;\n  } else if (!this.prerelease.length && !other.prerelease.length) {\n    return 0;\n  }\n  var i = 0;\n  do {\n    var a = this.prerelease[i];\n    var b = other.prerelease[i];\n    debug('prerelease compare', i, a, b);\n    if (a === undefined && b === undefined) {\n      return 0;\n    } else if (b === undefined) {\n      return 1;\n    } else if (a === undefined) {\n      return -1;\n    } else if (a === b) {\n      continue;\n    } else {\n      return compareIdentifiers(a, b);\n    }\n  } while (++i);\n};\nSemVer.prototype.compareBuild = function (other) {\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options);\n  }\n  var i = 0;\n  do {\n    var a = this.build[i];\n    var b = other.build[i];\n    debug('prerelease compare', i, a, b);\n    if (a === undefined && b === undefined) {\n      return 0;\n    } else if (b === undefined) {\n      return 1;\n    } else if (a === undefined) {\n      return -1;\n    } else if (a === b) {\n      continue;\n    } else {\n      return compareIdentifiers(a, b);\n    }\n  } while (++i);\n};\n\n// preminor will bump the version up to the next minor release, and immediately\n// down to pre-release. premajor and prepatch work the same way.\nSemVer.prototype.inc = function (release, identifier) {\n  switch (release) {\n    case 'premajor':\n      this.prerelease.length = 0;\n      this.patch = 0;\n      this.minor = 0;\n      this.major++;\n      this.inc('pre', identifier);\n      break;\n    case 'preminor':\n      this.prerelease.length = 0;\n      this.patch = 0;\n      this.minor++;\n      this.inc('pre', identifier);\n      break;\n    case 'prepatch':\n      // If this is already a prerelease, it will bump to the next version\n      // drop any prereleases that might already exist, since they are not\n      // relevant at this point.\n      this.prerelease.length = 0;\n      this.inc('patch', identifier);\n      this.inc('pre', identifier);\n      break;\n    // If the input is a non-prerelease version, this acts the same as\n    // prepatch.\n    case 'prerelease':\n      if (this.prerelease.length === 0) {\n        this.inc('patch', identifier);\n      }\n      this.inc('pre', identifier);\n      break;\n    case 'major':\n      // If this is a pre-major version, bump up to the same major version.\n      // Otherwise increment major.\n      // 1.0.0-5 bumps to 1.0.0\n      // 1.1.0 bumps to 2.0.0\n      if (this.minor !== 0 || this.patch !== 0 || this.prerelease.length === 0) {\n        this.major++;\n      }\n      this.minor = 0;\n      this.patch = 0;\n      this.prerelease = [];\n      break;\n    case 'minor':\n      // If this is a pre-minor version, bump up to the same minor version.\n      // Otherwise increment minor.\n      // 1.2.0-5 bumps to 1.2.0\n      // 1.2.1 bumps to 1.3.0\n      if (this.patch !== 0 || this.prerelease.length === 0) {\n        this.minor++;\n      }\n      this.patch = 0;\n      this.prerelease = [];\n      break;\n    case 'patch':\n      // If this is not a pre-release version, it will increment the patch.\n      // If it is a pre-release it will bump up to the same patch version.\n      // 1.2.0-5 patches to 1.2.0\n      // 1.2.0 patches to 1.2.1\n      if (this.prerelease.length === 0) {\n        this.patch++;\n      }\n      this.prerelease = [];\n      break;\n    // This probably shouldn't be used publicly.\n    // 1.0.0 \"pre\" would become 1.0.0-0 which is the wrong direction.\n    case 'pre':\n      if (this.prerelease.length === 0) {\n        this.prerelease = [0];\n      } else {\n        var i = this.prerelease.length;\n        while (--i >= 0) {\n          if (typeof this.prerelease[i] === 'number') {\n            this.prerelease[i]++;\n            i = -2;\n          }\n        }\n        if (i === -1) {\n          // didn't increment anything\n          this.prerelease.push(0);\n        }\n      }\n      if (identifier) {\n        // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n        // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n        if (this.prerelease[0] === identifier) {\n          if (isNaN(this.prerelease[1])) {\n            this.prerelease = [identifier, 0];\n          }\n        } else {\n          this.prerelease = [identifier, 0];\n        }\n      }\n      break;\n    default:\n      throw new Error('invalid increment argument: ' + release);\n  }\n  this.format();\n  this.raw = this.version;\n  return this;\n};\nexports.inc = inc;\nfunction inc(version, release, loose, identifier) {\n  if (typeof loose === 'string') {\n    identifier = loose;\n    loose = undefined;\n  }\n  try {\n    return new SemVer(version, loose).inc(release, identifier).version;\n  } catch (er) {\n    return null;\n  }\n}\nexports.diff = diff;\nfunction diff(version1, version2) {\n  if (eq(version1, version2)) {\n    return null;\n  } else {\n    var v1 = parse(version1);\n    var v2 = parse(version2);\n    var prefix = '';\n    if (v1.prerelease.length || v2.prerelease.length) {\n      prefix = 'pre';\n      var defaultResult = 'prerelease';\n    }\n    for (var key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return prefix + key;\n        }\n      }\n    }\n    return defaultResult; // may be undefined\n  }\n}\n\nexports.compareIdentifiers = compareIdentifiers;\nvar numeric = /^[0-9]+$/;\nfunction compareIdentifiers(a, b) {\n  var anum = numeric.test(a);\n  var bnum = numeric.test(b);\n  if (anum && bnum) {\n    a = +a;\n    b = +b;\n  }\n  return a === b ? 0 : anum && !bnum ? -1 : bnum && !anum ? 1 : a < b ? -1 : 1;\n}\nexports.rcompareIdentifiers = rcompareIdentifiers;\nfunction rcompareIdentifiers(a, b) {\n  return compareIdentifiers(b, a);\n}\nexports.major = major;\nfunction major(a, loose) {\n  return new SemVer(a, loose).major;\n}\nexports.minor = minor;\nfunction minor(a, loose) {\n  return new SemVer(a, loose).minor;\n}\nexports.patch = patch;\nfunction patch(a, loose) {\n  return new SemVer(a, loose).patch;\n}\nexports.compare = compare;\nfunction compare(a, b, loose) {\n  return new SemVer(a, loose).compare(new SemVer(b, loose));\n}\nexports.compareLoose = compareLoose;\nfunction compareLoose(a, b) {\n  return compare(a, b, true);\n}\nexports.compareBuild = compareBuild;\nfunction compareBuild(a, b, loose) {\n  var versionA = new SemVer(a, loose);\n  var versionB = new SemVer(b, loose);\n  return versionA.compare(versionB) || versionA.compareBuild(versionB);\n}\nexports.rcompare = rcompare;\nfunction rcompare(a, b, loose) {\n  return compare(b, a, loose);\n}\nexports.sort = sort;\nfunction sort(list, loose) {\n  return list.sort(function (a, b) {\n    return exports.compareBuild(a, b, loose);\n  });\n}\nexports.rsort = rsort;\nfunction rsort(list, loose) {\n  return list.sort(function (a, b) {\n    return exports.compareBuild(b, a, loose);\n  });\n}\nexports.gt = gt;\nfunction gt(a, b, loose) {\n  return compare(a, b, loose) > 0;\n}\nexports.lt = lt;\nfunction lt(a, b, loose) {\n  return compare(a, b, loose) < 0;\n}\nexports.eq = eq;\nfunction eq(a, b, loose) {\n  return compare(a, b, loose) === 0;\n}\nexports.neq = neq;\nfunction neq(a, b, loose) {\n  return compare(a, b, loose) !== 0;\n}\nexports.gte = gte;\nfunction gte(a, b, loose) {\n  return compare(a, b, loose) >= 0;\n}\nexports.lte = lte;\nfunction lte(a, b, loose) {\n  return compare(a, b, loose) <= 0;\n}\nexports.cmp = cmp;\nfunction cmp(a, op, b, loose) {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') a = a.version;\n      if (typeof b === 'object') b = b.version;\n      return a === b;\n    case '!==':\n      if (typeof a === 'object') a = a.version;\n      if (typeof b === 'object') b = b.version;\n      return a !== b;\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose);\n    case '!=':\n      return neq(a, b, loose);\n    case '>':\n      return gt(a, b, loose);\n    case '>=':\n      return gte(a, b, loose);\n    case '<':\n      return lt(a, b, loose);\n    case '<=':\n      return lte(a, b, loose);\n    default:\n      throw new TypeError('Invalid operator: ' + op);\n  }\n}\nexports.Comparator = Comparator;\nfunction Comparator(comp, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    };\n  }\n  if (comp instanceof Comparator) {\n    if (comp.loose === !!options.loose) {\n      return comp;\n    } else {\n      comp = comp.value;\n    }\n  }\n  if (!(this instanceof Comparator)) {\n    return new Comparator(comp, options);\n  }\n  comp = comp.trim().split(/\\s+/).join(' ');\n  debug('comparator', comp, options);\n  this.options = options;\n  this.loose = !!options.loose;\n  this.parse(comp);\n  if (this.semver === ANY) {\n    this.value = '';\n  } else {\n    this.value = this.operator + this.semver.version;\n  }\n  debug('comp', this);\n}\nvar ANY = {};\nComparator.prototype.parse = function (comp) {\n  var r = this.options.loose ? safeRe[t.COMPARATORLOOSE] : safeRe[t.COMPARATOR];\n  var m = comp.match(r);\n  if (!m) {\n    throw new TypeError('Invalid comparator: ' + comp);\n  }\n  this.operator = m[1] !== undefined ? m[1] : '';\n  if (this.operator === '=') {\n    this.operator = '';\n  }\n\n  // if it literally is just '>' or '' then allow anything.\n  if (!m[2]) {\n    this.semver = ANY;\n  } else {\n    this.semver = new SemVer(m[2], this.options.loose);\n  }\n};\nComparator.prototype.toString = function () {\n  return this.value;\n};\nComparator.prototype.test = function (version) {\n  debug('Comparator.test', version, this.options.loose);\n  if (this.semver === ANY || version === ANY) {\n    return true;\n  }\n  if (typeof version === 'string') {\n    try {\n      version = new SemVer(version, this.options);\n    } catch (er) {\n      return false;\n    }\n  }\n  return cmp(version, this.operator, this.semver, this.options);\n};\nComparator.prototype.intersects = function (comp, options) {\n  if (!(comp instanceof Comparator)) {\n    throw new TypeError('a Comparator is required');\n  }\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    };\n  }\n  var rangeTmp;\n  if (this.operator === '') {\n    if (this.value === '') {\n      return true;\n    }\n    rangeTmp = new Range(comp.value, options);\n    return satisfies(this.value, rangeTmp, options);\n  } else if (comp.operator === '') {\n    if (comp.value === '') {\n      return true;\n    }\n    rangeTmp = new Range(this.value, options);\n    return satisfies(comp.semver, rangeTmp, options);\n  }\n  var sameDirectionIncreasing = (this.operator === '>=' || this.operator === '>') && (comp.operator === '>=' || comp.operator === '>');\n  var sameDirectionDecreasing = (this.operator === '<=' || this.operator === '<') && (comp.operator === '<=' || comp.operator === '<');\n  var sameSemVer = this.semver.version === comp.semver.version;\n  var differentDirectionsInclusive = (this.operator === '>=' || this.operator === '<=') && (comp.operator === '>=' || comp.operator === '<=');\n  var oppositeDirectionsLessThan = cmp(this.semver, '<', comp.semver, options) && (this.operator === '>=' || this.operator === '>') && (comp.operator === '<=' || comp.operator === '<');\n  var oppositeDirectionsGreaterThan = cmp(this.semver, '>', comp.semver, options) && (this.operator === '<=' || this.operator === '<') && (comp.operator === '>=' || comp.operator === '>');\n  return sameDirectionIncreasing || sameDirectionDecreasing || sameSemVer && differentDirectionsInclusive || oppositeDirectionsLessThan || oppositeDirectionsGreaterThan;\n};\nexports.Range = Range;\nfunction Range(range, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    };\n  }\n  if (range instanceof Range) {\n    if (range.loose === !!options.loose && range.includePrerelease === !!options.includePrerelease) {\n      return range;\n    } else {\n      return new Range(range.raw, options);\n    }\n  }\n  if (range instanceof Comparator) {\n    return new Range(range.value, options);\n  }\n  if (!(this instanceof Range)) {\n    return new Range(range, options);\n  }\n  this.options = options;\n  this.loose = !!options.loose;\n  this.includePrerelease = !!options.includePrerelease;\n\n  // First reduce all whitespace as much as possible so we do not have to rely\n  // on potentially slow regexes like \\s*. This is then stored and used for\n  // future error messages as well.\n  this.raw = range.trim().split(/\\s+/).join(' ');\n\n  // First, split based on boolean or ||\n  this.set = this.raw.split('||').map(function (range) {\n    return this.parseRange(range.trim());\n  }, this).filter(function (c) {\n    // throw out any that are not relevant for whatever reason\n    return c.length;\n  });\n  if (!this.set.length) {\n    throw new TypeError('Invalid SemVer Range: ' + this.raw);\n  }\n  this.format();\n}\nRange.prototype.format = function () {\n  this.range = this.set.map(function (comps) {\n    return comps.join(' ').trim();\n  }).join('||').trim();\n  return this.range;\n};\nRange.prototype.toString = function () {\n  return this.range;\n};\nRange.prototype.parseRange = function (range) {\n  var loose = this.options.loose;\n  // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n  var hr = loose ? safeRe[t.HYPHENRANGELOOSE] : safeRe[t.HYPHENRANGE];\n  range = range.replace(hr, hyphenReplace);\n  debug('hyphen replace', range);\n  // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n  range = range.replace(safeRe[t.COMPARATORTRIM], comparatorTrimReplace);\n  debug('comparator trim', range, safeRe[t.COMPARATORTRIM]);\n\n  // `~ 1.2.3` => `~1.2.3`\n  range = range.replace(safeRe[t.TILDETRIM], tildeTrimReplace);\n\n  // `^ 1.2.3` => `^1.2.3`\n  range = range.replace(safeRe[t.CARETTRIM], caretTrimReplace);\n\n  // normalize spaces\n  range = range.split(/\\s+/).join(' ');\n\n  // At this point, the range is completely trimmed and\n  // ready to be split into comparators.\n\n  var compRe = loose ? safeRe[t.COMPARATORLOOSE] : safeRe[t.COMPARATOR];\n  var set = range.split(' ').map(function (comp) {\n    return parseComparator(comp, this.options);\n  }, this).join(' ').split(/\\s+/);\n  if (this.options.loose) {\n    // in loose mode, throw out any that are not valid comparators\n    set = set.filter(function (comp) {\n      return !!comp.match(compRe);\n    });\n  }\n  set = set.map(function (comp) {\n    return new Comparator(comp, this.options);\n  }, this);\n  return set;\n};\nRange.prototype.intersects = function (range, options) {\n  if (!(range instanceof Range)) {\n    throw new TypeError('a Range is required');\n  }\n  return this.set.some(function (thisComparators) {\n    return isSatisfiable(thisComparators, options) && range.set.some(function (rangeComparators) {\n      return isSatisfiable(rangeComparators, options) && thisComparators.every(function (thisComparator) {\n        return rangeComparators.every(function (rangeComparator) {\n          return thisComparator.intersects(rangeComparator, options);\n        });\n      });\n    });\n  });\n};\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nfunction isSatisfiable(comparators, options) {\n  var result = true;\n  var remainingComparators = comparators.slice();\n  var testComparator = remainingComparators.pop();\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every(function (otherComparator) {\n      return testComparator.intersects(otherComparator, options);\n    });\n    testComparator = remainingComparators.pop();\n  }\n  return result;\n}\n\n// Mostly just for testing and legacy API reasons\nexports.toComparators = toComparators;\nfunction toComparators(range, options) {\n  return new Range(range, options).set.map(function (comp) {\n    return comp.map(function (c) {\n      return c.value;\n    }).join(' ').trim().split(' ');\n  });\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nfunction parseComparator(comp, options) {\n  debug('comp', comp, options);\n  comp = replaceCarets(comp, options);\n  debug('caret', comp);\n  comp = replaceTildes(comp, options);\n  debug('tildes', comp);\n  comp = replaceXRanges(comp, options);\n  debug('xrange', comp);\n  comp = replaceStars(comp, options);\n  debug('stars', comp);\n  return comp;\n}\nfunction isX(id) {\n  return !id || id.toLowerCase() === 'x' || id === '*';\n}\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0\nfunction replaceTildes(comp, options) {\n  return comp.trim().split(/\\s+/).map(function (comp) {\n    return replaceTilde(comp, options);\n  }).join(' ');\n}\nfunction replaceTilde(comp, options) {\n  var r = options.loose ? safeRe[t.TILDELOOSE] : safeRe[t.TILDE];\n  return comp.replace(r, function (_, M, m, p, pr) {\n    debug('tilde', comp, _, M, m, p, pr);\n    var ret;\n    if (isX(M)) {\n      ret = '';\n    } else if (isX(m)) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n    } else if (pr) {\n      debug('replaceTilde pr', pr);\n      ret = '>=' + M + '.' + m + '.' + p + '-' + pr + ' <' + M + '.' + (+m + 1) + '.0';\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0\n      ret = '>=' + M + '.' + m + '.' + p + ' <' + M + '.' + (+m + 1) + '.0';\n    }\n    debug('tilde return', ret);\n    return ret;\n  });\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0\n// ^1.2.3 --> >=1.2.3 <2.0.0\n// ^1.2.0 --> >=1.2.0 <2.0.0\nfunction replaceCarets(comp, options) {\n  return comp.trim().split(/\\s+/).map(function (comp) {\n    return replaceCaret(comp, options);\n  }).join(' ');\n}\nfunction replaceCaret(comp, options) {\n  debug('caret', comp, options);\n  var r = options.loose ? safeRe[t.CARETLOOSE] : safeRe[t.CARET];\n  return comp.replace(r, function (_, M, m, p, pr) {\n    debug('caret', comp, _, M, m, p, pr);\n    var ret;\n    if (isX(M)) {\n      ret = '';\n    } else if (isX(m)) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n      } else {\n        ret = '>=' + M + '.' + m + '.0 <' + (+M + 1) + '.0.0';\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr);\n      if (M === '0') {\n        if (m === '0') {\n          ret = '>=' + M + '.' + m + '.' + p + '-' + pr + ' <' + M + '.' + m + '.' + (+p + 1);\n        } else {\n          ret = '>=' + M + '.' + m + '.' + p + '-' + pr + ' <' + M + '.' + (+m + 1) + '.0';\n        }\n      } else {\n        ret = '>=' + M + '.' + m + '.' + p + '-' + pr + ' <' + (+M + 1) + '.0.0';\n      }\n    } else {\n      debug('no pr');\n      if (M === '0') {\n        if (m === '0') {\n          ret = '>=' + M + '.' + m + '.' + p + ' <' + M + '.' + m + '.' + (+p + 1);\n        } else {\n          ret = '>=' + M + '.' + m + '.' + p + ' <' + M + '.' + (+m + 1) + '.0';\n        }\n      } else {\n        ret = '>=' + M + '.' + m + '.' + p + ' <' + (+M + 1) + '.0.0';\n      }\n    }\n    debug('caret return', ret);\n    return ret;\n  });\n}\nfunction replaceXRanges(comp, options) {\n  debug('replaceXRanges', comp, options);\n  return comp.split(/\\s+/).map(function (comp) {\n    return replaceXRange(comp, options);\n  }).join(' ');\n}\nfunction replaceXRange(comp, options) {\n  comp = comp.trim();\n  var r = options.loose ? safeRe[t.XRANGELOOSE] : safeRe[t.XRANGE];\n  return comp.replace(r, function (ret, gtlt, M, m, p, pr) {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr);\n    var xM = isX(M);\n    var xm = xM || isX(m);\n    var xp = xm || isX(p);\n    var anyX = xp;\n    if (gtlt === '=' && anyX) {\n      gtlt = '';\n    }\n\n    // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : '';\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0';\n      } else {\n        // nothing is forbidden\n        ret = '*';\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0;\n      }\n      p = 0;\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        // >1.2.3 => >= 1.2.4\n        gtlt = '>=';\n        if (xm) {\n          M = +M + 1;\n          m = 0;\n          p = 0;\n        } else {\n          m = +m + 1;\n          p = 0;\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<';\n        if (xm) {\n          M = +M + 1;\n        } else {\n          m = +m + 1;\n        }\n      }\n      ret = gtlt + M + '.' + m + '.' + p + pr;\n    } else if (xm) {\n      ret = '>=' + M + '.0.0' + pr + ' <' + (+M + 1) + '.0.0' + pr;\n    } else if (xp) {\n      ret = '>=' + M + '.' + m + '.0' + pr + ' <' + M + '.' + (+m + 1) + '.0' + pr;\n    }\n    debug('xRange return', ret);\n    return ret;\n  });\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nfunction replaceStars(comp, options) {\n  debug('replaceStars', comp, options);\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(safeRe[t.STAR], '');\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0\nfunction hyphenReplace($0, from, fM, fm, fp, fpr, fb, to, tM, tm, tp, tpr, tb) {\n  if (isX(fM)) {\n    from = '';\n  } else if (isX(fm)) {\n    from = '>=' + fM + '.0.0';\n  } else if (isX(fp)) {\n    from = '>=' + fM + '.' + fm + '.0';\n  } else {\n    from = '>=' + from;\n  }\n  if (isX(tM)) {\n    to = '';\n  } else if (isX(tm)) {\n    to = '<' + (+tM + 1) + '.0.0';\n  } else if (isX(tp)) {\n    to = '<' + tM + '.' + (+tm + 1) + '.0';\n  } else if (tpr) {\n    to = '<=' + tM + '.' + tm + '.' + tp + '-' + tpr;\n  } else {\n    to = '<=' + to;\n  }\n  return (from + ' ' + to).trim();\n}\n\n// if ANY of the sets match ALL of its comparators, then pass\nRange.prototype.test = function (version) {\n  if (!version) {\n    return false;\n  }\n  if (typeof version === 'string') {\n    try {\n      version = new SemVer(version, this.options);\n    } catch (er) {\n      return false;\n    }\n  }\n  for (var i = 0; i < this.set.length; i++) {\n    if (testSet(this.set[i], version, this.options)) {\n      return true;\n    }\n  }\n  return false;\n};\nfunction testSet(set, version, options) {\n  for (var i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false;\n    }\n  }\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (i = 0; i < set.length; i++) {\n      debug(set[i].semver);\n      if (set[i].semver === ANY) {\n        continue;\n      }\n      if (set[i].semver.prerelease.length > 0) {\n        var allowed = set[i].semver;\n        if (allowed.major === version.major && allowed.minor === version.minor && allowed.patch === version.patch) {\n          return true;\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false;\n  }\n  return true;\n}\nexports.satisfies = satisfies;\nfunction satisfies(version, range, options) {\n  try {\n    range = new Range(range, options);\n  } catch (er) {\n    return false;\n  }\n  return range.test(version);\n}\nexports.maxSatisfying = maxSatisfying;\nfunction maxSatisfying(versions, range, options) {\n  var max = null;\n  var maxSV = null;\n  try {\n    var rangeObj = new Range(range, options);\n  } catch (er) {\n    return null;\n  }\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v;\n        maxSV = new SemVer(max, options);\n      }\n    }\n  });\n  return max;\n}\nexports.minSatisfying = minSatisfying;\nfunction minSatisfying(versions, range, options) {\n  var min = null;\n  var minSV = null;\n  try {\n    var rangeObj = new Range(range, options);\n  } catch (er) {\n    return null;\n  }\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v;\n        minSV = new SemVer(min, options);\n      }\n    }\n  });\n  return min;\n}\nexports.minVersion = minVersion;\nfunction minVersion(range, loose) {\n  range = new Range(range, loose);\n  var minver = new SemVer('0.0.0');\n  if (range.test(minver)) {\n    return minver;\n  }\n  minver = new SemVer('0.0.0-0');\n  if (range.test(minver)) {\n    return minver;\n  }\n  minver = null;\n  for (var i = 0; i < range.set.length; ++i) {\n    var comparators = range.set[i];\n    comparators.forEach(function (comparator) {\n      // Clone to avoid manipulating the comparator's semver object.\n      var compver = new SemVer(comparator.semver.version);\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++;\n          } else {\n            compver.prerelease.push(0);\n          }\n          compver.raw = compver.format();\n        /* fallthrough */\n        case '':\n        case '>=':\n          if (!minver || gt(minver, compver)) {\n            minver = compver;\n          }\n          break;\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break;\n        /* istanbul ignore next */\n        default:\n          throw new Error('Unexpected operation: ' + comparator.operator);\n      }\n    });\n  }\n  if (minver && range.test(minver)) {\n    return minver;\n  }\n  return null;\n}\nexports.validRange = validRange;\nfunction validRange(range, options) {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*';\n  } catch (er) {\n    return null;\n  }\n}\n\n// Determine if version is less than all the versions possible in the range\nexports.ltr = ltr;\nfunction ltr(version, range, options) {\n  return outside(version, range, '<', options);\n}\n\n// Determine if version is greater than all the versions possible in the range.\nexports.gtr = gtr;\nfunction gtr(version, range, options) {\n  return outside(version, range, '>', options);\n}\nexports.outside = outside;\nfunction outside(version, range, hilo, options) {\n  version = new SemVer(version, options);\n  range = new Range(range, options);\n  var gtfn, ltefn, ltfn, comp, ecomp;\n  switch (hilo) {\n    case '>':\n      gtfn = gt;\n      ltefn = lte;\n      ltfn = lt;\n      comp = '>';\n      ecomp = '>=';\n      break;\n    case '<':\n      gtfn = lt;\n      ltefn = gte;\n      ltfn = gt;\n      comp = '<';\n      ecomp = '<=';\n      break;\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"');\n  }\n\n  // If it satisifes the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false;\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (var i = 0; i < range.set.length; ++i) {\n    var comparators = range.set[i];\n    var high = null;\n    var low = null;\n    comparators.forEach(function (comparator) {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0');\n      }\n      high = high || comparator;\n      low = low || comparator;\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator;\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator;\n      }\n    });\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false;\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) && ltefn(version, low.semver)) {\n      return false;\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false;\n    }\n  }\n  return true;\n}\nexports.prerelease = prerelease;\nfunction prerelease(version, options) {\n  var parsed = parse(version, options);\n  return parsed && parsed.prerelease.length ? parsed.prerelease : null;\n}\nexports.intersects = intersects;\nfunction intersects(r1, r2, options) {\n  r1 = new Range(r1, options);\n  r2 = new Range(r2, options);\n  return r1.intersects(r2);\n}\nexports.coerce = coerce;\nfunction coerce(version, options) {\n  if (version instanceof SemVer) {\n    return version;\n  }\n  if (typeof version === 'number') {\n    version = String(version);\n  }\n  if (typeof version !== 'string') {\n    return null;\n  }\n  options = options || {};\n  var match = null;\n  if (!options.rtl) {\n    match = version.match(safeRe[t.COERCE]);\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    var next;\n    while ((next = safeRe[t.COERCERTL].exec(version)) && (!match || match.index + match[0].length !== version.length)) {\n      if (!match || next.index + next[0].length !== match.index + match[0].length) {\n        match = next;\n      }\n      safeRe[t.COERCERTL].lastIndex = next.index + next[1].length + next[2].length;\n    }\n    // leave it in a clean state\n    safeRe[t.COERCERTL].lastIndex = -1;\n  }\n  if (match === null) {\n    return null;\n  }\n  return parse(match[2] + '.' + (match[3] || '0') + '.' + (match[4] || '0'), options);\n}","map":{"version":3,"names":["exports","module","SemVer","debug","process","env","NODE_DEBUG","test","args","Array","prototype","slice","call","arguments","unshift","console","log","apply","SEMVER_SPEC_VERSION","MAX_LENGTH","MAX_SAFE_INTEGER","Number","MAX_SAFE_COMPONENT_LENGTH","MAX_SAFE_BUILD_LENGTH","re","safeRe","src","t","tokens","R","tok","n","LETTERDASHNUMBER","safeRegexReplacements","makeSafeRe","value","i","length","token","max","split","join","NUMERICIDENTIFIER","NUMERICIDENTIFIERLOOSE","NONNUMERICIDENTIFIER","MAINVERSION","MAINVERSIONLOOSE","PRERELEASEIDENTIFIER","PRERELEASEIDENTIFIERLOOSE","PRERELEASE","PRERELEASELOOSE","BUILDIDENTIFIER","BUILD","FULLPLAIN","FULL","LOOSEPLAIN","LOOSE","GTLT","XRANGEIDENTIFIERLOOSE","XRANGEIDENTIFIER","XRANGEPLAIN","XRANGEPLAINLOOSE","XRANGE","XRANGELOOSE","COERCE","COERCERTL","RegExp","LONETILDE","TILDETRIM","tildeTrimReplace","TILDE","TILDELOOSE","LONECARET","CARETTRIM","caretTrimReplace","CARET","CARETLOOSE","COMPARATORLOOSE","COMPARATOR","COMPARATORTRIM","comparatorTrimReplace","HYPHENRANGE","HYPHENRANGELOOSE","STAR","parse","version","options","loose","includePrerelease","r","er","valid","v","clean","s","trim","replace","TypeError","m","match","raw","major","minor","patch","prerelease","map","id","num","build","format","toString","compare","other","compareMain","comparePre","compareIdentifiers","a","b","undefined","compareBuild","inc","release","identifier","push","isNaN","Error","diff","version1","version2","eq","v1","v2","prefix","defaultResult","key","numeric","anum","bnum","rcompareIdentifiers","compareLoose","versionA","versionB","rcompare","sort","list","rsort","gt","lt","neq","gte","lte","cmp","op","Comparator","comp","semver","ANY","operator","intersects","rangeTmp","Range","satisfies","sameDirectionIncreasing","sameDirectionDecreasing","sameSemVer","differentDirectionsInclusive","oppositeDirectionsLessThan","oppositeDirectionsGreaterThan","range","set","parseRange","filter","c","comps","hr","hyphenReplace","compRe","parseComparator","some","thisComparators","isSatisfiable","rangeComparators","every","thisComparator","rangeComparator","comparators","result","remainingComparators","testComparator","pop","otherComparator","toComparators","replaceCarets","replaceTildes","replaceXRanges","replaceStars","isX","toLowerCase","replaceTilde","_","M","p","pr","ret","replaceCaret","replaceXRange","gtlt","xM","xm","xp","anyX","$0","from","fM","fm","fp","fpr","fb","to","tM","tm","tp","tpr","tb","testSet","allowed","maxSatisfying","versions","maxSV","rangeObj","forEach","minSatisfying","min","minSV","minVersion","minver","comparator","compver","validRange","ltr","outside","gtr","hilo","gtfn","ltefn","ltfn","ecomp","high","low","parsed","r1","r2","coerce","String","rtl","next","exec","index","lastIndex"],"sources":["C:/Users/Ryan/Documents/school/fall 2023/cmpe 133/project/CookChad/frontend/node_modules/make-dir/node_modules/semver/semver.js"],"sourcesContent":["exports = module.exports = SemVer\r\n\r\nvar debug\r\n/* istanbul ignore next */\r\nif (typeof process === 'object' &&\r\n    process.env &&\r\n    process.env.NODE_DEBUG &&\r\n    /\\bsemver\\b/i.test(process.env.NODE_DEBUG)) {\r\n  debug = function () {\r\n    var args = Array.prototype.slice.call(arguments, 0)\r\n    args.unshift('SEMVER')\r\n    console.log.apply(console, args)\r\n  }\r\n} else {\r\n  debug = function () {}\r\n}\r\n\r\n// Note: this is the semver.org version of the spec that it implements\r\n// Not necessarily the package version of this code.\r\nexports.SEMVER_SPEC_VERSION = '2.0.0'\r\n\r\nvar MAX_LENGTH = 256\r\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\r\n  /* istanbul ignore next */ 9007199254740991\r\n\r\n// Max safe segment length for coercion.\r\nvar MAX_SAFE_COMPONENT_LENGTH = 16\r\n\r\nvar MAX_SAFE_BUILD_LENGTH = MAX_LENGTH - 6\r\n\r\n// The actual regexps go on exports.re\r\nvar re = exports.re = []\r\nvar safeRe = exports.safeRe = []\r\nvar src = exports.src = []\r\nvar t = exports.tokens = {}\r\nvar R = 0\r\n\r\nfunction tok (n) {\r\n  t[n] = R++\r\n}\r\n\r\nvar LETTERDASHNUMBER = '[a-zA-Z0-9-]'\r\n\r\n// Replace some greedy regex tokens to prevent regex dos issues. These regex are\r\n// used internally via the safeRe object since all inputs in this library get\r\n// normalized first to trim and collapse all extra whitespace. The original\r\n// regexes are exported for userland consumption and lower level usage. A\r\n// future breaking change could export the safer regex only with a note that\r\n// all input should have extra whitespace removed.\r\nvar safeRegexReplacements = [\r\n  ['\\\\s', 1],\r\n  ['\\\\d', MAX_LENGTH],\r\n  [LETTERDASHNUMBER, MAX_SAFE_BUILD_LENGTH],\r\n]\r\n\r\nfunction makeSafeRe (value) {\r\n  for (var i = 0; i < safeRegexReplacements.length; i++) {\r\n    var token = safeRegexReplacements[i][0]\r\n    var max = safeRegexReplacements[i][1]\r\n    value = value\r\n      .split(token + '*').join(token + '{0,' + max + '}')\r\n      .split(token + '+').join(token + '{1,' + max + '}')\r\n  }\r\n  return value\r\n}\r\n\r\n// The following Regular Expressions can be used for tokenizing,\r\n// validating, and parsing SemVer version strings.\r\n\r\n// ## Numeric Identifier\r\n// A single `0`, or a non-zero digit followed by zero or more digits.\r\n\r\ntok('NUMERICIDENTIFIER')\r\nsrc[t.NUMERICIDENTIFIER] = '0|[1-9]\\\\d*'\r\ntok('NUMERICIDENTIFIERLOOSE')\r\nsrc[t.NUMERICIDENTIFIERLOOSE] = '\\\\d+'\r\n\r\n// ## Non-numeric Identifier\r\n// Zero or more digits, followed by a letter or hyphen, and then zero or\r\n// more letters, digits, or hyphens.\r\n\r\ntok('NONNUMERICIDENTIFIER')\r\nsrc[t.NONNUMERICIDENTIFIER] = '\\\\d*[a-zA-Z-]' + LETTERDASHNUMBER + '*'\r\n\r\n// ## Main Version\r\n// Three dot-separated numeric identifiers.\r\n\r\ntok('MAINVERSION')\r\nsrc[t.MAINVERSION] = '(' + src[t.NUMERICIDENTIFIER] + ')\\\\.' +\r\n                   '(' + src[t.NUMERICIDENTIFIER] + ')\\\\.' +\r\n                   '(' + src[t.NUMERICIDENTIFIER] + ')'\r\n\r\ntok('MAINVERSIONLOOSE')\r\nsrc[t.MAINVERSIONLOOSE] = '(' + src[t.NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\r\n                        '(' + src[t.NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\r\n                        '(' + src[t.NUMERICIDENTIFIERLOOSE] + ')'\r\n\r\n// ## Pre-release Version Identifier\r\n// A numeric identifier, or a non-numeric identifier.\r\n\r\ntok('PRERELEASEIDENTIFIER')\r\nsrc[t.PRERELEASEIDENTIFIER] = '(?:' + src[t.NUMERICIDENTIFIER] +\r\n                            '|' + src[t.NONNUMERICIDENTIFIER] + ')'\r\n\r\ntok('PRERELEASEIDENTIFIERLOOSE')\r\nsrc[t.PRERELEASEIDENTIFIERLOOSE] = '(?:' + src[t.NUMERICIDENTIFIERLOOSE] +\r\n                                 '|' + src[t.NONNUMERICIDENTIFIER] + ')'\r\n\r\n// ## Pre-release Version\r\n// Hyphen, followed by one or more dot-separated pre-release version\r\n// identifiers.\r\n\r\ntok('PRERELEASE')\r\nsrc[t.PRERELEASE] = '(?:-(' + src[t.PRERELEASEIDENTIFIER] +\r\n                  '(?:\\\\.' + src[t.PRERELEASEIDENTIFIER] + ')*))'\r\n\r\ntok('PRERELEASELOOSE')\r\nsrc[t.PRERELEASELOOSE] = '(?:-?(' + src[t.PRERELEASEIDENTIFIERLOOSE] +\r\n                       '(?:\\\\.' + src[t.PRERELEASEIDENTIFIERLOOSE] + ')*))'\r\n\r\n// ## Build Metadata Identifier\r\n// Any combination of digits, letters, or hyphens.\r\n\r\ntok('BUILDIDENTIFIER')\r\nsrc[t.BUILDIDENTIFIER] = LETTERDASHNUMBER + '+'\r\n\r\n// ## Build Metadata\r\n// Plus sign, followed by one or more period-separated build metadata\r\n// identifiers.\r\n\r\ntok('BUILD')\r\nsrc[t.BUILD] = '(?:\\\\+(' + src[t.BUILDIDENTIFIER] +\r\n             '(?:\\\\.' + src[t.BUILDIDENTIFIER] + ')*))'\r\n\r\n// ## Full Version String\r\n// A main version, followed optionally by a pre-release version and\r\n// build metadata.\r\n\r\n// Note that the only major, minor, patch, and pre-release sections of\r\n// the version string are capturing groups.  The build metadata is not a\r\n// capturing group, because it should not ever be used in version\r\n// comparison.\r\n\r\ntok('FULL')\r\ntok('FULLPLAIN')\r\nsrc[t.FULLPLAIN] = 'v?' + src[t.MAINVERSION] +\r\n                  src[t.PRERELEASE] + '?' +\r\n                  src[t.BUILD] + '?'\r\n\r\nsrc[t.FULL] = '^' + src[t.FULLPLAIN] + '$'\r\n\r\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\r\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\r\n// common in the npm registry.\r\ntok('LOOSEPLAIN')\r\nsrc[t.LOOSEPLAIN] = '[v=\\\\s]*' + src[t.MAINVERSIONLOOSE] +\r\n                  src[t.PRERELEASELOOSE] + '?' +\r\n                  src[t.BUILD] + '?'\r\n\r\ntok('LOOSE')\r\nsrc[t.LOOSE] = '^' + src[t.LOOSEPLAIN] + '$'\r\n\r\ntok('GTLT')\r\nsrc[t.GTLT] = '((?:<|>)?=?)'\r\n\r\n// Something like \"2.*\" or \"1.2.x\".\r\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\r\n// Only the first item is strictly required.\r\ntok('XRANGEIDENTIFIERLOOSE')\r\nsrc[t.XRANGEIDENTIFIERLOOSE] = src[t.NUMERICIDENTIFIERLOOSE] + '|x|X|\\\\*'\r\ntok('XRANGEIDENTIFIER')\r\nsrc[t.XRANGEIDENTIFIER] = src[t.NUMERICIDENTIFIER] + '|x|X|\\\\*'\r\n\r\ntok('XRANGEPLAIN')\r\nsrc[t.XRANGEPLAIN] = '[v=\\\\s]*(' + src[t.XRANGEIDENTIFIER] + ')' +\r\n                   '(?:\\\\.(' + src[t.XRANGEIDENTIFIER] + ')' +\r\n                   '(?:\\\\.(' + src[t.XRANGEIDENTIFIER] + ')' +\r\n                   '(?:' + src[t.PRERELEASE] + ')?' +\r\n                   src[t.BUILD] + '?' +\r\n                   ')?)?'\r\n\r\ntok('XRANGEPLAINLOOSE')\r\nsrc[t.XRANGEPLAINLOOSE] = '[v=\\\\s]*(' + src[t.XRANGEIDENTIFIERLOOSE] + ')' +\r\n                        '(?:\\\\.(' + src[t.XRANGEIDENTIFIERLOOSE] + ')' +\r\n                        '(?:\\\\.(' + src[t.XRANGEIDENTIFIERLOOSE] + ')' +\r\n                        '(?:' + src[t.PRERELEASELOOSE] + ')?' +\r\n                        src[t.BUILD] + '?' +\r\n                        ')?)?'\r\n\r\ntok('XRANGE')\r\nsrc[t.XRANGE] = '^' + src[t.GTLT] + '\\\\s*' + src[t.XRANGEPLAIN] + '$'\r\ntok('XRANGELOOSE')\r\nsrc[t.XRANGELOOSE] = '^' + src[t.GTLT] + '\\\\s*' + src[t.XRANGEPLAINLOOSE] + '$'\r\n\r\n// Coercion.\r\n// Extract anything that could conceivably be a part of a valid semver\r\ntok('COERCE')\r\nsrc[t.COERCE] = '(^|[^\\\\d])' +\r\n              '(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '})' +\r\n              '(?:\\\\.(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +\r\n              '(?:\\\\.(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +\r\n              '(?:$|[^\\\\d])'\r\ntok('COERCERTL')\r\nre[t.COERCERTL] = new RegExp(src[t.COERCE], 'g')\r\nsafeRe[t.COERCERTL] = new RegExp(makeSafeRe(src[t.COERCE]), 'g')\r\n\r\n// Tilde ranges.\r\n// Meaning is \"reasonably at or greater than\"\r\ntok('LONETILDE')\r\nsrc[t.LONETILDE] = '(?:~>?)'\r\n\r\ntok('TILDETRIM')\r\nsrc[t.TILDETRIM] = '(\\\\s*)' + src[t.LONETILDE] + '\\\\s+'\r\nre[t.TILDETRIM] = new RegExp(src[t.TILDETRIM], 'g')\r\nsafeRe[t.TILDETRIM] = new RegExp(makeSafeRe(src[t.TILDETRIM]), 'g')\r\nvar tildeTrimReplace = '$1~'\r\n\r\ntok('TILDE')\r\nsrc[t.TILDE] = '^' + src[t.LONETILDE] + src[t.XRANGEPLAIN] + '$'\r\ntok('TILDELOOSE')\r\nsrc[t.TILDELOOSE] = '^' + src[t.LONETILDE] + src[t.XRANGEPLAINLOOSE] + '$'\r\n\r\n// Caret ranges.\r\n// Meaning is \"at least and backwards compatible with\"\r\ntok('LONECARET')\r\nsrc[t.LONECARET] = '(?:\\\\^)'\r\n\r\ntok('CARETTRIM')\r\nsrc[t.CARETTRIM] = '(\\\\s*)' + src[t.LONECARET] + '\\\\s+'\r\nre[t.CARETTRIM] = new RegExp(src[t.CARETTRIM], 'g')\r\nsafeRe[t.CARETTRIM] = new RegExp(makeSafeRe(src[t.CARETTRIM]), 'g')\r\nvar caretTrimReplace = '$1^'\r\n\r\ntok('CARET')\r\nsrc[t.CARET] = '^' + src[t.LONECARET] + src[t.XRANGEPLAIN] + '$'\r\ntok('CARETLOOSE')\r\nsrc[t.CARETLOOSE] = '^' + src[t.LONECARET] + src[t.XRANGEPLAINLOOSE] + '$'\r\n\r\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\r\ntok('COMPARATORLOOSE')\r\nsrc[t.COMPARATORLOOSE] = '^' + src[t.GTLT] + '\\\\s*(' + src[t.LOOSEPLAIN] + ')$|^$'\r\ntok('COMPARATOR')\r\nsrc[t.COMPARATOR] = '^' + src[t.GTLT] + '\\\\s*(' + src[t.FULLPLAIN] + ')$|^$'\r\n\r\n// An expression to strip any whitespace between the gtlt and the thing\r\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\r\ntok('COMPARATORTRIM')\r\nsrc[t.COMPARATORTRIM] = '(\\\\s*)' + src[t.GTLT] +\r\n                      '\\\\s*(' + src[t.LOOSEPLAIN] + '|' + src[t.XRANGEPLAIN] + ')'\r\n\r\n// this one has to use the /g flag\r\nre[t.COMPARATORTRIM] = new RegExp(src[t.COMPARATORTRIM], 'g')\r\nsafeRe[t.COMPARATORTRIM] = new RegExp(makeSafeRe(src[t.COMPARATORTRIM]), 'g')\r\nvar comparatorTrimReplace = '$1$2$3'\r\n\r\n// Something like `1.2.3 - 1.2.4`\r\n// Note that these all use the loose form, because they'll be\r\n// checked against either the strict or loose comparator form\r\n// later.\r\ntok('HYPHENRANGE')\r\nsrc[t.HYPHENRANGE] = '^\\\\s*(' + src[t.XRANGEPLAIN] + ')' +\r\n                   '\\\\s+-\\\\s+' +\r\n                   '(' + src[t.XRANGEPLAIN] + ')' +\r\n                   '\\\\s*$'\r\n\r\ntok('HYPHENRANGELOOSE')\r\nsrc[t.HYPHENRANGELOOSE] = '^\\\\s*(' + src[t.XRANGEPLAINLOOSE] + ')' +\r\n                        '\\\\s+-\\\\s+' +\r\n                        '(' + src[t.XRANGEPLAINLOOSE] + ')' +\r\n                        '\\\\s*$'\r\n\r\n// Star ranges basically just allow anything at all.\r\ntok('STAR')\r\nsrc[t.STAR] = '(<|>)?=?\\\\s*\\\\*'\r\n\r\n// Compile to actual regexp objects.\r\n// All are flag-free, unless they were created above with a flag.\r\nfor (var i = 0; i < R; i++) {\r\n  debug(i, src[i])\r\n  if (!re[i]) {\r\n    re[i] = new RegExp(src[i])\r\n\r\n    // Replace all greedy whitespace to prevent regex dos issues. These regex are\r\n    // used internally via the safeRe object since all inputs in this library get\r\n    // normalized first to trim and collapse all extra whitespace. The original\r\n    // regexes are exported for userland consumption and lower level usage. A\r\n    // future breaking change could export the safer regex only with a note that\r\n    // all input should have extra whitespace removed.\r\n    safeRe[i] = new RegExp(makeSafeRe(src[i]))\r\n  }\r\n}\r\n\r\nexports.parse = parse\r\nfunction parse (version, options) {\r\n  if (!options || typeof options !== 'object') {\r\n    options = {\r\n      loose: !!options,\r\n      includePrerelease: false\r\n    }\r\n  }\r\n\r\n  if (version instanceof SemVer) {\r\n    return version\r\n  }\r\n\r\n  if (typeof version !== 'string') {\r\n    return null\r\n  }\r\n\r\n  if (version.length > MAX_LENGTH) {\r\n    return null\r\n  }\r\n\r\n  var r = options.loose ? safeRe[t.LOOSE] : safeRe[t.FULL]\r\n  if (!r.test(version)) {\r\n    return null\r\n  }\r\n\r\n  try {\r\n    return new SemVer(version, options)\r\n  } catch (er) {\r\n    return null\r\n  }\r\n}\r\n\r\nexports.valid = valid\r\nfunction valid (version, options) {\r\n  var v = parse(version, options)\r\n  return v ? v.version : null\r\n}\r\n\r\nexports.clean = clean\r\nfunction clean (version, options) {\r\n  var s = parse(version.trim().replace(/^[=v]+/, ''), options)\r\n  return s ? s.version : null\r\n}\r\n\r\nexports.SemVer = SemVer\r\n\r\nfunction SemVer (version, options) {\r\n  if (!options || typeof options !== 'object') {\r\n    options = {\r\n      loose: !!options,\r\n      includePrerelease: false\r\n    }\r\n  }\r\n  if (version instanceof SemVer) {\r\n    if (version.loose === options.loose) {\r\n      return version\r\n    } else {\r\n      version = version.version\r\n    }\r\n  } else if (typeof version !== 'string') {\r\n    throw new TypeError('Invalid Version: ' + version)\r\n  }\r\n\r\n  if (version.length > MAX_LENGTH) {\r\n    throw new TypeError('version is longer than ' + MAX_LENGTH + ' characters')\r\n  }\r\n\r\n  if (!(this instanceof SemVer)) {\r\n    return new SemVer(version, options)\r\n  }\r\n\r\n  debug('SemVer', version, options)\r\n  this.options = options\r\n  this.loose = !!options.loose\r\n\r\n  var m = version.trim().match(options.loose ? safeRe[t.LOOSE] : safeRe[t.FULL])\r\n\r\n  if (!m) {\r\n    throw new TypeError('Invalid Version: ' + version)\r\n  }\r\n\r\n  this.raw = version\r\n\r\n  // these are actually numbers\r\n  this.major = +m[1]\r\n  this.minor = +m[2]\r\n  this.patch = +m[3]\r\n\r\n  if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\r\n    throw new TypeError('Invalid major version')\r\n  }\r\n\r\n  if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\r\n    throw new TypeError('Invalid minor version')\r\n  }\r\n\r\n  if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\r\n    throw new TypeError('Invalid patch version')\r\n  }\r\n\r\n  // numberify any prerelease numeric ids\r\n  if (!m[4]) {\r\n    this.prerelease = []\r\n  } else {\r\n    this.prerelease = m[4].split('.').map(function (id) {\r\n      if (/^[0-9]+$/.test(id)) {\r\n        var num = +id\r\n        if (num >= 0 && num < MAX_SAFE_INTEGER) {\r\n          return num\r\n        }\r\n      }\r\n      return id\r\n    })\r\n  }\r\n\r\n  this.build = m[5] ? m[5].split('.') : []\r\n  this.format()\r\n}\r\n\r\nSemVer.prototype.format = function () {\r\n  this.version = this.major + '.' + this.minor + '.' + this.patch\r\n  if (this.prerelease.length) {\r\n    this.version += '-' + this.prerelease.join('.')\r\n  }\r\n  return this.version\r\n}\r\n\r\nSemVer.prototype.toString = function () {\r\n  return this.version\r\n}\r\n\r\nSemVer.prototype.compare = function (other) {\r\n  debug('SemVer.compare', this.version, this.options, other)\r\n  if (!(other instanceof SemVer)) {\r\n    other = new SemVer(other, this.options)\r\n  }\r\n\r\n  return this.compareMain(other) || this.comparePre(other)\r\n}\r\n\r\nSemVer.prototype.compareMain = function (other) {\r\n  if (!(other instanceof SemVer)) {\r\n    other = new SemVer(other, this.options)\r\n  }\r\n\r\n  return compareIdentifiers(this.major, other.major) ||\r\n         compareIdentifiers(this.minor, other.minor) ||\r\n         compareIdentifiers(this.patch, other.patch)\r\n}\r\n\r\nSemVer.prototype.comparePre = function (other) {\r\n  if (!(other instanceof SemVer)) {\r\n    other = new SemVer(other, this.options)\r\n  }\r\n\r\n  // NOT having a prerelease is > having one\r\n  if (this.prerelease.length && !other.prerelease.length) {\r\n    return -1\r\n  } else if (!this.prerelease.length && other.prerelease.length) {\r\n    return 1\r\n  } else if (!this.prerelease.length && !other.prerelease.length) {\r\n    return 0\r\n  }\r\n\r\n  var i = 0\r\n  do {\r\n    var a = this.prerelease[i]\r\n    var b = other.prerelease[i]\r\n    debug('prerelease compare', i, a, b)\r\n    if (a === undefined && b === undefined) {\r\n      return 0\r\n    } else if (b === undefined) {\r\n      return 1\r\n    } else if (a === undefined) {\r\n      return -1\r\n    } else if (a === b) {\r\n      continue\r\n    } else {\r\n      return compareIdentifiers(a, b)\r\n    }\r\n  } while (++i)\r\n}\r\n\r\nSemVer.prototype.compareBuild = function (other) {\r\n  if (!(other instanceof SemVer)) {\r\n    other = new SemVer(other, this.options)\r\n  }\r\n\r\n  var i = 0\r\n  do {\r\n    var a = this.build[i]\r\n    var b = other.build[i]\r\n    debug('prerelease compare', i, a, b)\r\n    if (a === undefined && b === undefined) {\r\n      return 0\r\n    } else if (b === undefined) {\r\n      return 1\r\n    } else if (a === undefined) {\r\n      return -1\r\n    } else if (a === b) {\r\n      continue\r\n    } else {\r\n      return compareIdentifiers(a, b)\r\n    }\r\n  } while (++i)\r\n}\r\n\r\n// preminor will bump the version up to the next minor release, and immediately\r\n// down to pre-release. premajor and prepatch work the same way.\r\nSemVer.prototype.inc = function (release, identifier) {\r\n  switch (release) {\r\n    case 'premajor':\r\n      this.prerelease.length = 0\r\n      this.patch = 0\r\n      this.minor = 0\r\n      this.major++\r\n      this.inc('pre', identifier)\r\n      break\r\n    case 'preminor':\r\n      this.prerelease.length = 0\r\n      this.patch = 0\r\n      this.minor++\r\n      this.inc('pre', identifier)\r\n      break\r\n    case 'prepatch':\r\n      // If this is already a prerelease, it will bump to the next version\r\n      // drop any prereleases that might already exist, since they are not\r\n      // relevant at this point.\r\n      this.prerelease.length = 0\r\n      this.inc('patch', identifier)\r\n      this.inc('pre', identifier)\r\n      break\r\n    // If the input is a non-prerelease version, this acts the same as\r\n    // prepatch.\r\n    case 'prerelease':\r\n      if (this.prerelease.length === 0) {\r\n        this.inc('patch', identifier)\r\n      }\r\n      this.inc('pre', identifier)\r\n      break\r\n\r\n    case 'major':\r\n      // If this is a pre-major version, bump up to the same major version.\r\n      // Otherwise increment major.\r\n      // 1.0.0-5 bumps to 1.0.0\r\n      // 1.1.0 bumps to 2.0.0\r\n      if (this.minor !== 0 ||\r\n          this.patch !== 0 ||\r\n          this.prerelease.length === 0) {\r\n        this.major++\r\n      }\r\n      this.minor = 0\r\n      this.patch = 0\r\n      this.prerelease = []\r\n      break\r\n    case 'minor':\r\n      // If this is a pre-minor version, bump up to the same minor version.\r\n      // Otherwise increment minor.\r\n      // 1.2.0-5 bumps to 1.2.0\r\n      // 1.2.1 bumps to 1.3.0\r\n      if (this.patch !== 0 || this.prerelease.length === 0) {\r\n        this.minor++\r\n      }\r\n      this.patch = 0\r\n      this.prerelease = []\r\n      break\r\n    case 'patch':\r\n      // If this is not a pre-release version, it will increment the patch.\r\n      // If it is a pre-release it will bump up to the same patch version.\r\n      // 1.2.0-5 patches to 1.2.0\r\n      // 1.2.0 patches to 1.2.1\r\n      if (this.prerelease.length === 0) {\r\n        this.patch++\r\n      }\r\n      this.prerelease = []\r\n      break\r\n    // This probably shouldn't be used publicly.\r\n    // 1.0.0 \"pre\" would become 1.0.0-0 which is the wrong direction.\r\n    case 'pre':\r\n      if (this.prerelease.length === 0) {\r\n        this.prerelease = [0]\r\n      } else {\r\n        var i = this.prerelease.length\r\n        while (--i >= 0) {\r\n          if (typeof this.prerelease[i] === 'number') {\r\n            this.prerelease[i]++\r\n            i = -2\r\n          }\r\n        }\r\n        if (i === -1) {\r\n          // didn't increment anything\r\n          this.prerelease.push(0)\r\n        }\r\n      }\r\n      if (identifier) {\r\n        // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\r\n        // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\r\n        if (this.prerelease[0] === identifier) {\r\n          if (isNaN(this.prerelease[1])) {\r\n            this.prerelease = [identifier, 0]\r\n          }\r\n        } else {\r\n          this.prerelease = [identifier, 0]\r\n        }\r\n      }\r\n      break\r\n\r\n    default:\r\n      throw new Error('invalid increment argument: ' + release)\r\n  }\r\n  this.format()\r\n  this.raw = this.version\r\n  return this\r\n}\r\n\r\nexports.inc = inc\r\nfunction inc (version, release, loose, identifier) {\r\n  if (typeof (loose) === 'string') {\r\n    identifier = loose\r\n    loose = undefined\r\n  }\r\n\r\n  try {\r\n    return new SemVer(version, loose).inc(release, identifier).version\r\n  } catch (er) {\r\n    return null\r\n  }\r\n}\r\n\r\nexports.diff = diff\r\nfunction diff (version1, version2) {\r\n  if (eq(version1, version2)) {\r\n    return null\r\n  } else {\r\n    var v1 = parse(version1)\r\n    var v2 = parse(version2)\r\n    var prefix = ''\r\n    if (v1.prerelease.length || v2.prerelease.length) {\r\n      prefix = 'pre'\r\n      var defaultResult = 'prerelease'\r\n    }\r\n    for (var key in v1) {\r\n      if (key === 'major' || key === 'minor' || key === 'patch') {\r\n        if (v1[key] !== v2[key]) {\r\n          return prefix + key\r\n        }\r\n      }\r\n    }\r\n    return defaultResult // may be undefined\r\n  }\r\n}\r\n\r\nexports.compareIdentifiers = compareIdentifiers\r\n\r\nvar numeric = /^[0-9]+$/\r\nfunction compareIdentifiers (a, b) {\r\n  var anum = numeric.test(a)\r\n  var bnum = numeric.test(b)\r\n\r\n  if (anum && bnum) {\r\n    a = +a\r\n    b = +b\r\n  }\r\n\r\n  return a === b ? 0\r\n    : (anum && !bnum) ? -1\r\n    : (bnum && !anum) ? 1\r\n    : a < b ? -1\r\n    : 1\r\n}\r\n\r\nexports.rcompareIdentifiers = rcompareIdentifiers\r\nfunction rcompareIdentifiers (a, b) {\r\n  return compareIdentifiers(b, a)\r\n}\r\n\r\nexports.major = major\r\nfunction major (a, loose) {\r\n  return new SemVer(a, loose).major\r\n}\r\n\r\nexports.minor = minor\r\nfunction minor (a, loose) {\r\n  return new SemVer(a, loose).minor\r\n}\r\n\r\nexports.patch = patch\r\nfunction patch (a, loose) {\r\n  return new SemVer(a, loose).patch\r\n}\r\n\r\nexports.compare = compare\r\nfunction compare (a, b, loose) {\r\n  return new SemVer(a, loose).compare(new SemVer(b, loose))\r\n}\r\n\r\nexports.compareLoose = compareLoose\r\nfunction compareLoose (a, b) {\r\n  return compare(a, b, true)\r\n}\r\n\r\nexports.compareBuild = compareBuild\r\nfunction compareBuild (a, b, loose) {\r\n  var versionA = new SemVer(a, loose)\r\n  var versionB = new SemVer(b, loose)\r\n  return versionA.compare(versionB) || versionA.compareBuild(versionB)\r\n}\r\n\r\nexports.rcompare = rcompare\r\nfunction rcompare (a, b, loose) {\r\n  return compare(b, a, loose)\r\n}\r\n\r\nexports.sort = sort\r\nfunction sort (list, loose) {\r\n  return list.sort(function (a, b) {\r\n    return exports.compareBuild(a, b, loose)\r\n  })\r\n}\r\n\r\nexports.rsort = rsort\r\nfunction rsort (list, loose) {\r\n  return list.sort(function (a, b) {\r\n    return exports.compareBuild(b, a, loose)\r\n  })\r\n}\r\n\r\nexports.gt = gt\r\nfunction gt (a, b, loose) {\r\n  return compare(a, b, loose) > 0\r\n}\r\n\r\nexports.lt = lt\r\nfunction lt (a, b, loose) {\r\n  return compare(a, b, loose) < 0\r\n}\r\n\r\nexports.eq = eq\r\nfunction eq (a, b, loose) {\r\n  return compare(a, b, loose) === 0\r\n}\r\n\r\nexports.neq = neq\r\nfunction neq (a, b, loose) {\r\n  return compare(a, b, loose) !== 0\r\n}\r\n\r\nexports.gte = gte\r\nfunction gte (a, b, loose) {\r\n  return compare(a, b, loose) >= 0\r\n}\r\n\r\nexports.lte = lte\r\nfunction lte (a, b, loose) {\r\n  return compare(a, b, loose) <= 0\r\n}\r\n\r\nexports.cmp = cmp\r\nfunction cmp (a, op, b, loose) {\r\n  switch (op) {\r\n    case '===':\r\n      if (typeof a === 'object')\r\n        a = a.version\r\n      if (typeof b === 'object')\r\n        b = b.version\r\n      return a === b\r\n\r\n    case '!==':\r\n      if (typeof a === 'object')\r\n        a = a.version\r\n      if (typeof b === 'object')\r\n        b = b.version\r\n      return a !== b\r\n\r\n    case '':\r\n    case '=':\r\n    case '==':\r\n      return eq(a, b, loose)\r\n\r\n    case '!=':\r\n      return neq(a, b, loose)\r\n\r\n    case '>':\r\n      return gt(a, b, loose)\r\n\r\n    case '>=':\r\n      return gte(a, b, loose)\r\n\r\n    case '<':\r\n      return lt(a, b, loose)\r\n\r\n    case '<=':\r\n      return lte(a, b, loose)\r\n\r\n    default:\r\n      throw new TypeError('Invalid operator: ' + op)\r\n  }\r\n}\r\n\r\nexports.Comparator = Comparator\r\nfunction Comparator (comp, options) {\r\n  if (!options || typeof options !== 'object') {\r\n    options = {\r\n      loose: !!options,\r\n      includePrerelease: false\r\n    }\r\n  }\r\n\r\n  if (comp instanceof Comparator) {\r\n    if (comp.loose === !!options.loose) {\r\n      return comp\r\n    } else {\r\n      comp = comp.value\r\n    }\r\n  }\r\n\r\n  if (!(this instanceof Comparator)) {\r\n    return new Comparator(comp, options)\r\n  }\r\n\r\n  comp = comp.trim().split(/\\s+/).join(' ')\r\n  debug('comparator', comp, options)\r\n  this.options = options\r\n  this.loose = !!options.loose\r\n  this.parse(comp)\r\n\r\n  if (this.semver === ANY) {\r\n    this.value = ''\r\n  } else {\r\n    this.value = this.operator + this.semver.version\r\n  }\r\n\r\n  debug('comp', this)\r\n}\r\n\r\nvar ANY = {}\r\nComparator.prototype.parse = function (comp) {\r\n  var r = this.options.loose ? safeRe[t.COMPARATORLOOSE] : safeRe[t.COMPARATOR]\r\n  var m = comp.match(r)\r\n\r\n  if (!m) {\r\n    throw new TypeError('Invalid comparator: ' + comp)\r\n  }\r\n\r\n  this.operator = m[1] !== undefined ? m[1] : ''\r\n  if (this.operator === '=') {\r\n    this.operator = ''\r\n  }\r\n\r\n  // if it literally is just '>' or '' then allow anything.\r\n  if (!m[2]) {\r\n    this.semver = ANY\r\n  } else {\r\n    this.semver = new SemVer(m[2], this.options.loose)\r\n  }\r\n}\r\n\r\nComparator.prototype.toString = function () {\r\n  return this.value\r\n}\r\n\r\nComparator.prototype.test = function (version) {\r\n  debug('Comparator.test', version, this.options.loose)\r\n\r\n  if (this.semver === ANY || version === ANY) {\r\n    return true\r\n  }\r\n\r\n  if (typeof version === 'string') {\r\n    try {\r\n      version = new SemVer(version, this.options)\r\n    } catch (er) {\r\n      return false\r\n    }\r\n  }\r\n\r\n  return cmp(version, this.operator, this.semver, this.options)\r\n}\r\n\r\nComparator.prototype.intersects = function (comp, options) {\r\n  if (!(comp instanceof Comparator)) {\r\n    throw new TypeError('a Comparator is required')\r\n  }\r\n\r\n  if (!options || typeof options !== 'object') {\r\n    options = {\r\n      loose: !!options,\r\n      includePrerelease: false\r\n    }\r\n  }\r\n\r\n  var rangeTmp\r\n\r\n  if (this.operator === '') {\r\n    if (this.value === '') {\r\n      return true\r\n    }\r\n    rangeTmp = new Range(comp.value, options)\r\n    return satisfies(this.value, rangeTmp, options)\r\n  } else if (comp.operator === '') {\r\n    if (comp.value === '') {\r\n      return true\r\n    }\r\n    rangeTmp = new Range(this.value, options)\r\n    return satisfies(comp.semver, rangeTmp, options)\r\n  }\r\n\r\n  var sameDirectionIncreasing =\r\n    (this.operator === '>=' || this.operator === '>') &&\r\n    (comp.operator === '>=' || comp.operator === '>')\r\n  var sameDirectionDecreasing =\r\n    (this.operator === '<=' || this.operator === '<') &&\r\n    (comp.operator === '<=' || comp.operator === '<')\r\n  var sameSemVer = this.semver.version === comp.semver.version\r\n  var differentDirectionsInclusive =\r\n    (this.operator === '>=' || this.operator === '<=') &&\r\n    (comp.operator === '>=' || comp.operator === '<=')\r\n  var oppositeDirectionsLessThan =\r\n    cmp(this.semver, '<', comp.semver, options) &&\r\n    ((this.operator === '>=' || this.operator === '>') &&\r\n    (comp.operator === '<=' || comp.operator === '<'))\r\n  var oppositeDirectionsGreaterThan =\r\n    cmp(this.semver, '>', comp.semver, options) &&\r\n    ((this.operator === '<=' || this.operator === '<') &&\r\n    (comp.operator === '>=' || comp.operator === '>'))\r\n\r\n  return sameDirectionIncreasing || sameDirectionDecreasing ||\r\n    (sameSemVer && differentDirectionsInclusive) ||\r\n    oppositeDirectionsLessThan || oppositeDirectionsGreaterThan\r\n}\r\n\r\nexports.Range = Range\r\nfunction Range (range, options) {\r\n  if (!options || typeof options !== 'object') {\r\n    options = {\r\n      loose: !!options,\r\n      includePrerelease: false\r\n    }\r\n  }\r\n\r\n  if (range instanceof Range) {\r\n    if (range.loose === !!options.loose &&\r\n        range.includePrerelease === !!options.includePrerelease) {\r\n      return range\r\n    } else {\r\n      return new Range(range.raw, options)\r\n    }\r\n  }\r\n\r\n  if (range instanceof Comparator) {\r\n    return new Range(range.value, options)\r\n  }\r\n\r\n  if (!(this instanceof Range)) {\r\n    return new Range(range, options)\r\n  }\r\n\r\n  this.options = options\r\n  this.loose = !!options.loose\r\n  this.includePrerelease = !!options.includePrerelease\r\n\r\n  // First reduce all whitespace as much as possible so we do not have to rely\r\n  // on potentially slow regexes like \\s*. This is then stored and used for\r\n  // future error messages as well.\r\n  this.raw = range\r\n    .trim()\r\n    .split(/\\s+/)\r\n    .join(' ')\r\n\r\n  // First, split based on boolean or ||\r\n  this.set = this.raw.split('||').map(function (range) {\r\n    return this.parseRange(range.trim())\r\n  }, this).filter(function (c) {\r\n    // throw out any that are not relevant for whatever reason\r\n    return c.length\r\n  })\r\n\r\n  if (!this.set.length) {\r\n    throw new TypeError('Invalid SemVer Range: ' + this.raw)\r\n  }\r\n\r\n  this.format()\r\n}\r\n\r\nRange.prototype.format = function () {\r\n  this.range = this.set.map(function (comps) {\r\n    return comps.join(' ').trim()\r\n  }).join('||').trim()\r\n  return this.range\r\n}\r\n\r\nRange.prototype.toString = function () {\r\n  return this.range\r\n}\r\n\r\nRange.prototype.parseRange = function (range) {\r\n  var loose = this.options.loose\r\n  // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\r\n  var hr = loose ? safeRe[t.HYPHENRANGELOOSE] : safeRe[t.HYPHENRANGE]\r\n  range = range.replace(hr, hyphenReplace)\r\n  debug('hyphen replace', range)\r\n  // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\r\n  range = range.replace(safeRe[t.COMPARATORTRIM], comparatorTrimReplace)\r\n  debug('comparator trim', range, safeRe[t.COMPARATORTRIM])\r\n\r\n  // `~ 1.2.3` => `~1.2.3`\r\n  range = range.replace(safeRe[t.TILDETRIM], tildeTrimReplace)\r\n\r\n  // `^ 1.2.3` => `^1.2.3`\r\n  range = range.replace(safeRe[t.CARETTRIM], caretTrimReplace)\r\n\r\n  // normalize spaces\r\n  range = range.split(/\\s+/).join(' ')\r\n\r\n  // At this point, the range is completely trimmed and\r\n  // ready to be split into comparators.\r\n\r\n  var compRe = loose ? safeRe[t.COMPARATORLOOSE] : safeRe[t.COMPARATOR]\r\n  var set = range.split(' ').map(function (comp) {\r\n    return parseComparator(comp, this.options)\r\n  }, this).join(' ').split(/\\s+/)\r\n  if (this.options.loose) {\r\n    // in loose mode, throw out any that are not valid comparators\r\n    set = set.filter(function (comp) {\r\n      return !!comp.match(compRe)\r\n    })\r\n  }\r\n  set = set.map(function (comp) {\r\n    return new Comparator(comp, this.options)\r\n  }, this)\r\n\r\n  return set\r\n}\r\n\r\nRange.prototype.intersects = function (range, options) {\r\n  if (!(range instanceof Range)) {\r\n    throw new TypeError('a Range is required')\r\n  }\r\n\r\n  return this.set.some(function (thisComparators) {\r\n    return (\r\n      isSatisfiable(thisComparators, options) &&\r\n      range.set.some(function (rangeComparators) {\r\n        return (\r\n          isSatisfiable(rangeComparators, options) &&\r\n          thisComparators.every(function (thisComparator) {\r\n            return rangeComparators.every(function (rangeComparator) {\r\n              return thisComparator.intersects(rangeComparator, options)\r\n            })\r\n          })\r\n        )\r\n      })\r\n    )\r\n  })\r\n}\r\n\r\n// take a set of comparators and determine whether there\r\n// exists a version which can satisfy it\r\nfunction isSatisfiable (comparators, options) {\r\n  var result = true\r\n  var remainingComparators = comparators.slice()\r\n  var testComparator = remainingComparators.pop()\r\n\r\n  while (result && remainingComparators.length) {\r\n    result = remainingComparators.every(function (otherComparator) {\r\n      return testComparator.intersects(otherComparator, options)\r\n    })\r\n\r\n    testComparator = remainingComparators.pop()\r\n  }\r\n\r\n  return result\r\n}\r\n\r\n// Mostly just for testing and legacy API reasons\r\nexports.toComparators = toComparators\r\nfunction toComparators (range, options) {\r\n  return new Range(range, options).set.map(function (comp) {\r\n    return comp.map(function (c) {\r\n      return c.value\r\n    }).join(' ').trim().split(' ')\r\n  })\r\n}\r\n\r\n// comprised of xranges, tildes, stars, and gtlt's at this point.\r\n// already replaced the hyphen ranges\r\n// turn into a set of JUST comparators.\r\nfunction parseComparator (comp, options) {\r\n  debug('comp', comp, options)\r\n  comp = replaceCarets(comp, options)\r\n  debug('caret', comp)\r\n  comp = replaceTildes(comp, options)\r\n  debug('tildes', comp)\r\n  comp = replaceXRanges(comp, options)\r\n  debug('xrange', comp)\r\n  comp = replaceStars(comp, options)\r\n  debug('stars', comp)\r\n  return comp\r\n}\r\n\r\nfunction isX (id) {\r\n  return !id || id.toLowerCase() === 'x' || id === '*'\r\n}\r\n\r\n// ~, ~> --> * (any, kinda silly)\r\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0\r\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0\r\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0\r\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0\r\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0\r\nfunction replaceTildes (comp, options) {\r\n  return comp.trim().split(/\\s+/).map(function (comp) {\r\n    return replaceTilde(comp, options)\r\n  }).join(' ')\r\n}\r\n\r\nfunction replaceTilde (comp, options) {\r\n  var r = options.loose ? safeRe[t.TILDELOOSE] : safeRe[t.TILDE]\r\n  return comp.replace(r, function (_, M, m, p, pr) {\r\n    debug('tilde', comp, _, M, m, p, pr)\r\n    var ret\r\n\r\n    if (isX(M)) {\r\n      ret = ''\r\n    } else if (isX(m)) {\r\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0'\r\n    } else if (isX(p)) {\r\n      // ~1.2 == >=1.2.0 <1.3.0\r\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0'\r\n    } else if (pr) {\r\n      debug('replaceTilde pr', pr)\r\n      ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\r\n            ' <' + M + '.' + (+m + 1) + '.0'\r\n    } else {\r\n      // ~1.2.3 == >=1.2.3 <1.3.0\r\n      ret = '>=' + M + '.' + m + '.' + p +\r\n            ' <' + M + '.' + (+m + 1) + '.0'\r\n    }\r\n\r\n    debug('tilde return', ret)\r\n    return ret\r\n  })\r\n}\r\n\r\n// ^ --> * (any, kinda silly)\r\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0\r\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0\r\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0\r\n// ^1.2.3 --> >=1.2.3 <2.0.0\r\n// ^1.2.0 --> >=1.2.0 <2.0.0\r\nfunction replaceCarets (comp, options) {\r\n  return comp.trim().split(/\\s+/).map(function (comp) {\r\n    return replaceCaret(comp, options)\r\n  }).join(' ')\r\n}\r\n\r\nfunction replaceCaret (comp, options) {\r\n  debug('caret', comp, options)\r\n  var r = options.loose ? safeRe[t.CARETLOOSE] : safeRe[t.CARET]\r\n  return comp.replace(r, function (_, M, m, p, pr) {\r\n    debug('caret', comp, _, M, m, p, pr)\r\n    var ret\r\n\r\n    if (isX(M)) {\r\n      ret = ''\r\n    } else if (isX(m)) {\r\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0'\r\n    } else if (isX(p)) {\r\n      if (M === '0') {\r\n        ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0'\r\n      } else {\r\n        ret = '>=' + M + '.' + m + '.0 <' + (+M + 1) + '.0.0'\r\n      }\r\n    } else if (pr) {\r\n      debug('replaceCaret pr', pr)\r\n      if (M === '0') {\r\n        if (m === '0') {\r\n          ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\r\n                ' <' + M + '.' + m + '.' + (+p + 1)\r\n        } else {\r\n          ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\r\n                ' <' + M + '.' + (+m + 1) + '.0'\r\n        }\r\n      } else {\r\n        ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\r\n              ' <' + (+M + 1) + '.0.0'\r\n      }\r\n    } else {\r\n      debug('no pr')\r\n      if (M === '0') {\r\n        if (m === '0') {\r\n          ret = '>=' + M + '.' + m + '.' + p +\r\n                ' <' + M + '.' + m + '.' + (+p + 1)\r\n        } else {\r\n          ret = '>=' + M + '.' + m + '.' + p +\r\n                ' <' + M + '.' + (+m + 1) + '.0'\r\n        }\r\n      } else {\r\n        ret = '>=' + M + '.' + m + '.' + p +\r\n              ' <' + (+M + 1) + '.0.0'\r\n      }\r\n    }\r\n\r\n    debug('caret return', ret)\r\n    return ret\r\n  })\r\n}\r\n\r\nfunction replaceXRanges (comp, options) {\r\n  debug('replaceXRanges', comp, options)\r\n  return comp.split(/\\s+/).map(function (comp) {\r\n    return replaceXRange(comp, options)\r\n  }).join(' ')\r\n}\r\n\r\nfunction replaceXRange (comp, options) {\r\n  comp = comp.trim()\r\n  var r = options.loose ? safeRe[t.XRANGELOOSE] : safeRe[t.XRANGE]\r\n  return comp.replace(r, function (ret, gtlt, M, m, p, pr) {\r\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\r\n    var xM = isX(M)\r\n    var xm = xM || isX(m)\r\n    var xp = xm || isX(p)\r\n    var anyX = xp\r\n\r\n    if (gtlt === '=' && anyX) {\r\n      gtlt = ''\r\n    }\r\n\r\n    // if we're including prereleases in the match, then we need\r\n    // to fix this to -0, the lowest possible prerelease value\r\n    pr = options.includePrerelease ? '-0' : ''\r\n\r\n    if (xM) {\r\n      if (gtlt === '>' || gtlt === '<') {\r\n        // nothing is allowed\r\n        ret = '<0.0.0-0'\r\n      } else {\r\n        // nothing is forbidden\r\n        ret = '*'\r\n      }\r\n    } else if (gtlt && anyX) {\r\n      // we know patch is an x, because we have any x at all.\r\n      // replace X with 0\r\n      if (xm) {\r\n        m = 0\r\n      }\r\n      p = 0\r\n\r\n      if (gtlt === '>') {\r\n        // >1 => >=2.0.0\r\n        // >1.2 => >=1.3.0\r\n        // >1.2.3 => >= 1.2.4\r\n        gtlt = '>='\r\n        if (xm) {\r\n          M = +M + 1\r\n          m = 0\r\n          p = 0\r\n        } else {\r\n          m = +m + 1\r\n          p = 0\r\n        }\r\n      } else if (gtlt === '<=') {\r\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\r\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\r\n        gtlt = '<'\r\n        if (xm) {\r\n          M = +M + 1\r\n        } else {\r\n          m = +m + 1\r\n        }\r\n      }\r\n\r\n      ret = gtlt + M + '.' + m + '.' + p + pr\r\n    } else if (xm) {\r\n      ret = '>=' + M + '.0.0' + pr + ' <' + (+M + 1) + '.0.0' + pr\r\n    } else if (xp) {\r\n      ret = '>=' + M + '.' + m + '.0' + pr +\r\n        ' <' + M + '.' + (+m + 1) + '.0' + pr\r\n    }\r\n\r\n    debug('xRange return', ret)\r\n\r\n    return ret\r\n  })\r\n}\r\n\r\n// Because * is AND-ed with everything else in the comparator,\r\n// and '' means \"any version\", just remove the *s entirely.\r\nfunction replaceStars (comp, options) {\r\n  debug('replaceStars', comp, options)\r\n  // Looseness is ignored here.  star is always as loose as it gets!\r\n  return comp.trim().replace(safeRe[t.STAR], '')\r\n}\r\n\r\n// This function is passed to string.replace(re[t.HYPHENRANGE])\r\n// M, m, patch, prerelease, build\r\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\r\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0 Any 3.4.x will do\r\n// 1.2 - 3.4 => >=1.2.0 <3.5.0\r\nfunction hyphenReplace ($0,\r\n  from, fM, fm, fp, fpr, fb,\r\n  to, tM, tm, tp, tpr, tb) {\r\n  if (isX(fM)) {\r\n    from = ''\r\n  } else if (isX(fm)) {\r\n    from = '>=' + fM + '.0.0'\r\n  } else if (isX(fp)) {\r\n    from = '>=' + fM + '.' + fm + '.0'\r\n  } else {\r\n    from = '>=' + from\r\n  }\r\n\r\n  if (isX(tM)) {\r\n    to = ''\r\n  } else if (isX(tm)) {\r\n    to = '<' + (+tM + 1) + '.0.0'\r\n  } else if (isX(tp)) {\r\n    to = '<' + tM + '.' + (+tm + 1) + '.0'\r\n  } else if (tpr) {\r\n    to = '<=' + tM + '.' + tm + '.' + tp + '-' + tpr\r\n  } else {\r\n    to = '<=' + to\r\n  }\r\n\r\n  return (from + ' ' + to).trim()\r\n}\r\n\r\n// if ANY of the sets match ALL of its comparators, then pass\r\nRange.prototype.test = function (version) {\r\n  if (!version) {\r\n    return false\r\n  }\r\n\r\n  if (typeof version === 'string') {\r\n    try {\r\n      version = new SemVer(version, this.options)\r\n    } catch (er) {\r\n      return false\r\n    }\r\n  }\r\n\r\n  for (var i = 0; i < this.set.length; i++) {\r\n    if (testSet(this.set[i], version, this.options)) {\r\n      return true\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\nfunction testSet (set, version, options) {\r\n  for (var i = 0; i < set.length; i++) {\r\n    if (!set[i].test(version)) {\r\n      return false\r\n    }\r\n  }\r\n\r\n  if (version.prerelease.length && !options.includePrerelease) {\r\n    // Find the set of versions that are allowed to have prereleases\r\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\r\n    // That should allow `1.2.3-pr.2` to pass.\r\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\r\n    // even though it's within the range set by the comparators.\r\n    for (i = 0; i < set.length; i++) {\r\n      debug(set[i].semver)\r\n      if (set[i].semver === ANY) {\r\n        continue\r\n      }\r\n\r\n      if (set[i].semver.prerelease.length > 0) {\r\n        var allowed = set[i].semver\r\n        if (allowed.major === version.major &&\r\n            allowed.minor === version.minor &&\r\n            allowed.patch === version.patch) {\r\n          return true\r\n        }\r\n      }\r\n    }\r\n\r\n    // Version has a -pre, but it's not one of the ones we like.\r\n    return false\r\n  }\r\n\r\n  return true\r\n}\r\n\r\nexports.satisfies = satisfies\r\nfunction satisfies (version, range, options) {\r\n  try {\r\n    range = new Range(range, options)\r\n  } catch (er) {\r\n    return false\r\n  }\r\n  return range.test(version)\r\n}\r\n\r\nexports.maxSatisfying = maxSatisfying\r\nfunction maxSatisfying (versions, range, options) {\r\n  var max = null\r\n  var maxSV = null\r\n  try {\r\n    var rangeObj = new Range(range, options)\r\n  } catch (er) {\r\n    return null\r\n  }\r\n  versions.forEach(function (v) {\r\n    if (rangeObj.test(v)) {\r\n      // satisfies(v, range, options)\r\n      if (!max || maxSV.compare(v) === -1) {\r\n        // compare(max, v, true)\r\n        max = v\r\n        maxSV = new SemVer(max, options)\r\n      }\r\n    }\r\n  })\r\n  return max\r\n}\r\n\r\nexports.minSatisfying = minSatisfying\r\nfunction minSatisfying (versions, range, options) {\r\n  var min = null\r\n  var minSV = null\r\n  try {\r\n    var rangeObj = new Range(range, options)\r\n  } catch (er) {\r\n    return null\r\n  }\r\n  versions.forEach(function (v) {\r\n    if (rangeObj.test(v)) {\r\n      // satisfies(v, range, options)\r\n      if (!min || minSV.compare(v) === 1) {\r\n        // compare(min, v, true)\r\n        min = v\r\n        minSV = new SemVer(min, options)\r\n      }\r\n    }\r\n  })\r\n  return min\r\n}\r\n\r\nexports.minVersion = minVersion\r\nfunction minVersion (range, loose) {\r\n  range = new Range(range, loose)\r\n\r\n  var minver = new SemVer('0.0.0')\r\n  if (range.test(minver)) {\r\n    return minver\r\n  }\r\n\r\n  minver = new SemVer('0.0.0-0')\r\n  if (range.test(minver)) {\r\n    return minver\r\n  }\r\n\r\n  minver = null\r\n  for (var i = 0; i < range.set.length; ++i) {\r\n    var comparators = range.set[i]\r\n\r\n    comparators.forEach(function (comparator) {\r\n      // Clone to avoid manipulating the comparator's semver object.\r\n      var compver = new SemVer(comparator.semver.version)\r\n      switch (comparator.operator) {\r\n        case '>':\r\n          if (compver.prerelease.length === 0) {\r\n            compver.patch++\r\n          } else {\r\n            compver.prerelease.push(0)\r\n          }\r\n          compver.raw = compver.format()\r\n          /* fallthrough */\r\n        case '':\r\n        case '>=':\r\n          if (!minver || gt(minver, compver)) {\r\n            minver = compver\r\n          }\r\n          break\r\n        case '<':\r\n        case '<=':\r\n          /* Ignore maximum versions */\r\n          break\r\n        /* istanbul ignore next */\r\n        default:\r\n          throw new Error('Unexpected operation: ' + comparator.operator)\r\n      }\r\n    })\r\n  }\r\n\r\n  if (minver && range.test(minver)) {\r\n    return minver\r\n  }\r\n\r\n  return null\r\n}\r\n\r\nexports.validRange = validRange\r\nfunction validRange (range, options) {\r\n  try {\r\n    // Return '*' instead of '' so that truthiness works.\r\n    // This will throw if it's invalid anyway\r\n    return new Range(range, options).range || '*'\r\n  } catch (er) {\r\n    return null\r\n  }\r\n}\r\n\r\n// Determine if version is less than all the versions possible in the range\r\nexports.ltr = ltr\r\nfunction ltr (version, range, options) {\r\n  return outside(version, range, '<', options)\r\n}\r\n\r\n// Determine if version is greater than all the versions possible in the range.\r\nexports.gtr = gtr\r\nfunction gtr (version, range, options) {\r\n  return outside(version, range, '>', options)\r\n}\r\n\r\nexports.outside = outside\r\nfunction outside (version, range, hilo, options) {\r\n  version = new SemVer(version, options)\r\n  range = new Range(range, options)\r\n\r\n  var gtfn, ltefn, ltfn, comp, ecomp\r\n  switch (hilo) {\r\n    case '>':\r\n      gtfn = gt\r\n      ltefn = lte\r\n      ltfn = lt\r\n      comp = '>'\r\n      ecomp = '>='\r\n      break\r\n    case '<':\r\n      gtfn = lt\r\n      ltefn = gte\r\n      ltfn = gt\r\n      comp = '<'\r\n      ecomp = '<='\r\n      break\r\n    default:\r\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\r\n  }\r\n\r\n  // If it satisifes the range it is not outside\r\n  if (satisfies(version, range, options)) {\r\n    return false\r\n  }\r\n\r\n  // From now on, variable terms are as if we're in \"gtr\" mode.\r\n  // but note that everything is flipped for the \"ltr\" function.\r\n\r\n  for (var i = 0; i < range.set.length; ++i) {\r\n    var comparators = range.set[i]\r\n\r\n    var high = null\r\n    var low = null\r\n\r\n    comparators.forEach(function (comparator) {\r\n      if (comparator.semver === ANY) {\r\n        comparator = new Comparator('>=0.0.0')\r\n      }\r\n      high = high || comparator\r\n      low = low || comparator\r\n      if (gtfn(comparator.semver, high.semver, options)) {\r\n        high = comparator\r\n      } else if (ltfn(comparator.semver, low.semver, options)) {\r\n        low = comparator\r\n      }\r\n    })\r\n\r\n    // If the edge version comparator has a operator then our version\r\n    // isn't outside it\r\n    if (high.operator === comp || high.operator === ecomp) {\r\n      return false\r\n    }\r\n\r\n    // If the lowest version comparator has an operator and our version\r\n    // is less than it then it isn't higher than the range\r\n    if ((!low.operator || low.operator === comp) &&\r\n        ltefn(version, low.semver)) {\r\n      return false\r\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\r\n      return false\r\n    }\r\n  }\r\n  return true\r\n}\r\n\r\nexports.prerelease = prerelease\r\nfunction prerelease (version, options) {\r\n  var parsed = parse(version, options)\r\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\r\n}\r\n\r\nexports.intersects = intersects\r\nfunction intersects (r1, r2, options) {\r\n  r1 = new Range(r1, options)\r\n  r2 = new Range(r2, options)\r\n  return r1.intersects(r2)\r\n}\r\n\r\nexports.coerce = coerce\r\nfunction coerce (version, options) {\r\n  if (version instanceof SemVer) {\r\n    return version\r\n  }\r\n\r\n  if (typeof version === 'number') {\r\n    version = String(version)\r\n  }\r\n\r\n  if (typeof version !== 'string') {\r\n    return null\r\n  }\r\n\r\n  options = options || {}\r\n\r\n  var match = null\r\n  if (!options.rtl) {\r\n    match = version.match(safeRe[t.COERCE])\r\n  } else {\r\n    // Find the right-most coercible string that does not share\r\n    // a terminus with a more left-ward coercible string.\r\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\r\n    //\r\n    // Walk through the string checking with a /g regexp\r\n    // Manually set the index so as to pick up overlapping matches.\r\n    // Stop when we get a match that ends at the string end, since no\r\n    // coercible string can be more right-ward without the same terminus.\r\n    var next\r\n    while ((next = safeRe[t.COERCERTL].exec(version)) &&\r\n      (!match || match.index + match[0].length !== version.length)\r\n    ) {\r\n      if (!match ||\r\n          next.index + next[0].length !== match.index + match[0].length) {\r\n        match = next\r\n      }\r\n      safeRe[t.COERCERTL].lastIndex = next.index + next[1].length + next[2].length\r\n    }\r\n    // leave it in a clean state\r\n    safeRe[t.COERCERTL].lastIndex = -1\r\n  }\r\n\r\n  if (match === null) {\r\n    return null\r\n  }\r\n\r\n  return parse(match[2] +\r\n    '.' + (match[3] || '0') +\r\n    '.' + (match[4] || '0'), options)\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
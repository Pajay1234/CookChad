{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar define = require('define-data-property');\nvar hasDescriptors = require('has-property-descriptors')();\nvar gOPD = require('gopd');\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $floor = GetIntrinsic('%Math.floor%');\nmodule.exports = function setFunctionLength(fn, length) {\n  if (typeof fn !== 'function') {\n    throw new $TypeError('`fn` is not a function');\n  }\n  if (typeof length !== 'number' || length < 0 || length > 0xFFFFFFFF || $floor(length) !== length) {\n    throw new $TypeError('`length` must be a positive 32-bit integer');\n  }\n  var loose = arguments.length > 2 && !!arguments[2];\n  var functionLengthIsConfigurable = true;\n  var functionLengthIsWritable = true;\n  if ('length' in fn && gOPD) {\n    var desc = gOPD(fn, 'length');\n    if (desc && !desc.configurable) {\n      functionLengthIsConfigurable = false;\n    }\n    if (desc && !desc.writable) {\n      functionLengthIsWritable = false;\n    }\n  }\n  if (functionLengthIsConfigurable || functionLengthIsWritable || !loose) {\n    if (hasDescriptors) {\n      define(fn, 'length', length, true, true);\n    } else {\n      define(fn, 'length', length);\n    }\n  }\n  return fn;\n};","map":{"version":3,"names":["GetIntrinsic","require","define","hasDescriptors","gOPD","$TypeError","$floor","module","exports","setFunctionLength","fn","length","loose","arguments","functionLengthIsConfigurable","functionLengthIsWritable","desc","configurable","writable"],"sources":["C:/Users/Ryan/Documents/school/fall 2023/cmpe 133/project/CookChad/frontend/node_modules/set-function-length/index.js"],"sourcesContent":["'use strict';\r\n\r\nvar GetIntrinsic = require('get-intrinsic');\r\nvar define = require('define-data-property');\r\nvar hasDescriptors = require('has-property-descriptors')();\r\nvar gOPD = require('gopd');\r\n\r\nvar $TypeError = GetIntrinsic('%TypeError%');\r\nvar $floor = GetIntrinsic('%Math.floor%');\r\n\r\nmodule.exports = function setFunctionLength(fn, length) {\r\n\tif (typeof fn !== 'function') {\r\n\t\tthrow new $TypeError('`fn` is not a function');\r\n\t}\r\n\tif (typeof length !== 'number' || length < 0 || length > 0xFFFFFFFF || $floor(length) !== length) {\r\n\t\tthrow new $TypeError('`length` must be a positive 32-bit integer');\r\n\t}\r\n\r\n\tvar loose = arguments.length > 2 && !!arguments[2];\r\n\r\n\tvar functionLengthIsConfigurable = true;\r\n\tvar functionLengthIsWritable = true;\r\n\tif ('length' in fn && gOPD) {\r\n\t\tvar desc = gOPD(fn, 'length');\r\n\t\tif (desc && !desc.configurable) {\r\n\t\t\tfunctionLengthIsConfigurable = false;\r\n\t\t}\r\n\t\tif (desc && !desc.writable) {\r\n\t\t\tfunctionLengthIsWritable = false;\r\n\t\t}\r\n\t}\r\n\r\n\tif (functionLengthIsConfigurable || functionLengthIsWritable || !loose) {\r\n\t\tif (hasDescriptors) {\r\n\t\t\tdefine(fn, 'length', length, true, true);\r\n\t\t} else {\r\n\t\t\tdefine(fn, 'length', length);\r\n\t\t}\r\n\t}\r\n\treturn fn;\r\n};\r\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,YAAY,GAAGC,OAAO,CAAC,eAAe,CAAC;AAC3C,IAAIC,MAAM,GAAGD,OAAO,CAAC,sBAAsB,CAAC;AAC5C,IAAIE,cAAc,GAAGF,OAAO,CAAC,0BAA0B,CAAC,CAAC,CAAC;AAC1D,IAAIG,IAAI,GAAGH,OAAO,CAAC,MAAM,CAAC;AAE1B,IAAII,UAAU,GAAGL,YAAY,CAAC,aAAa,CAAC;AAC5C,IAAIM,MAAM,GAAGN,YAAY,CAAC,cAAc,CAAC;AAEzCO,MAAM,CAACC,OAAO,GAAG,SAASC,iBAAiBA,CAACC,EAAE,EAAEC,MAAM,EAAE;EACvD,IAAI,OAAOD,EAAE,KAAK,UAAU,EAAE;IAC7B,MAAM,IAAIL,UAAU,CAAC,wBAAwB,CAAC;EAC/C;EACA,IAAI,OAAOM,MAAM,KAAK,QAAQ,IAAIA,MAAM,GAAG,CAAC,IAAIA,MAAM,GAAG,UAAU,IAAIL,MAAM,CAACK,MAAM,CAAC,KAAKA,MAAM,EAAE;IACjG,MAAM,IAAIN,UAAU,CAAC,4CAA4C,CAAC;EACnE;EAEA,IAAIO,KAAK,GAAGC,SAAS,CAACF,MAAM,GAAG,CAAC,IAAI,CAAC,CAACE,SAAS,CAAC,CAAC,CAAC;EAElD,IAAIC,4BAA4B,GAAG,IAAI;EACvC,IAAIC,wBAAwB,GAAG,IAAI;EACnC,IAAI,QAAQ,IAAIL,EAAE,IAAIN,IAAI,EAAE;IAC3B,IAAIY,IAAI,GAAGZ,IAAI,CAACM,EAAE,EAAE,QAAQ,CAAC;IAC7B,IAAIM,IAAI,IAAI,CAACA,IAAI,CAACC,YAAY,EAAE;MAC/BH,4BAA4B,GAAG,KAAK;IACrC;IACA,IAAIE,IAAI,IAAI,CAACA,IAAI,CAACE,QAAQ,EAAE;MAC3BH,wBAAwB,GAAG,KAAK;IACjC;EACD;EAEA,IAAID,4BAA4B,IAAIC,wBAAwB,IAAI,CAACH,KAAK,EAAE;IACvE,IAAIT,cAAc,EAAE;MACnBD,MAAM,CAACQ,EAAE,EAAE,QAAQ,EAAEC,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC;IACzC,CAAC,MAAM;MACNT,MAAM,CAACQ,EAAE,EAAE,QAAQ,EAAEC,MAAM,CAAC;IAC7B;EACD;EACA,OAAOD,EAAE;AACV,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}
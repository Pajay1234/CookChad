{"ast":null,"code":"'use strict';\n\nconst fs = require('fs');\nconst path = require('path');\n\n/* istanbul ignore next */\nconst LCHOWN = fs.lchown ? 'lchown' : 'chown';\n/* istanbul ignore next */\nconst LCHOWNSYNC = fs.lchownSync ? 'lchownSync' : 'chownSync';\n\n/* istanbul ignore next */\nconst needEISDIRHandled = fs.lchown && !process.version.match(/v1[1-9]+\\./) && !process.version.match(/v10\\.[6-9]/);\nconst lchownSync = (path, uid, gid) => {\n  try {\n    return fs[LCHOWNSYNC](path, uid, gid);\n  } catch (er) {\n    if (er.code !== 'ENOENT') throw er;\n  }\n};\n\n/* istanbul ignore next */\nconst chownSync = (path, uid, gid) => {\n  try {\n    return fs.chownSync(path, uid, gid);\n  } catch (er) {\n    if (er.code !== 'ENOENT') throw er;\n  }\n};\n\n/* istanbul ignore next */\nconst handleEISDIR = needEISDIRHandled ? (path, uid, gid, cb) => er => {\n  // Node prior to v10 had a very questionable implementation of\n  // fs.lchown, which would always try to call fs.open on a directory\n  // Fall back to fs.chown in those cases.\n  if (!er || er.code !== 'EISDIR') cb(er);else fs.chown(path, uid, gid, cb);\n} : (_, __, ___, cb) => cb;\n\n/* istanbul ignore next */\nconst handleEISDirSync = needEISDIRHandled ? (path, uid, gid) => {\n  try {\n    return lchownSync(path, uid, gid);\n  } catch (er) {\n    if (er.code !== 'EISDIR') throw er;\n    chownSync(path, uid, gid);\n  }\n} : (path, uid, gid) => lchownSync(path, uid, gid);\n\n// fs.readdir could only accept an options object as of node v6\nconst nodeVersion = process.version;\nlet readdir = (path, options, cb) => fs.readdir(path, options, cb);\nlet readdirSync = (path, options) => fs.readdirSync(path, options);\n/* istanbul ignore next */\nif (/^v4\\./.test(nodeVersion)) readdir = (path, options, cb) => fs.readdir(path, cb);\nconst chown = (cpath, uid, gid, cb) => {\n  fs[LCHOWN](cpath, uid, gid, handleEISDIR(cpath, uid, gid, er => {\n    // Skip ENOENT error\n    cb(er && er.code !== 'ENOENT' ? er : null);\n  }));\n};\nconst chownrKid = (p, child, uid, gid, cb) => {\n  if (typeof child === 'string') return fs.lstat(path.resolve(p, child), (er, stats) => {\n    // Skip ENOENT error\n    if (er) return cb(er.code !== 'ENOENT' ? er : null);\n    stats.name = child;\n    chownrKid(p, stats, uid, gid, cb);\n  });\n  if (child.isDirectory()) {\n    chownr(path.resolve(p, child.name), uid, gid, er => {\n      if (er) return cb(er);\n      const cpath = path.resolve(p, child.name);\n      chown(cpath, uid, gid, cb);\n    });\n  } else {\n    const cpath = path.resolve(p, child.name);\n    chown(cpath, uid, gid, cb);\n  }\n};\nconst chownr = (p, uid, gid, cb) => {\n  readdir(p, {\n    withFileTypes: true\n  }, (er, children) => {\n    // any error other than ENOTDIR or ENOTSUP means it's not readable,\n    // or doesn't exist.  give up.\n    if (er) {\n      if (er.code === 'ENOENT') return cb();else if (er.code !== 'ENOTDIR' && er.code !== 'ENOTSUP') return cb(er);\n    }\n    if (er || !children.length) return chown(p, uid, gid, cb);\n    let len = children.length;\n    let errState = null;\n    const then = er => {\n      if (errState) return;\n      if (er) return cb(errState = er);\n      if (--len === 0) return chown(p, uid, gid, cb);\n    };\n    children.forEach(child => chownrKid(p, child, uid, gid, then));\n  });\n};\nconst chownrKidSync = (p, child, uid, gid) => {\n  if (typeof child === 'string') {\n    try {\n      const stats = fs.lstatSync(path.resolve(p, child));\n      stats.name = child;\n      child = stats;\n    } catch (er) {\n      if (er.code === 'ENOENT') return;else throw er;\n    }\n  }\n  if (child.isDirectory()) chownrSync(path.resolve(p, child.name), uid, gid);\n  handleEISDirSync(path.resolve(p, child.name), uid, gid);\n};\nconst chownrSync = (p, uid, gid) => {\n  let children;\n  try {\n    children = readdirSync(p, {\n      withFileTypes: true\n    });\n  } catch (er) {\n    if (er.code === 'ENOENT') return;else if (er.code === 'ENOTDIR' || er.code === 'ENOTSUP') return handleEISDirSync(p, uid, gid);else throw er;\n  }\n  if (children && children.length) children.forEach(child => chownrKidSync(p, child, uid, gid));\n  return handleEISDirSync(p, uid, gid);\n};\nmodule.exports = chownr;\nchownr.sync = chownrSync;","map":{"version":3,"names":["fs","require","path","LCHOWN","lchown","LCHOWNSYNC","lchownSync","needEISDIRHandled","process","version","match","uid","gid","er","code","chownSync","handleEISDIR","cb","chown","_","__","___","handleEISDirSync","nodeVersion","readdir","options","readdirSync","test","cpath","chownrKid","p","child","lstat","resolve","stats","name","isDirectory","chownr","withFileTypes","children","length","len","errState","then","forEach","chownrKidSync","lstatSync","chownrSync","module","exports","sync"],"sources":["C:/Users/Ryan/Documents/school/fall 2023/cmpe 133/project/CookChad/frontend/node_modules/chownr/chownr.js"],"sourcesContent":["'use strict'\nconst fs = require('fs')\nconst path = require('path')\n\n/* istanbul ignore next */\nconst LCHOWN = fs.lchown ? 'lchown' : 'chown'\n/* istanbul ignore next */\nconst LCHOWNSYNC = fs.lchownSync ? 'lchownSync' : 'chownSync'\n\n/* istanbul ignore next */\nconst needEISDIRHandled = fs.lchown &&\n  !process.version.match(/v1[1-9]+\\./) &&\n  !process.version.match(/v10\\.[6-9]/)\n\nconst lchownSync = (path, uid, gid) => {\n  try {\n    return fs[LCHOWNSYNC](path, uid, gid)\n  } catch (er) {\n    if (er.code !== 'ENOENT')\n      throw er\n  }\n}\n\n/* istanbul ignore next */\nconst chownSync = (path, uid, gid) => {\n  try {\n    return fs.chownSync(path, uid, gid)\n  } catch (er) {\n    if (er.code !== 'ENOENT')\n      throw er\n  }\n}\n\n/* istanbul ignore next */\nconst handleEISDIR =\n  needEISDIRHandled ? (path, uid, gid, cb) => er => {\n    // Node prior to v10 had a very questionable implementation of\n    // fs.lchown, which would always try to call fs.open on a directory\n    // Fall back to fs.chown in those cases.\n    if (!er || er.code !== 'EISDIR')\n      cb(er)\n    else\n      fs.chown(path, uid, gid, cb)\n  }\n  : (_, __, ___, cb) => cb\n\n/* istanbul ignore next */\nconst handleEISDirSync =\n  needEISDIRHandled ? (path, uid, gid) => {\n    try {\n      return lchownSync(path, uid, gid)\n    } catch (er) {\n      if (er.code !== 'EISDIR')\n        throw er\n      chownSync(path, uid, gid)\n    }\n  }\n  : (path, uid, gid) => lchownSync(path, uid, gid)\n\n// fs.readdir could only accept an options object as of node v6\nconst nodeVersion = process.version\nlet readdir = (path, options, cb) => fs.readdir(path, options, cb)\nlet readdirSync = (path, options) => fs.readdirSync(path, options)\n/* istanbul ignore next */\nif (/^v4\\./.test(nodeVersion))\n  readdir = (path, options, cb) => fs.readdir(path, cb)\n\nconst chown = (cpath, uid, gid, cb) => {\n  fs[LCHOWN](cpath, uid, gid, handleEISDIR(cpath, uid, gid, er => {\n    // Skip ENOENT error\n    cb(er && er.code !== 'ENOENT' ? er : null)\n  }))\n}\n\nconst chownrKid = (p, child, uid, gid, cb) => {\n  if (typeof child === 'string')\n    return fs.lstat(path.resolve(p, child), (er, stats) => {\n      // Skip ENOENT error\n      if (er)\n        return cb(er.code !== 'ENOENT' ? er : null)\n      stats.name = child\n      chownrKid(p, stats, uid, gid, cb)\n    })\n\n  if (child.isDirectory()) {\n    chownr(path.resolve(p, child.name), uid, gid, er => {\n      if (er)\n        return cb(er)\n      const cpath = path.resolve(p, child.name)\n      chown(cpath, uid, gid, cb)\n    })\n  } else {\n    const cpath = path.resolve(p, child.name)\n    chown(cpath, uid, gid, cb)\n  }\n}\n\n\nconst chownr = (p, uid, gid, cb) => {\n  readdir(p, { withFileTypes: true }, (er, children) => {\n    // any error other than ENOTDIR or ENOTSUP means it's not readable,\n    // or doesn't exist.  give up.\n    if (er) {\n      if (er.code === 'ENOENT')\n        return cb()\n      else if (er.code !== 'ENOTDIR' && er.code !== 'ENOTSUP')\n        return cb(er)\n    }\n    if (er || !children.length)\n      return chown(p, uid, gid, cb)\n\n    let len = children.length\n    let errState = null\n    const then = er => {\n      if (errState)\n        return\n      if (er)\n        return cb(errState = er)\n      if (-- len === 0)\n        return chown(p, uid, gid, cb)\n    }\n\n    children.forEach(child => chownrKid(p, child, uid, gid, then))\n  })\n}\n\nconst chownrKidSync = (p, child, uid, gid) => {\n  if (typeof child === 'string') {\n    try {\n      const stats = fs.lstatSync(path.resolve(p, child))\n      stats.name = child\n      child = stats\n    } catch (er) {\n      if (er.code === 'ENOENT')\n        return\n      else\n        throw er\n    }\n  }\n\n  if (child.isDirectory())\n    chownrSync(path.resolve(p, child.name), uid, gid)\n\n  handleEISDirSync(path.resolve(p, child.name), uid, gid)\n}\n\nconst chownrSync = (p, uid, gid) => {\n  let children\n  try {\n    children = readdirSync(p, { withFileTypes: true })\n  } catch (er) {\n    if (er.code === 'ENOENT')\n      return\n    else if (er.code === 'ENOTDIR' || er.code === 'ENOTSUP')\n      return handleEISDirSync(p, uid, gid)\n    else\n      throw er\n  }\n\n  if (children && children.length)\n    children.forEach(child => chownrKidSync(p, child, uid, gid))\n\n  return handleEISDirSync(p, uid, gid)\n}\n\nmodule.exports = chownr\nchownr.sync = chownrSync\n"],"mappings":"AAAA,YAAY;;AACZ,MAAMA,EAAE,GAAGC,OAAO,CAAC,IAAI,CAAC;AACxB,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAM,CAAC;;AAE5B;AACA,MAAME,MAAM,GAAGH,EAAE,CAACI,MAAM,GAAG,QAAQ,GAAG,OAAO;AAC7C;AACA,MAAMC,UAAU,GAAGL,EAAE,CAACM,UAAU,GAAG,YAAY,GAAG,WAAW;;AAE7D;AACA,MAAMC,iBAAiB,GAAGP,EAAE,CAACI,MAAM,IACjC,CAACI,OAAO,CAACC,OAAO,CAACC,KAAK,CAAC,YAAY,CAAC,IACpC,CAACF,OAAO,CAACC,OAAO,CAACC,KAAK,CAAC,YAAY,CAAC;AAEtC,MAAMJ,UAAU,GAAGA,CAACJ,IAAI,EAAES,GAAG,EAAEC,GAAG,KAAK;EACrC,IAAI;IACF,OAAOZ,EAAE,CAACK,UAAU,CAAC,CAACH,IAAI,EAAES,GAAG,EAAEC,GAAG,CAAC;EACvC,CAAC,CAAC,OAAOC,EAAE,EAAE;IACX,IAAIA,EAAE,CAACC,IAAI,KAAK,QAAQ,EACtB,MAAMD,EAAE;EACZ;AACF,CAAC;;AAED;AACA,MAAME,SAAS,GAAGA,CAACb,IAAI,EAAES,GAAG,EAAEC,GAAG,KAAK;EACpC,IAAI;IACF,OAAOZ,EAAE,CAACe,SAAS,CAACb,IAAI,EAAES,GAAG,EAAEC,GAAG,CAAC;EACrC,CAAC,CAAC,OAAOC,EAAE,EAAE;IACX,IAAIA,EAAE,CAACC,IAAI,KAAK,QAAQ,EACtB,MAAMD,EAAE;EACZ;AACF,CAAC;;AAED;AACA,MAAMG,YAAY,GAChBT,iBAAiB,GAAG,CAACL,IAAI,EAAES,GAAG,EAAEC,GAAG,EAAEK,EAAE,KAAKJ,EAAE,IAAI;EAChD;EACA;EACA;EACA,IAAI,CAACA,EAAE,IAAIA,EAAE,CAACC,IAAI,KAAK,QAAQ,EAC7BG,EAAE,CAACJ,EAAE,CAAC,MAENb,EAAE,CAACkB,KAAK,CAAChB,IAAI,EAAES,GAAG,EAAEC,GAAG,EAAEK,EAAE,CAAC;AAChC,CAAC,GACC,CAACE,CAAC,EAAEC,EAAE,EAAEC,GAAG,EAAEJ,EAAE,KAAKA,EAAE;;AAE1B;AACA,MAAMK,gBAAgB,GACpBf,iBAAiB,GAAG,CAACL,IAAI,EAAES,GAAG,EAAEC,GAAG,KAAK;EACtC,IAAI;IACF,OAAON,UAAU,CAACJ,IAAI,EAAES,GAAG,EAAEC,GAAG,CAAC;EACnC,CAAC,CAAC,OAAOC,EAAE,EAAE;IACX,IAAIA,EAAE,CAACC,IAAI,KAAK,QAAQ,EACtB,MAAMD,EAAE;IACVE,SAAS,CAACb,IAAI,EAAES,GAAG,EAAEC,GAAG,CAAC;EAC3B;AACF,CAAC,GACC,CAACV,IAAI,EAAES,GAAG,EAAEC,GAAG,KAAKN,UAAU,CAACJ,IAAI,EAAES,GAAG,EAAEC,GAAG,CAAC;;AAElD;AACA,MAAMW,WAAW,GAAGf,OAAO,CAACC,OAAO;AACnC,IAAIe,OAAO,GAAGA,CAACtB,IAAI,EAAEuB,OAAO,EAAER,EAAE,KAAKjB,EAAE,CAACwB,OAAO,CAACtB,IAAI,EAAEuB,OAAO,EAAER,EAAE,CAAC;AAClE,IAAIS,WAAW,GAAGA,CAACxB,IAAI,EAAEuB,OAAO,KAAKzB,EAAE,CAAC0B,WAAW,CAACxB,IAAI,EAAEuB,OAAO,CAAC;AAClE;AACA,IAAI,OAAO,CAACE,IAAI,CAACJ,WAAW,CAAC,EAC3BC,OAAO,GAAGA,CAACtB,IAAI,EAAEuB,OAAO,EAAER,EAAE,KAAKjB,EAAE,CAACwB,OAAO,CAACtB,IAAI,EAAEe,EAAE,CAAC;AAEvD,MAAMC,KAAK,GAAGA,CAACU,KAAK,EAAEjB,GAAG,EAAEC,GAAG,EAAEK,EAAE,KAAK;EACrCjB,EAAE,CAACG,MAAM,CAAC,CAACyB,KAAK,EAAEjB,GAAG,EAAEC,GAAG,EAAEI,YAAY,CAACY,KAAK,EAAEjB,GAAG,EAAEC,GAAG,EAAEC,EAAE,IAAI;IAC9D;IACAI,EAAE,CAACJ,EAAE,IAAIA,EAAE,CAACC,IAAI,KAAK,QAAQ,GAAGD,EAAE,GAAG,IAAI,CAAC;EAC5C,CAAC,CAAC,CAAC;AACL,CAAC;AAED,MAAMgB,SAAS,GAAGA,CAACC,CAAC,EAAEC,KAAK,EAAEpB,GAAG,EAAEC,GAAG,EAAEK,EAAE,KAAK;EAC5C,IAAI,OAAOc,KAAK,KAAK,QAAQ,EAC3B,OAAO/B,EAAE,CAACgC,KAAK,CAAC9B,IAAI,CAAC+B,OAAO,CAACH,CAAC,EAAEC,KAAK,CAAC,EAAE,CAAClB,EAAE,EAAEqB,KAAK,KAAK;IACrD;IACA,IAAIrB,EAAE,EACJ,OAAOI,EAAE,CAACJ,EAAE,CAACC,IAAI,KAAK,QAAQ,GAAGD,EAAE,GAAG,IAAI,CAAC;IAC7CqB,KAAK,CAACC,IAAI,GAAGJ,KAAK;IAClBF,SAAS,CAACC,CAAC,EAAEI,KAAK,EAAEvB,GAAG,EAAEC,GAAG,EAAEK,EAAE,CAAC;EACnC,CAAC,CAAC;EAEJ,IAAIc,KAAK,CAACK,WAAW,CAAC,CAAC,EAAE;IACvBC,MAAM,CAACnC,IAAI,CAAC+B,OAAO,CAACH,CAAC,EAAEC,KAAK,CAACI,IAAI,CAAC,EAAExB,GAAG,EAAEC,GAAG,EAAEC,EAAE,IAAI;MAClD,IAAIA,EAAE,EACJ,OAAOI,EAAE,CAACJ,EAAE,CAAC;MACf,MAAMe,KAAK,GAAG1B,IAAI,CAAC+B,OAAO,CAACH,CAAC,EAAEC,KAAK,CAACI,IAAI,CAAC;MACzCjB,KAAK,CAACU,KAAK,EAAEjB,GAAG,EAAEC,GAAG,EAAEK,EAAE,CAAC;IAC5B,CAAC,CAAC;EACJ,CAAC,MAAM;IACL,MAAMW,KAAK,GAAG1B,IAAI,CAAC+B,OAAO,CAACH,CAAC,EAAEC,KAAK,CAACI,IAAI,CAAC;IACzCjB,KAAK,CAACU,KAAK,EAAEjB,GAAG,EAAEC,GAAG,EAAEK,EAAE,CAAC;EAC5B;AACF,CAAC;AAGD,MAAMoB,MAAM,GAAGA,CAACP,CAAC,EAAEnB,GAAG,EAAEC,GAAG,EAAEK,EAAE,KAAK;EAClCO,OAAO,CAACM,CAAC,EAAE;IAAEQ,aAAa,EAAE;EAAK,CAAC,EAAE,CAACzB,EAAE,EAAE0B,QAAQ,KAAK;IACpD;IACA;IACA,IAAI1B,EAAE,EAAE;MACN,IAAIA,EAAE,CAACC,IAAI,KAAK,QAAQ,EACtB,OAAOG,EAAE,CAAC,CAAC,MACR,IAAIJ,EAAE,CAACC,IAAI,KAAK,SAAS,IAAID,EAAE,CAACC,IAAI,KAAK,SAAS,EACrD,OAAOG,EAAE,CAACJ,EAAE,CAAC;IACjB;IACA,IAAIA,EAAE,IAAI,CAAC0B,QAAQ,CAACC,MAAM,EACxB,OAAOtB,KAAK,CAACY,CAAC,EAAEnB,GAAG,EAAEC,GAAG,EAAEK,EAAE,CAAC;IAE/B,IAAIwB,GAAG,GAAGF,QAAQ,CAACC,MAAM;IACzB,IAAIE,QAAQ,GAAG,IAAI;IACnB,MAAMC,IAAI,GAAG9B,EAAE,IAAI;MACjB,IAAI6B,QAAQ,EACV;MACF,IAAI7B,EAAE,EACJ,OAAOI,EAAE,CAACyB,QAAQ,GAAG7B,EAAE,CAAC;MAC1B,IAAI,EAAG4B,GAAG,KAAK,CAAC,EACd,OAAOvB,KAAK,CAACY,CAAC,EAAEnB,GAAG,EAAEC,GAAG,EAAEK,EAAE,CAAC;IACjC,CAAC;IAEDsB,QAAQ,CAACK,OAAO,CAACb,KAAK,IAAIF,SAAS,CAACC,CAAC,EAAEC,KAAK,EAAEpB,GAAG,EAAEC,GAAG,EAAE+B,IAAI,CAAC,CAAC;EAChE,CAAC,CAAC;AACJ,CAAC;AAED,MAAME,aAAa,GAAGA,CAACf,CAAC,EAAEC,KAAK,EAAEpB,GAAG,EAAEC,GAAG,KAAK;EAC5C,IAAI,OAAOmB,KAAK,KAAK,QAAQ,EAAE;IAC7B,IAAI;MACF,MAAMG,KAAK,GAAGlC,EAAE,CAAC8C,SAAS,CAAC5C,IAAI,CAAC+B,OAAO,CAACH,CAAC,EAAEC,KAAK,CAAC,CAAC;MAClDG,KAAK,CAACC,IAAI,GAAGJ,KAAK;MAClBA,KAAK,GAAGG,KAAK;IACf,CAAC,CAAC,OAAOrB,EAAE,EAAE;MACX,IAAIA,EAAE,CAACC,IAAI,KAAK,QAAQ,EACtB,OAAM,KAEN,MAAMD,EAAE;IACZ;EACF;EAEA,IAAIkB,KAAK,CAACK,WAAW,CAAC,CAAC,EACrBW,UAAU,CAAC7C,IAAI,CAAC+B,OAAO,CAACH,CAAC,EAAEC,KAAK,CAACI,IAAI,CAAC,EAAExB,GAAG,EAAEC,GAAG,CAAC;EAEnDU,gBAAgB,CAACpB,IAAI,CAAC+B,OAAO,CAACH,CAAC,EAAEC,KAAK,CAACI,IAAI,CAAC,EAAExB,GAAG,EAAEC,GAAG,CAAC;AACzD,CAAC;AAED,MAAMmC,UAAU,GAAGA,CAACjB,CAAC,EAAEnB,GAAG,EAAEC,GAAG,KAAK;EAClC,IAAI2B,QAAQ;EACZ,IAAI;IACFA,QAAQ,GAAGb,WAAW,CAACI,CAAC,EAAE;MAAEQ,aAAa,EAAE;IAAK,CAAC,CAAC;EACpD,CAAC,CAAC,OAAOzB,EAAE,EAAE;IACX,IAAIA,EAAE,CAACC,IAAI,KAAK,QAAQ,EACtB,OAAM,KACH,IAAID,EAAE,CAACC,IAAI,KAAK,SAAS,IAAID,EAAE,CAACC,IAAI,KAAK,SAAS,EACrD,OAAOQ,gBAAgB,CAACQ,CAAC,EAAEnB,GAAG,EAAEC,GAAG,CAAC,MAEpC,MAAMC,EAAE;EACZ;EAEA,IAAI0B,QAAQ,IAAIA,QAAQ,CAACC,MAAM,EAC7BD,QAAQ,CAACK,OAAO,CAACb,KAAK,IAAIc,aAAa,CAACf,CAAC,EAAEC,KAAK,EAAEpB,GAAG,EAAEC,GAAG,CAAC,CAAC;EAE9D,OAAOU,gBAAgB,CAACQ,CAAC,EAAEnB,GAAG,EAAEC,GAAG,CAAC;AACtC,CAAC;AAEDoC,MAAM,CAACC,OAAO,GAAGZ,MAAM;AACvBA,MAAM,CAACa,IAAI,GAAGH,UAAU"},"metadata":{},"sourceType":"script","externalDependencies":[]}
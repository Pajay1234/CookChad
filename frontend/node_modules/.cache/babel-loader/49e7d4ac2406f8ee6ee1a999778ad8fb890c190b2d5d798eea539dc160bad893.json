{"ast":null,"code":"const {\n  dirname\n} = require('path');\nconst {\n  findMade,\n  findMadeSync\n} = require('./find-made.js');\nconst {\n  mkdirpManual,\n  mkdirpManualSync\n} = require('./mkdirp-manual.js');\nconst mkdirpNative = (path, opts) => {\n  opts.recursive = true;\n  const parent = dirname(path);\n  if (parent === path) return opts.mkdirAsync(path, opts);\n  return findMade(opts, path).then(made => opts.mkdirAsync(path, opts).then(() => made).catch(er => {\n    if (er.code === 'ENOENT') return mkdirpManual(path, opts);else throw er;\n  }));\n};\nconst mkdirpNativeSync = (path, opts) => {\n  opts.recursive = true;\n  const parent = dirname(path);\n  if (parent === path) return opts.mkdirSync(path, opts);\n  const made = findMadeSync(opts, path);\n  try {\n    opts.mkdirSync(path, opts);\n    return made;\n  } catch (er) {\n    if (er.code === 'ENOENT') return mkdirpManualSync(path, opts);else throw er;\n  }\n};\nmodule.exports = {\n  mkdirpNative,\n  mkdirpNativeSync\n};","map":{"version":3,"names":["dirname","require","findMade","findMadeSync","mkdirpManual","mkdirpManualSync","mkdirpNative","path","opts","recursive","parent","mkdirAsync","then","made","catch","er","code","mkdirpNativeSync","mkdirSync","module","exports"],"sources":["C:/Users/Ryan/Documents/school/fall 2023/cmpe 133/project/CookChad/frontend/node_modules/tar/node_modules/mkdirp/lib/mkdirp-native.js"],"sourcesContent":["const {dirname} = require('path')\nconst {findMade, findMadeSync} = require('./find-made.js')\nconst {mkdirpManual, mkdirpManualSync} = require('./mkdirp-manual.js')\n\nconst mkdirpNative = (path, opts) => {\n  opts.recursive = true\n  const parent = dirname(path)\n  if (parent === path)\n    return opts.mkdirAsync(path, opts)\n\n  return findMade(opts, path).then(made =>\n    opts.mkdirAsync(path, opts).then(() => made)\n    .catch(er => {\n      if (er.code === 'ENOENT')\n        return mkdirpManual(path, opts)\n      else\n        throw er\n    }))\n}\n\nconst mkdirpNativeSync = (path, opts) => {\n  opts.recursive = true\n  const parent = dirname(path)\n  if (parent === path)\n    return opts.mkdirSync(path, opts)\n\n  const made = findMadeSync(opts, path)\n  try {\n    opts.mkdirSync(path, opts)\n    return made\n  } catch (er) {\n    if (er.code === 'ENOENT')\n      return mkdirpManualSync(path, opts)\n    else\n      throw er\n  }\n}\n\nmodule.exports = {mkdirpNative, mkdirpNativeSync}\n"],"mappings":"AAAA,MAAM;EAACA;AAAO,CAAC,GAAGC,OAAO,CAAC,MAAM,CAAC;AACjC,MAAM;EAACC,QAAQ;EAAEC;AAAY,CAAC,GAAGF,OAAO,CAAC,gBAAgB,CAAC;AAC1D,MAAM;EAACG,YAAY;EAAEC;AAAgB,CAAC,GAAGJ,OAAO,CAAC,oBAAoB,CAAC;AAEtE,MAAMK,YAAY,GAAGA,CAACC,IAAI,EAAEC,IAAI,KAAK;EACnCA,IAAI,CAACC,SAAS,GAAG,IAAI;EACrB,MAAMC,MAAM,GAAGV,OAAO,CAACO,IAAI,CAAC;EAC5B,IAAIG,MAAM,KAAKH,IAAI,EACjB,OAAOC,IAAI,CAACG,UAAU,CAACJ,IAAI,EAAEC,IAAI,CAAC;EAEpC,OAAON,QAAQ,CAACM,IAAI,EAAED,IAAI,CAAC,CAACK,IAAI,CAACC,IAAI,IACnCL,IAAI,CAACG,UAAU,CAACJ,IAAI,EAAEC,IAAI,CAAC,CAACI,IAAI,CAAC,MAAMC,IAAI,CAAC,CAC3CC,KAAK,CAACC,EAAE,IAAI;IACX,IAAIA,EAAE,CAACC,IAAI,KAAK,QAAQ,EACtB,OAAOZ,YAAY,CAACG,IAAI,EAAEC,IAAI,CAAC,MAE/B,MAAMO,EAAE;EACZ,CAAC,CAAC,CAAC;AACP,CAAC;AAED,MAAME,gBAAgB,GAAGA,CAACV,IAAI,EAAEC,IAAI,KAAK;EACvCA,IAAI,CAACC,SAAS,GAAG,IAAI;EACrB,MAAMC,MAAM,GAAGV,OAAO,CAACO,IAAI,CAAC;EAC5B,IAAIG,MAAM,KAAKH,IAAI,EACjB,OAAOC,IAAI,CAACU,SAAS,CAACX,IAAI,EAAEC,IAAI,CAAC;EAEnC,MAAMK,IAAI,GAAGV,YAAY,CAACK,IAAI,EAAED,IAAI,CAAC;EACrC,IAAI;IACFC,IAAI,CAACU,SAAS,CAACX,IAAI,EAAEC,IAAI,CAAC;IAC1B,OAAOK,IAAI;EACb,CAAC,CAAC,OAAOE,EAAE,EAAE;IACX,IAAIA,EAAE,CAACC,IAAI,KAAK,QAAQ,EACtB,OAAOX,gBAAgB,CAACE,IAAI,EAAEC,IAAI,CAAC,MAEnC,MAAMO,EAAE;EACZ;AACF,CAAC;AAEDI,MAAM,CAACC,OAAO,GAAG;EAACd,YAAY;EAAEW;AAAgB,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"// info about each config option.\n\nvar debug = process.env.DEBUG_NOPT || process.env.NOPT_DEBUG ? function () {\n  console.error.apply(console, arguments);\n} : function () {};\nvar url = require(\"url\"),\n  path = require(\"path\"),\n  Stream = require(\"stream\").Stream,\n  abbrev = require(\"abbrev\"),\n  os = require(\"os\");\nmodule.exports = exports = nopt;\nexports.clean = clean;\nexports.typeDefs = {\n  String: {\n    type: String,\n    validate: validateString\n  },\n  Boolean: {\n    type: Boolean,\n    validate: validateBoolean\n  },\n  url: {\n    type: url,\n    validate: validateUrl\n  },\n  Number: {\n    type: Number,\n    validate: validateNumber\n  },\n  path: {\n    type: path,\n    validate: validatePath\n  },\n  Stream: {\n    type: Stream,\n    validate: validateStream\n  },\n  Date: {\n    type: Date,\n    validate: validateDate\n  }\n};\nfunction nopt(types, shorthands, args, slice) {\n  args = args || process.argv;\n  types = types || {};\n  shorthands = shorthands || {};\n  if (typeof slice !== \"number\") slice = 2;\n  debug(types, shorthands, args, slice);\n  args = args.slice(slice);\n  var data = {},\n    key,\n    argv = {\n      remain: [],\n      cooked: args,\n      original: args.slice(0)\n    };\n  parse(args, data, argv.remain, types, shorthands);\n  // now data is full\n  clean(data, types, exports.typeDefs);\n  data.argv = argv;\n  Object.defineProperty(data.argv, 'toString', {\n    value: function () {\n      return this.original.map(JSON.stringify).join(\" \");\n    },\n    enumerable: false\n  });\n  return data;\n}\nfunction clean(data, types, typeDefs) {\n  typeDefs = typeDefs || exports.typeDefs;\n  var remove = {},\n    typeDefault = [false, true, null, String, Array];\n  Object.keys(data).forEach(function (k) {\n    if (k === \"argv\") return;\n    var val = data[k],\n      isArray = Array.isArray(val),\n      type = types[k];\n    if (!isArray) val = [val];\n    if (!type) type = typeDefault;\n    if (type === Array) type = typeDefault.concat(Array);\n    if (!Array.isArray(type)) type = [type];\n    debug(\"val=%j\", val);\n    debug(\"types=\", type);\n    val = val.map(function (val) {\n      // if it's an unknown value, then parse false/true/null/numbers/dates\n      if (typeof val === \"string\") {\n        debug(\"string %j\", val);\n        val = val.trim();\n        if (val === \"null\" && ~type.indexOf(null) || val === \"true\" && (~type.indexOf(true) || ~type.indexOf(Boolean)) || val === \"false\" && (~type.indexOf(false) || ~type.indexOf(Boolean))) {\n          val = JSON.parse(val);\n          debug(\"jsonable %j\", val);\n        } else if (~type.indexOf(Number) && !isNaN(val)) {\n          debug(\"convert to number\", val);\n          val = +val;\n        } else if (~type.indexOf(Date) && !isNaN(Date.parse(val))) {\n          debug(\"convert to date\", val);\n          val = new Date(val);\n        }\n      }\n      if (!types.hasOwnProperty(k)) {\n        return val;\n      }\n\n      // allow `--no-blah` to set 'blah' to null if null is allowed\n      if (val === false && ~type.indexOf(null) && !(~type.indexOf(false) || ~type.indexOf(Boolean))) {\n        val = null;\n      }\n      var d = {};\n      d[k] = val;\n      debug(\"prevalidated val\", d, val, types[k]);\n      if (!validate(d, k, val, types[k], typeDefs)) {\n        if (exports.invalidHandler) {\n          exports.invalidHandler(k, val, types[k], data);\n        } else if (exports.invalidHandler !== false) {\n          debug(\"invalid: \" + k + \"=\" + val, types[k]);\n        }\n        return remove;\n      }\n      debug(\"validated val\", d, val, types[k]);\n      return d[k];\n    }).filter(function (val) {\n      return val !== remove;\n    });\n\n    // if we allow Array specifically, then an empty array is how we\n    // express 'no value here', not null.  Allow it.\n    if (!val.length && type.indexOf(Array) === -1) {\n      debug('VAL HAS NO LENGTH, DELETE IT', val, k, type.indexOf(Array));\n      delete data[k];\n    } else if (isArray) {\n      debug(isArray, data[k], val);\n      data[k] = val;\n    } else data[k] = val[0];\n    debug(\"k=%s val=%j\", k, val, data[k]);\n  });\n}\nfunction validateString(data, k, val) {\n  data[k] = String(val);\n}\nfunction validatePath(data, k, val) {\n  if (val === true) return false;\n  if (val === null) return true;\n  val = String(val);\n  var isWin = process.platform === 'win32',\n    homePattern = isWin ? /^~(\\/|\\\\)/ : /^~\\//,\n    home = os.homedir();\n  if (home && val.match(homePattern)) {\n    data[k] = path.resolve(home, val.substr(2));\n  } else {\n    data[k] = path.resolve(val);\n  }\n  return true;\n}\nfunction validateNumber(data, k, val) {\n  debug(\"validate Number %j %j %j\", k, val, isNaN(val));\n  if (isNaN(val)) return false;\n  data[k] = +val;\n}\nfunction validateDate(data, k, val) {\n  var s = Date.parse(val);\n  debug(\"validate Date %j %j %j\", k, val, s);\n  if (isNaN(s)) return false;\n  data[k] = new Date(val);\n}\nfunction validateBoolean(data, k, val) {\n  if (val instanceof Boolean) val = val.valueOf();else if (typeof val === \"string\") {\n    if (!isNaN(val)) val = !!+val;else if (val === \"null\" || val === \"false\") val = false;else val = true;\n  } else val = !!val;\n  data[k] = val;\n}\nfunction validateUrl(data, k, val) {\n  val = url.parse(String(val));\n  if (!val.host) return false;\n  data[k] = val.href;\n}\nfunction validateStream(data, k, val) {\n  if (!(val instanceof Stream)) return false;\n  data[k] = val;\n}\nfunction validate(data, k, val, type, typeDefs) {\n  // arrays are lists of types.\n  if (Array.isArray(type)) {\n    for (var i = 0, l = type.length; i < l; i++) {\n      if (type[i] === Array) continue;\n      if (validate(data, k, val, type[i], typeDefs)) return true;\n    }\n    delete data[k];\n    return false;\n  }\n\n  // an array of anything?\n  if (type === Array) return true;\n\n  // NaN is poisonous.  Means that something is not allowed.\n  if (type !== type) {\n    debug(\"Poison NaN\", k, val, type);\n    delete data[k];\n    return false;\n  }\n\n  // explicit list of values\n  if (val === type) {\n    debug(\"Explicitly allowed %j\", val);\n    // if (isArray) (data[k] = data[k] || []).push(val)\n    // else data[k] = val\n    data[k] = val;\n    return true;\n  }\n\n  // now go through the list of typeDefs, validate against each one.\n  var ok = false,\n    types = Object.keys(typeDefs);\n  for (var i = 0, l = types.length; i < l; i++) {\n    debug(\"test type %j %j %j\", k, val, types[i]);\n    var t = typeDefs[types[i]];\n    if (t && (type && type.name && t.type && t.type.name ? type.name === t.type.name : type === t.type)) {\n      var d = {};\n      ok = false !== t.validate(d, k, val);\n      val = d[k];\n      if (ok) {\n        // if (isArray) (data[k] = data[k] || []).push(val)\n        // else data[k] = val\n        data[k] = val;\n        break;\n      }\n    }\n  }\n  debug(\"OK? %j (%j %j %j)\", ok, k, val, types[i]);\n  if (!ok) delete data[k];\n  return ok;\n}\nfunction parse(args, data, remain, types, shorthands) {\n  debug(\"parse\", args, data, remain);\n  var key = null,\n    abbrevs = abbrev(Object.keys(types)),\n    shortAbbr = abbrev(Object.keys(shorthands));\n  for (var i = 0; i < args.length; i++) {\n    var arg = args[i];\n    debug(\"arg\", arg);\n    if (arg.match(/^-{2,}$/)) {\n      // done with keys.\n      // the rest are args.\n      remain.push.apply(remain, args.slice(i + 1));\n      args[i] = \"--\";\n      break;\n    }\n    var hadEq = false;\n    if (arg.charAt(0) === \"-\" && arg.length > 1) {\n      var at = arg.indexOf('=');\n      if (at > -1) {\n        hadEq = true;\n        var v = arg.substr(at + 1);\n        arg = arg.substr(0, at);\n        args.splice(i, 1, arg, v);\n      }\n\n      // see if it's a shorthand\n      // if so, splice and back up to re-parse it.\n      var shRes = resolveShort(arg, shorthands, shortAbbr, abbrevs);\n      debug(\"arg=%j shRes=%j\", arg, shRes);\n      if (shRes) {\n        debug(arg, shRes);\n        args.splice.apply(args, [i, 1].concat(shRes));\n        if (arg !== shRes[0]) {\n          i--;\n          continue;\n        }\n      }\n      arg = arg.replace(/^-+/, \"\");\n      var no = null;\n      while (arg.toLowerCase().indexOf(\"no-\") === 0) {\n        no = !no;\n        arg = arg.substr(3);\n      }\n      if (abbrevs[arg]) arg = abbrevs[arg];\n      var argType = types[arg];\n      var isTypeArray = Array.isArray(argType);\n      if (isTypeArray && argType.length === 1) {\n        isTypeArray = false;\n        argType = argType[0];\n      }\n      var isArray = argType === Array || isTypeArray && argType.indexOf(Array) !== -1;\n\n      // allow unknown things to be arrays if specified multiple times.\n      if (!types.hasOwnProperty(arg) && data.hasOwnProperty(arg)) {\n        if (!Array.isArray(data[arg])) data[arg] = [data[arg]];\n        isArray = true;\n      }\n      var val,\n        la = args[i + 1];\n      var isBool = typeof no === 'boolean' || argType === Boolean || isTypeArray && argType.indexOf(Boolean) !== -1 || typeof argType === 'undefined' && !hadEq || la === \"false\" && (argType === null || isTypeArray && ~argType.indexOf(null));\n      if (isBool) {\n        // just set and move along\n        val = !no;\n        // however, also support --bool true or --bool false\n        if (la === \"true\" || la === \"false\") {\n          val = JSON.parse(la);\n          la = null;\n          if (no) val = !val;\n          i++;\n        }\n\n        // also support \"foo\":[Boolean, \"bar\"] and \"--foo bar\"\n        if (isTypeArray && la) {\n          if (~argType.indexOf(la)) {\n            // an explicit type\n            val = la;\n            i++;\n          } else if (la === \"null\" && ~argType.indexOf(null)) {\n            // null allowed\n            val = null;\n            i++;\n          } else if (!la.match(/^-{2,}[^-]/) && !isNaN(la) && ~argType.indexOf(Number)) {\n            // number\n            val = +la;\n            i++;\n          } else if (!la.match(/^-[^-]/) && ~argType.indexOf(String)) {\n            // string\n            val = la;\n            i++;\n          }\n        }\n        if (isArray) (data[arg] = data[arg] || []).push(val);else data[arg] = val;\n        continue;\n      }\n      if (argType === String) {\n        if (la === undefined) {\n          la = \"\";\n        } else if (la.match(/^-{1,2}[^-]+/)) {\n          la = \"\";\n          i--;\n        }\n      }\n      if (la && la.match(/^-{2,}$/)) {\n        la = undefined;\n        i--;\n      }\n      val = la === undefined ? true : la;\n      if (isArray) (data[arg] = data[arg] || []).push(val);else data[arg] = val;\n      i++;\n      continue;\n    }\n    remain.push(arg);\n  }\n}\nfunction resolveShort(arg, shorthands, shortAbbr, abbrevs) {\n  // handle single-char shorthands glommed together, like\n  // npm ls -glp, but only if there is one dash, and only if\n  // all of the chars are single-char shorthands, and it's\n  // not a match to some other abbrev.\n  arg = arg.replace(/^-+/, '');\n\n  // if it's an exact known option, then don't go any further\n  if (abbrevs[arg] === arg) return null;\n\n  // if it's an exact known shortopt, same deal\n  if (shorthands[arg]) {\n    // make it an array, if it's a list of words\n    if (shorthands[arg] && !Array.isArray(shorthands[arg])) shorthands[arg] = shorthands[arg].split(/\\s+/);\n    return shorthands[arg];\n  }\n\n  // first check to see if this arg is a set of single-char shorthands\n  var singles = shorthands.___singles;\n  if (!singles) {\n    singles = Object.keys(shorthands).filter(function (s) {\n      return s.length === 1;\n    }).reduce(function (l, r) {\n      l[r] = true;\n      return l;\n    }, {});\n    shorthands.___singles = singles;\n    debug('shorthand singles', singles);\n  }\n  var chrs = arg.split(\"\").filter(function (c) {\n    return singles[c];\n  });\n  if (chrs.join(\"\") === arg) return chrs.map(function (c) {\n    return shorthands[c];\n  }).reduce(function (l, r) {\n    return l.concat(r);\n  }, []);\n\n  // if it's an arg abbrev, and not a literal shorthand, then prefer the arg\n  if (abbrevs[arg] && !shorthands[arg]) return null;\n\n  // if it's an abbr for a shorthand, then use that\n  if (shortAbbr[arg]) arg = shortAbbr[arg];\n\n  // make it an array, if it's a list of words\n  if (shorthands[arg] && !Array.isArray(shorthands[arg])) shorthands[arg] = shorthands[arg].split(/\\s+/);\n  return shorthands[arg];\n}","map":{"version":3,"names":["debug","process","env","DEBUG_NOPT","NOPT_DEBUG","console","error","apply","arguments","url","require","path","Stream","abbrev","os","module","exports","nopt","clean","typeDefs","String","type","validate","validateString","Boolean","validateBoolean","validateUrl","Number","validateNumber","validatePath","validateStream","Date","validateDate","types","shorthands","args","slice","argv","data","key","remain","cooked","original","parse","Object","defineProperty","value","map","JSON","stringify","join","enumerable","remove","typeDefault","Array","keys","forEach","k","val","isArray","concat","trim","indexOf","isNaN","hasOwnProperty","d","invalidHandler","filter","length","isWin","platform","homePattern","home","homedir","match","resolve","substr","s","valueOf","host","href","i","l","ok","t","name","abbrevs","shortAbbr","arg","push","hadEq","charAt","at","v","splice","shRes","resolveShort","replace","no","toLowerCase","argType","isTypeArray","la","isBool","undefined","split","singles","___singles","reduce","r","chrs","c"],"sources":["C:/Users/Ryan/Documents/school/fall 2023/cmpe 133/project/CookChad/frontend/node_modules/nopt/lib/nopt.js"],"sourcesContent":["// info about each config option.\n\nvar debug = process.env.DEBUG_NOPT || process.env.NOPT_DEBUG\n  ? function () { console.error.apply(console, arguments) }\n  : function () {}\n\nvar url = require(\"url\")\n  , path = require(\"path\")\n  , Stream = require(\"stream\").Stream\n  , abbrev = require(\"abbrev\")\n  , os = require(\"os\")\n\nmodule.exports = exports = nopt\nexports.clean = clean\n\nexports.typeDefs =\n  { String  : { type: String,  validate: validateString  }\n  , Boolean : { type: Boolean, validate: validateBoolean }\n  , url     : { type: url,     validate: validateUrl     }\n  , Number  : { type: Number,  validate: validateNumber  }\n  , path    : { type: path,    validate: validatePath    }\n  , Stream  : { type: Stream,  validate: validateStream  }\n  , Date    : { type: Date,    validate: validateDate    }\n  }\n\nfunction nopt (types, shorthands, args, slice) {\n  args = args || process.argv\n  types = types || {}\n  shorthands = shorthands || {}\n  if (typeof slice !== \"number\") slice = 2\n\n  debug(types, shorthands, args, slice)\n\n  args = args.slice(slice)\n  var data = {}\n    , key\n    , argv = {\n        remain: [],\n        cooked: args,\n        original: args.slice(0)\n      }\n\n  parse(args, data, argv.remain, types, shorthands)\n  // now data is full\n  clean(data, types, exports.typeDefs)\n  data.argv = argv\n  Object.defineProperty(data.argv, 'toString', { value: function () {\n    return this.original.map(JSON.stringify).join(\" \")\n  }, enumerable: false })\n  return data\n}\n\nfunction clean (data, types, typeDefs) {\n  typeDefs = typeDefs || exports.typeDefs\n  var remove = {}\n    , typeDefault = [false, true, null, String, Array]\n\n  Object.keys(data).forEach(function (k) {\n    if (k === \"argv\") return\n    var val = data[k]\n      , isArray = Array.isArray(val)\n      , type = types[k]\n    if (!isArray) val = [val]\n    if (!type) type = typeDefault\n    if (type === Array) type = typeDefault.concat(Array)\n    if (!Array.isArray(type)) type = [type]\n\n    debug(\"val=%j\", val)\n    debug(\"types=\", type)\n    val = val.map(function (val) {\n      // if it's an unknown value, then parse false/true/null/numbers/dates\n      if (typeof val === \"string\") {\n        debug(\"string %j\", val)\n        val = val.trim()\n        if ((val === \"null\" && ~type.indexOf(null))\n            || (val === \"true\" &&\n               (~type.indexOf(true) || ~type.indexOf(Boolean)))\n            || (val === \"false\" &&\n               (~type.indexOf(false) || ~type.indexOf(Boolean)))) {\n          val = JSON.parse(val)\n          debug(\"jsonable %j\", val)\n        } else if (~type.indexOf(Number) && !isNaN(val)) {\n          debug(\"convert to number\", val)\n          val = +val\n        } else if (~type.indexOf(Date) && !isNaN(Date.parse(val))) {\n          debug(\"convert to date\", val)\n          val = new Date(val)\n        }\n      }\n\n      if (!types.hasOwnProperty(k)) {\n        return val\n      }\n\n      // allow `--no-blah` to set 'blah' to null if null is allowed\n      if (val === false && ~type.indexOf(null) &&\n          !(~type.indexOf(false) || ~type.indexOf(Boolean))) {\n        val = null\n      }\n\n      var d = {}\n      d[k] = val\n      debug(\"prevalidated val\", d, val, types[k])\n      if (!validate(d, k, val, types[k], typeDefs)) {\n        if (exports.invalidHandler) {\n          exports.invalidHandler(k, val, types[k], data)\n        } else if (exports.invalidHandler !== false) {\n          debug(\"invalid: \"+k+\"=\"+val, types[k])\n        }\n        return remove\n      }\n      debug(\"validated val\", d, val, types[k])\n      return d[k]\n    }).filter(function (val) { return val !== remove })\n\n    // if we allow Array specifically, then an empty array is how we\n    // express 'no value here', not null.  Allow it.\n    if (!val.length && type.indexOf(Array) === -1) {\n      debug('VAL HAS NO LENGTH, DELETE IT', val, k, type.indexOf(Array))\n      delete data[k]\n    }\n    else if (isArray) {\n      debug(isArray, data[k], val)\n      data[k] = val\n    } else data[k] = val[0]\n\n    debug(\"k=%s val=%j\", k, val, data[k])\n  })\n}\n\nfunction validateString (data, k, val) {\n  data[k] = String(val)\n}\n\nfunction validatePath (data, k, val) {\n  if (val === true) return false\n  if (val === null) return true\n\n  val = String(val)\n\n  var isWin       = process.platform === 'win32'\n    , homePattern = isWin ? /^~(\\/|\\\\)/ : /^~\\//\n    , home        = os.homedir()\n\n  if (home && val.match(homePattern)) {\n    data[k] = path.resolve(home, val.substr(2))\n  } else {\n    data[k] = path.resolve(val)\n  }\n  return true\n}\n\nfunction validateNumber (data, k, val) {\n  debug(\"validate Number %j %j %j\", k, val, isNaN(val))\n  if (isNaN(val)) return false\n  data[k] = +val\n}\n\nfunction validateDate (data, k, val) {\n  var s = Date.parse(val)\n  debug(\"validate Date %j %j %j\", k, val, s)\n  if (isNaN(s)) return false\n  data[k] = new Date(val)\n}\n\nfunction validateBoolean (data, k, val) {\n  if (val instanceof Boolean) val = val.valueOf()\n  else if (typeof val === \"string\") {\n    if (!isNaN(val)) val = !!(+val)\n    else if (val === \"null\" || val === \"false\") val = false\n    else val = true\n  } else val = !!val\n  data[k] = val\n}\n\nfunction validateUrl (data, k, val) {\n  val = url.parse(String(val))\n  if (!val.host) return false\n  data[k] = val.href\n}\n\nfunction validateStream (data, k, val) {\n  if (!(val instanceof Stream)) return false\n  data[k] = val\n}\n\nfunction validate (data, k, val, type, typeDefs) {\n  // arrays are lists of types.\n  if (Array.isArray(type)) {\n    for (var i = 0, l = type.length; i < l; i ++) {\n      if (type[i] === Array) continue\n      if (validate(data, k, val, type[i], typeDefs)) return true\n    }\n    delete data[k]\n    return false\n  }\n\n  // an array of anything?\n  if (type === Array) return true\n\n  // NaN is poisonous.  Means that something is not allowed.\n  if (type !== type) {\n    debug(\"Poison NaN\", k, val, type)\n    delete data[k]\n    return false\n  }\n\n  // explicit list of values\n  if (val === type) {\n    debug(\"Explicitly allowed %j\", val)\n    // if (isArray) (data[k] = data[k] || []).push(val)\n    // else data[k] = val\n    data[k] = val\n    return true\n  }\n\n  // now go through the list of typeDefs, validate against each one.\n  var ok = false\n    , types = Object.keys(typeDefs)\n  for (var i = 0, l = types.length; i < l; i ++) {\n    debug(\"test type %j %j %j\", k, val, types[i])\n    var t = typeDefs[types[i]]\n    if (t &&\n      ((type && type.name && t.type && t.type.name) ? (type.name === t.type.name) : (type === t.type))) {\n      var d = {}\n      ok = false !== t.validate(d, k, val)\n      val = d[k]\n      if (ok) {\n        // if (isArray) (data[k] = data[k] || []).push(val)\n        // else data[k] = val\n        data[k] = val\n        break\n      }\n    }\n  }\n  debug(\"OK? %j (%j %j %j)\", ok, k, val, types[i])\n\n  if (!ok) delete data[k]\n  return ok\n}\n\nfunction parse (args, data, remain, types, shorthands) {\n  debug(\"parse\", args, data, remain)\n\n  var key = null\n    , abbrevs = abbrev(Object.keys(types))\n    , shortAbbr = abbrev(Object.keys(shorthands))\n\n  for (var i = 0; i < args.length; i ++) {\n    var arg = args[i]\n    debug(\"arg\", arg)\n\n    if (arg.match(/^-{2,}$/)) {\n      // done with keys.\n      // the rest are args.\n      remain.push.apply(remain, args.slice(i + 1))\n      args[i] = \"--\"\n      break\n    }\n    var hadEq = false\n    if (arg.charAt(0) === \"-\" && arg.length > 1) {\n      var at = arg.indexOf('=')\n      if (at > -1) {\n        hadEq = true\n        var v = arg.substr(at + 1)\n        arg = arg.substr(0, at)\n        args.splice(i, 1, arg, v)\n      }\n\n      // see if it's a shorthand\n      // if so, splice and back up to re-parse it.\n      var shRes = resolveShort(arg, shorthands, shortAbbr, abbrevs)\n      debug(\"arg=%j shRes=%j\", arg, shRes)\n      if (shRes) {\n        debug(arg, shRes)\n        args.splice.apply(args, [i, 1].concat(shRes))\n        if (arg !== shRes[0]) {\n          i --\n          continue\n        }\n      }\n      arg = arg.replace(/^-+/, \"\")\n      var no = null\n      while (arg.toLowerCase().indexOf(\"no-\") === 0) {\n        no = !no\n        arg = arg.substr(3)\n      }\n\n      if (abbrevs[arg]) arg = abbrevs[arg]\n\n      var argType = types[arg]\n      var isTypeArray = Array.isArray(argType)\n      if (isTypeArray && argType.length === 1) {\n        isTypeArray = false\n        argType = argType[0]\n      }\n\n      var isArray = argType === Array ||\n        isTypeArray && argType.indexOf(Array) !== -1\n\n      // allow unknown things to be arrays if specified multiple times.\n      if (!types.hasOwnProperty(arg) && data.hasOwnProperty(arg)) {\n        if (!Array.isArray(data[arg]))\n          data[arg] = [data[arg]]\n        isArray = true\n      }\n\n      var val\n        , la = args[i + 1]\n\n      var isBool = typeof no === 'boolean' ||\n        argType === Boolean ||\n        isTypeArray && argType.indexOf(Boolean) !== -1 ||\n        (typeof argType === 'undefined' && !hadEq) ||\n        (la === \"false\" &&\n         (argType === null ||\n          isTypeArray && ~argType.indexOf(null)))\n\n      if (isBool) {\n        // just set and move along\n        val = !no\n        // however, also support --bool true or --bool false\n        if (la === \"true\" || la === \"false\") {\n          val = JSON.parse(la)\n          la = null\n          if (no) val = !val\n          i ++\n        }\n\n        // also support \"foo\":[Boolean, \"bar\"] and \"--foo bar\"\n        if (isTypeArray && la) {\n          if (~argType.indexOf(la)) {\n            // an explicit type\n            val = la\n            i ++\n          } else if ( la === \"null\" && ~argType.indexOf(null) ) {\n            // null allowed\n            val = null\n            i ++\n          } else if ( !la.match(/^-{2,}[^-]/) &&\n                      !isNaN(la) &&\n                      ~argType.indexOf(Number) ) {\n            // number\n            val = +la\n            i ++\n          } else if ( !la.match(/^-[^-]/) && ~argType.indexOf(String) ) {\n            // string\n            val = la\n            i ++\n          }\n        }\n\n        if (isArray) (data[arg] = data[arg] || []).push(val)\n        else data[arg] = val\n\n        continue\n      }\n\n      if (argType === String) {\n        if (la === undefined) {\n          la = \"\"\n        } else if (la.match(/^-{1,2}[^-]+/)) {\n          la = \"\"\n          i --\n        }\n      }\n\n      if (la && la.match(/^-{2,}$/)) {\n        la = undefined\n        i --\n      }\n\n      val = la === undefined ? true : la\n      if (isArray) (data[arg] = data[arg] || []).push(val)\n      else data[arg] = val\n\n      i ++\n      continue\n    }\n    remain.push(arg)\n  }\n}\n\nfunction resolveShort (arg, shorthands, shortAbbr, abbrevs) {\n  // handle single-char shorthands glommed together, like\n  // npm ls -glp, but only if there is one dash, and only if\n  // all of the chars are single-char shorthands, and it's\n  // not a match to some other abbrev.\n  arg = arg.replace(/^-+/, '')\n\n  // if it's an exact known option, then don't go any further\n  if (abbrevs[arg] === arg)\n    return null\n\n  // if it's an exact known shortopt, same deal\n  if (shorthands[arg]) {\n    // make it an array, if it's a list of words\n    if (shorthands[arg] && !Array.isArray(shorthands[arg]))\n      shorthands[arg] = shorthands[arg].split(/\\s+/)\n\n    return shorthands[arg]\n  }\n\n  // first check to see if this arg is a set of single-char shorthands\n  var singles = shorthands.___singles\n  if (!singles) {\n    singles = Object.keys(shorthands).filter(function (s) {\n      return s.length === 1\n    }).reduce(function (l,r) {\n      l[r] = true\n      return l\n    }, {})\n    shorthands.___singles = singles\n    debug('shorthand singles', singles)\n  }\n\n  var chrs = arg.split(\"\").filter(function (c) {\n    return singles[c]\n  })\n\n  if (chrs.join(\"\") === arg) return chrs.map(function (c) {\n    return shorthands[c]\n  }).reduce(function (l, r) {\n    return l.concat(r)\n  }, [])\n\n\n  // if it's an arg abbrev, and not a literal shorthand, then prefer the arg\n  if (abbrevs[arg] && !shorthands[arg])\n    return null\n\n  // if it's an abbr for a shorthand, then use that\n  if (shortAbbr[arg])\n    arg = shortAbbr[arg]\n\n  // make it an array, if it's a list of words\n  if (shorthands[arg] && !Array.isArray(shorthands[arg]))\n    shorthands[arg] = shorthands[arg].split(/\\s+/)\n\n  return shorthands[arg]\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
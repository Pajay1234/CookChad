{"ast":null,"code":"'use strict';\n\nmodule.exports = exports = _package;\nexports.usage = 'Packs binary (and enclosing directory) into locally staged tarball';\nconst fs = require('fs');\nconst path = require('path');\nconst log = require('npmlog');\nconst versioning = require('./util/versioning.js');\nconst napi = require('./util/napi.js');\nconst existsAsync = fs.exists || path.exists;\nconst makeDir = require('make-dir');\nconst tar = require('tar');\nfunction readdirSync(dir) {\n  let list = [];\n  const files = fs.readdirSync(dir);\n  files.forEach(file => {\n    const stats = fs.lstatSync(path.join(dir, file));\n    if (stats.isDirectory()) {\n      list = list.concat(readdirSync(path.join(dir, file)));\n    } else {\n      list.push(path.join(dir, file));\n    }\n  });\n  return list;\n}\nfunction _package(gyp, argv, callback) {\n  const package_json = gyp.package_json;\n  const napi_build_version = napi.get_napi_build_version_from_command_args(argv);\n  const opts = versioning.evaluate(package_json, gyp.opts, napi_build_version);\n  const from = opts.module_path;\n  const binary_module = path.join(from, opts.module_name + '.node');\n  existsAsync(binary_module, found => {\n    if (!found) {\n      return callback(new Error('Cannot package because ' + binary_module + ' missing: run `node-pre-gyp rebuild` first'));\n    }\n    const tarball = opts.staged_tarball;\n    const filter_func = function (entry) {\n      const basename = path.basename(entry);\n      if (basename.length && basename[0] !== '.') {\n        console.log('packing ' + entry);\n        return true;\n      } else {\n        console.log('skipping ' + entry);\n      }\n      return false;\n    };\n    makeDir(path.dirname(tarball)).then(() => {\n      let files = readdirSync(from);\n      const base = path.basename(from);\n      files = files.map(file => {\n        return path.join(base, path.relative(from, file));\n      });\n      tar.create({\n        portable: false,\n        gzip: true,\n        filter: filter_func,\n        file: tarball,\n        cwd: path.dirname(from)\n      }, files, err2 => {\n        if (err2) console.error('[' + package_json.name + '] ' + err2.message);else log.info('package', 'Binary staged at \"' + tarball + '\"');\n        return callback(err2);\n      });\n    }).catch(err => {\n      return callback(err);\n    });\n  });\n}","map":{"version":3,"names":["module","exports","_package","usage","fs","require","path","log","versioning","napi","existsAsync","exists","makeDir","tar","readdirSync","dir","list","files","forEach","file","stats","lstatSync","join","isDirectory","concat","push","gyp","argv","callback","package_json","napi_build_version","get_napi_build_version_from_command_args","opts","evaluate","from","module_path","binary_module","module_name","found","Error","tarball","staged_tarball","filter_func","entry","basename","length","console","dirname","then","base","map","relative","create","portable","gzip","filter","cwd","err2","error","name","message","info","catch","err"],"sources":["C:/Users/Ryan/Documents/school/fall 2023/cmpe 133/project/CookChad/frontend/node_modules/@mapbox/node-pre-gyp/lib/package.js"],"sourcesContent":["'use strict';\n\nmodule.exports = exports = _package;\n\nexports.usage = 'Packs binary (and enclosing directory) into locally staged tarball';\n\nconst fs = require('fs');\nconst path = require('path');\nconst log = require('npmlog');\nconst versioning = require('./util/versioning.js');\nconst napi = require('./util/napi.js');\nconst existsAsync = fs.exists || path.exists;\nconst makeDir = require('make-dir');\nconst tar = require('tar');\n\nfunction readdirSync(dir) {\n  let list = [];\n  const files = fs.readdirSync(dir);\n\n  files.forEach((file) => {\n    const stats = fs.lstatSync(path.join(dir, file));\n    if (stats.isDirectory()) {\n      list = list.concat(readdirSync(path.join(dir, file)));\n    } else {\n      list.push(path.join(dir, file));\n    }\n  });\n  return list;\n}\n\nfunction _package(gyp, argv, callback) {\n  const package_json = gyp.package_json;\n  const napi_build_version = napi.get_napi_build_version_from_command_args(argv);\n  const opts = versioning.evaluate(package_json, gyp.opts, napi_build_version);\n  const from = opts.module_path;\n  const binary_module = path.join(from, opts.module_name + '.node');\n  existsAsync(binary_module, (found) => {\n    if (!found) {\n      return callback(new Error('Cannot package because ' + binary_module + ' missing: run `node-pre-gyp rebuild` first'));\n    }\n    const tarball = opts.staged_tarball;\n    const filter_func = function(entry) {\n      const basename = path.basename(entry);\n      if (basename.length && basename[0] !== '.') {\n        console.log('packing ' + entry);\n        return true;\n      } else {\n        console.log('skipping ' + entry);\n      }\n      return false;\n    };\n    makeDir(path.dirname(tarball)).then(() => {\n      let files = readdirSync(from);\n      const base = path.basename(from);\n      files = files.map((file) => {\n        return path.join(base, path.relative(from, file));\n      });\n      tar.create({\n        portable: false,\n        gzip: true,\n        filter: filter_func,\n        file: tarball,\n        cwd: path.dirname(from)\n      }, files, (err2) => {\n        if (err2)  console.error('[' + package_json.name + '] ' + err2.message);\n        else log.info('package', 'Binary staged at \"' + tarball + '\"');\n        return callback(err2);\n      });\n    }).catch((err) => {\n      return callback(err);\n    });\n  });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
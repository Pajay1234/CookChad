{"ast":null,"code":"'use strict';\n\nconst stripAnsi = require('strip-ansi');\nconst isFullwidthCodePoint = require('is-fullwidth-code-point');\nconst emojiRegex = require('emoji-regex');\nconst stringWidth = string => {\n  if (typeof string !== 'string' || string.length === 0) {\n    return 0;\n  }\n  string = stripAnsi(string);\n  if (string.length === 0) {\n    return 0;\n  }\n  string = string.replace(emojiRegex(), '  ');\n  let width = 0;\n  for (let i = 0; i < string.length; i++) {\n    const code = string.codePointAt(i);\n\n    // Ignore control characters\n    if (code <= 0x1F || code >= 0x7F && code <= 0x9F) {\n      continue;\n    }\n\n    // Ignore combining characters\n    if (code >= 0x300 && code <= 0x36F) {\n      continue;\n    }\n\n    // Surrogates\n    if (code > 0xFFFF) {\n      i++;\n    }\n    width += isFullwidthCodePoint(code) ? 2 : 1;\n  }\n  return width;\n};\nmodule.exports = stringWidth;\n// TODO: remove this in the next major version\nmodule.exports.default = stringWidth;","map":{"version":3,"names":["stripAnsi","require","isFullwidthCodePoint","emojiRegex","stringWidth","string","length","replace","width","i","code","codePointAt","module","exports","default"],"sources":["C:/Users/Ryan/Documents/school/fall 2023/cmpe 133/project/CookChad/frontend/node_modules/string-width/index.js"],"sourcesContent":["'use strict';\r\nconst stripAnsi = require('strip-ansi');\r\nconst isFullwidthCodePoint = require('is-fullwidth-code-point');\r\nconst emojiRegex = require('emoji-regex');\r\n\r\nconst stringWidth = string => {\r\n\tif (typeof string !== 'string' || string.length === 0) {\r\n\t\treturn 0;\r\n\t}\r\n\r\n\tstring = stripAnsi(string);\r\n\r\n\tif (string.length === 0) {\r\n\t\treturn 0;\r\n\t}\r\n\r\n\tstring = string.replace(emojiRegex(), '  ');\r\n\r\n\tlet width = 0;\r\n\r\n\tfor (let i = 0; i < string.length; i++) {\r\n\t\tconst code = string.codePointAt(i);\r\n\r\n\t\t// Ignore control characters\r\n\t\tif (code <= 0x1F || (code >= 0x7F && code <= 0x9F)) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\t// Ignore combining characters\r\n\t\tif (code >= 0x300 && code <= 0x36F) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\t// Surrogates\r\n\t\tif (code > 0xFFFF) {\r\n\t\t\ti++;\r\n\t\t}\r\n\r\n\t\twidth += isFullwidthCodePoint(code) ? 2 : 1;\r\n\t}\r\n\r\n\treturn width;\r\n};\r\n\r\nmodule.exports = stringWidth;\r\n// TODO: remove this in the next major version\r\nmodule.exports.default = stringWidth;\r\n"],"mappings":"AAAA,YAAY;;AACZ,MAAMA,SAAS,GAAGC,OAAO,CAAC,YAAY,CAAC;AACvC,MAAMC,oBAAoB,GAAGD,OAAO,CAAC,yBAAyB,CAAC;AAC/D,MAAME,UAAU,GAAGF,OAAO,CAAC,aAAa,CAAC;AAEzC,MAAMG,WAAW,GAAGC,MAAM,IAAI;EAC7B,IAAI,OAAOA,MAAM,KAAK,QAAQ,IAAIA,MAAM,CAACC,MAAM,KAAK,CAAC,EAAE;IACtD,OAAO,CAAC;EACT;EAEAD,MAAM,GAAGL,SAAS,CAACK,MAAM,CAAC;EAE1B,IAAIA,MAAM,CAACC,MAAM,KAAK,CAAC,EAAE;IACxB,OAAO,CAAC;EACT;EAEAD,MAAM,GAAGA,MAAM,CAACE,OAAO,CAACJ,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC;EAE3C,IAAIK,KAAK,GAAG,CAAC;EAEb,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,MAAM,CAACC,MAAM,EAAEG,CAAC,EAAE,EAAE;IACvC,MAAMC,IAAI,GAAGL,MAAM,CAACM,WAAW,CAACF,CAAC,CAAC;;IAElC;IACA,IAAIC,IAAI,IAAI,IAAI,IAAKA,IAAI,IAAI,IAAI,IAAIA,IAAI,IAAI,IAAK,EAAE;MACnD;IACD;;IAEA;IACA,IAAIA,IAAI,IAAI,KAAK,IAAIA,IAAI,IAAI,KAAK,EAAE;MACnC;IACD;;IAEA;IACA,IAAIA,IAAI,GAAG,MAAM,EAAE;MAClBD,CAAC,EAAE;IACJ;IAEAD,KAAK,IAAIN,oBAAoB,CAACQ,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;EAC5C;EAEA,OAAOF,KAAK;AACb,CAAC;AAEDI,MAAM,CAACC,OAAO,GAAGT,WAAW;AAC5B;AACAQ,MAAM,CAACC,OAAO,CAACC,OAAO,GAAGV,WAAW"},"metadata":{},"sourceType":"script","externalDependencies":[]}
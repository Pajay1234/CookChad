{"ast":null,"code":"'use strict';\n\nvar nodePreGyp = require('@mapbox/node-pre-gyp');\nvar path = require('path');\nvar binding_path = nodePreGyp.find(path.resolve(path.join(__dirname, './package.json')));\nvar bindings = require(binding_path);\nvar crypto = require('crypto');\nvar promises = require('./promises');\n\n/// generate a salt (sync)\n/// @param {Number} [rounds] number of rounds (default 10)\n/// @return {String} salt\nmodule.exports.genSaltSync = function genSaltSync(rounds, minor) {\n  // default 10 rounds\n  if (!rounds) {\n    rounds = 10;\n  } else if (typeof rounds !== 'number') {\n    throw new Error('rounds must be a number');\n  }\n  if (!minor) {\n    minor = 'b';\n  } else if (minor !== 'b' && minor !== 'a') {\n    throw new Error('minor must be either \"a\" or \"b\"');\n  }\n  return bindings.gen_salt_sync(minor, rounds, crypto.randomBytes(16));\n};\n\n/// generate a salt\n/// @param {Number} [rounds] number of rounds (default 10)\n/// @param {Function} cb callback(err, salt)\nmodule.exports.genSalt = function genSalt(rounds, minor, cb) {\n  var error;\n\n  // if callback is first argument, then use defaults for others\n  if (typeof arguments[0] === 'function') {\n    // have to set callback first otherwise arguments are overriden\n    cb = arguments[0];\n    rounds = 10;\n    minor = 'b';\n    // callback is second argument\n  } else if (typeof arguments[1] === 'function') {\n    // have to set callback first otherwise arguments are overriden\n    cb = arguments[1];\n    minor = 'b';\n  }\n  if (!cb) {\n    return promises.promise(genSalt, this, [rounds, minor]);\n  }\n\n  // default 10 rounds\n  if (!rounds) {\n    rounds = 10;\n  } else if (typeof rounds !== 'number') {\n    // callback error asynchronously\n    error = new Error('rounds must be a number');\n    return process.nextTick(function () {\n      cb(error);\n    });\n  }\n  if (!minor) {\n    minor = 'b';\n  } else if (minor !== 'b' && minor !== 'a') {\n    error = new Error('minor must be either \"a\" or \"b\"');\n    return process.nextTick(function () {\n      cb(error);\n    });\n  }\n  crypto.randomBytes(16, function (error, randomBytes) {\n    if (error) {\n      cb(error);\n      return;\n    }\n    bindings.gen_salt(minor, rounds, randomBytes, cb);\n  });\n};\n\n/// hash data using a salt\n/// @param {String|Buffer} data the data to encrypt\n/// @param {String} salt the salt to use when hashing\n/// @return {String} hash\nmodule.exports.hashSync = function hashSync(data, salt) {\n  if (data == null || salt == null) {\n    throw new Error('data and salt arguments required');\n  }\n  if (!(typeof data === 'string' || data instanceof Buffer) || typeof salt !== 'string' && typeof salt !== 'number') {\n    throw new Error('data must be a string or Buffer and salt must either be a salt string or a number of rounds');\n  }\n  if (typeof salt === 'number') {\n    salt = module.exports.genSaltSync(salt);\n  }\n  return bindings.encrypt_sync(data, salt);\n};\n\n/// hash data using a salt\n/// @param {String|Buffer} data the data to encrypt\n/// @param {String} salt the salt to use when hashing\n/// @param {Function} cb callback(err, hash)\nmodule.exports.hash = function hash(data, salt, cb) {\n  var error;\n  if (typeof data === 'function') {\n    error = new Error('data must be a string or Buffer and salt must either be a salt string or a number of rounds');\n    return process.nextTick(function () {\n      data(error);\n    });\n  }\n  if (typeof salt === 'function') {\n    error = new Error('data must be a string or Buffer and salt must either be a salt string or a number of rounds');\n    return process.nextTick(function () {\n      salt(error);\n    });\n  }\n\n  // cb exists but is not a function\n  // return a rejecting promise\n  if (cb && typeof cb !== 'function') {\n    return promises.reject(new Error('cb must be a function or null to return a Promise'));\n  }\n  if (!cb) {\n    return promises.promise(hash, this, [data, salt]);\n  }\n  if (data == null || salt == null) {\n    error = new Error('data and salt arguments required');\n    return process.nextTick(function () {\n      cb(error);\n    });\n  }\n  if (!(typeof data === 'string' || data instanceof Buffer) || typeof salt !== 'string' && typeof salt !== 'number') {\n    error = new Error('data must be a string or Buffer and salt must either be a salt string or a number of rounds');\n    return process.nextTick(function () {\n      cb(error);\n    });\n  }\n  if (typeof salt === 'number') {\n    return module.exports.genSalt(salt, function (err, salt) {\n      return bindings.encrypt(data, salt, cb);\n    });\n  }\n  return bindings.encrypt(data, salt, cb);\n};\n\n/// compare raw data to hash\n/// @param {String|Buffer} data the data to hash and compare\n/// @param {String} hash expected hash\n/// @return {bool} true if hashed data matches hash\nmodule.exports.compareSync = function compareSync(data, hash) {\n  if (data == null || hash == null) {\n    throw new Error('data and hash arguments required');\n  }\n  if (!(typeof data === 'string' || data instanceof Buffer) || typeof hash !== 'string') {\n    throw new Error('data must be a string or Buffer and hash must be a string');\n  }\n  return bindings.compare_sync(data, hash);\n};\n\n/// compare raw data to hash\n/// @param {String|Buffer} data the data to hash and compare\n/// @param {String} hash expected hash\n/// @param {Function} cb callback(err, matched) - matched is true if hashed data matches hash\nmodule.exports.compare = function compare(data, hash, cb) {\n  var error;\n  if (typeof data === 'function') {\n    error = new Error('data and hash arguments required');\n    return process.nextTick(function () {\n      data(error);\n    });\n  }\n  if (typeof hash === 'function') {\n    error = new Error('data and hash arguments required');\n    return process.nextTick(function () {\n      hash(error);\n    });\n  }\n\n  // cb exists but is not a function\n  // return a rejecting promise\n  if (cb && typeof cb !== 'function') {\n    return promises.reject(new Error('cb must be a function or null to return a Promise'));\n  }\n  if (!cb) {\n    return promises.promise(compare, this, [data, hash]);\n  }\n  if (data == null || hash == null) {\n    error = new Error('data and hash arguments required');\n    return process.nextTick(function () {\n      cb(error);\n    });\n  }\n  if (!(typeof data === 'string' || data instanceof Buffer) || typeof hash !== 'string') {\n    error = new Error('data and hash must be strings');\n    return process.nextTick(function () {\n      cb(error);\n    });\n  }\n  return bindings.compare(data, hash, cb);\n};\n\n/// @param {String} hash extract rounds from this hash\n/// @return {Number} the number of rounds used to encrypt a given hash\nmodule.exports.getRounds = function getRounds(hash) {\n  if (hash == null) {\n    throw new Error('hash argument required');\n  }\n  if (typeof hash !== 'string') {\n    throw new Error('hash must be a string');\n  }\n  return bindings.get_rounds(hash);\n};","map":{"version":3,"names":["nodePreGyp","require","path","binding_path","find","resolve","join","__dirname","bindings","crypto","promises","module","exports","genSaltSync","rounds","minor","Error","gen_salt_sync","randomBytes","genSalt","cb","error","arguments","promise","process","nextTick","gen_salt","hashSync","data","salt","Buffer","encrypt_sync","hash","reject","err","encrypt","compareSync","compare_sync","compare","getRounds","get_rounds"],"sources":["C:/Users/Ryan/Documents/school/fall 2023/cmpe 133/project/CookChad/frontend/node_modules/bcrypt/bcrypt.js"],"sourcesContent":["'use strict';\n\nvar nodePreGyp = require('@mapbox/node-pre-gyp');\nvar path = require('path');\nvar binding_path = nodePreGyp.find(path.resolve(path.join(__dirname, './package.json')));\nvar bindings = require(binding_path);\n\nvar crypto = require('crypto');\n\nvar promises = require('./promises');\n\n/// generate a salt (sync)\n/// @param {Number} [rounds] number of rounds (default 10)\n/// @return {String} salt\nmodule.exports.genSaltSync = function genSaltSync(rounds, minor) {\n    // default 10 rounds\n    if (!rounds) {\n        rounds = 10;\n    } else if (typeof rounds !== 'number') {\n        throw new Error('rounds must be a number');\n    }\n\n    if(!minor) {\n        minor = 'b';\n    } else if(minor !== 'b' && minor !== 'a') {\n        throw new Error('minor must be either \"a\" or \"b\"');\n    }\n\n    return bindings.gen_salt_sync(minor, rounds, crypto.randomBytes(16));\n};\n\n/// generate a salt\n/// @param {Number} [rounds] number of rounds (default 10)\n/// @param {Function} cb callback(err, salt)\nmodule.exports.genSalt = function genSalt(rounds, minor, cb) {\n    var error;\n\n    // if callback is first argument, then use defaults for others\n    if (typeof arguments[0] === 'function') {\n        // have to set callback first otherwise arguments are overriden\n        cb = arguments[0];\n        rounds = 10;\n        minor = 'b';\n    // callback is second argument\n    } else if (typeof arguments[1] === 'function') {\n        // have to set callback first otherwise arguments are overriden\n        cb = arguments[1];\n        minor = 'b';\n    }\n\n    if (!cb) {\n        return promises.promise(genSalt, this, [rounds, minor]);\n    }\n\n    // default 10 rounds\n    if (!rounds) {\n        rounds = 10;\n    } else if (typeof rounds !== 'number') {\n        // callback error asynchronously\n        error = new Error('rounds must be a number');\n        return process.nextTick(function() {\n            cb(error);\n        });\n    }\n\n    if(!minor) {\n        minor = 'b'\n    } else if(minor !== 'b' && minor !== 'a') {\n        error = new Error('minor must be either \"a\" or \"b\"');\n        return process.nextTick(function() {\n            cb(error);\n        });\n    }\n\n    crypto.randomBytes(16, function(error, randomBytes) {\n        if (error) {\n            cb(error);\n            return;\n        }\n\n        bindings.gen_salt(minor, rounds, randomBytes, cb);\n    });\n};\n\n/// hash data using a salt\n/// @param {String|Buffer} data the data to encrypt\n/// @param {String} salt the salt to use when hashing\n/// @return {String} hash\nmodule.exports.hashSync = function hashSync(data, salt) {\n    if (data == null || salt == null) {\n        throw new Error('data and salt arguments required');\n    }\n\n    if (!(typeof data === 'string' || data instanceof Buffer) || (typeof salt !== 'string' && typeof salt !== 'number')) {\n        throw new Error('data must be a string or Buffer and salt must either be a salt string or a number of rounds');\n    }\n\n    if (typeof salt === 'number') {\n        salt = module.exports.genSaltSync(salt);\n    }\n\n    return bindings.encrypt_sync(data, salt);\n};\n\n/// hash data using a salt\n/// @param {String|Buffer} data the data to encrypt\n/// @param {String} salt the salt to use when hashing\n/// @param {Function} cb callback(err, hash)\nmodule.exports.hash = function hash(data, salt, cb) {\n    var error;\n\n    if (typeof data === 'function') {\n        error = new Error('data must be a string or Buffer and salt must either be a salt string or a number of rounds');\n        return process.nextTick(function() {\n            data(error);\n        });\n    }\n\n    if (typeof salt === 'function') {\n        error = new Error('data must be a string or Buffer and salt must either be a salt string or a number of rounds');\n        return process.nextTick(function() {\n            salt(error);\n        });\n    }\n\n    // cb exists but is not a function\n    // return a rejecting promise\n    if (cb && typeof cb !== 'function') {\n        return promises.reject(new Error('cb must be a function or null to return a Promise'));\n    }\n\n    if (!cb) {\n        return promises.promise(hash, this, [data, salt]);\n    }\n\n    if (data == null || salt == null) {\n        error = new Error('data and salt arguments required');\n        return process.nextTick(function() {\n            cb(error);\n        });\n    }\n\n    if (!(typeof data === 'string' || data instanceof Buffer) || (typeof salt !== 'string' && typeof salt !== 'number')) {\n        error = new Error('data must be a string or Buffer and salt must either be a salt string or a number of rounds');\n        return process.nextTick(function() {\n            cb(error);\n        });\n    }\n\n\n    if (typeof salt === 'number') {\n        return module.exports.genSalt(salt, function(err, salt) {\n            return bindings.encrypt(data, salt, cb);\n        });\n    }\n\n    return bindings.encrypt(data, salt, cb);\n};\n\n/// compare raw data to hash\n/// @param {String|Buffer} data the data to hash and compare\n/// @param {String} hash expected hash\n/// @return {bool} true if hashed data matches hash\nmodule.exports.compareSync = function compareSync(data, hash) {\n    if (data == null || hash == null) {\n        throw new Error('data and hash arguments required');\n    }\n\n    if (!(typeof data === 'string' || data instanceof Buffer) || typeof hash !== 'string') {\n        throw new Error('data must be a string or Buffer and hash must be a string');\n    }\n\n    return bindings.compare_sync(data, hash);\n};\n\n/// compare raw data to hash\n/// @param {String|Buffer} data the data to hash and compare\n/// @param {String} hash expected hash\n/// @param {Function} cb callback(err, matched) - matched is true if hashed data matches hash\nmodule.exports.compare = function compare(data, hash, cb) {\n    var error;\n\n    if (typeof data === 'function') {\n        error = new Error('data and hash arguments required');\n        return process.nextTick(function() {\n            data(error);\n        });\n    }\n\n    if (typeof hash === 'function') {\n        error = new Error('data and hash arguments required');\n        return process.nextTick(function() {\n            hash(error);\n        });\n    }\n\n    // cb exists but is not a function\n    // return a rejecting promise\n    if (cb && typeof cb !== 'function') {\n        return promises.reject(new Error('cb must be a function or null to return a Promise'));\n    }\n\n    if (!cb) {\n        return promises.promise(compare, this, [data, hash]);\n    }\n\n    if (data == null || hash == null) {\n        error = new Error('data and hash arguments required');\n        return process.nextTick(function() {\n            cb(error);\n        });\n    }\n\n    if (!(typeof data === 'string' || data instanceof Buffer) || typeof hash !== 'string') {\n        error = new Error('data and hash must be strings');\n        return process.nextTick(function() {\n            cb(error);\n        });\n    }\n\n    return bindings.compare(data, hash, cb);\n};\n\n/// @param {String} hash extract rounds from this hash\n/// @return {Number} the number of rounds used to encrypt a given hash\nmodule.exports.getRounds = function getRounds(hash) {\n    if (hash == null) {\n        throw new Error('hash argument required');\n    }\n\n    if (typeof hash !== 'string') {\n        throw new Error('hash must be a string');\n    }\n\n    return bindings.get_rounds(hash);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
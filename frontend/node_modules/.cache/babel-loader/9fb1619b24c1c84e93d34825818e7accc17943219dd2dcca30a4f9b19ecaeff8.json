{"ast":null,"code":"/* eslint-disable yoda */\n'use strict';\n\nconst isFullwidthCodePoint = codePoint => {\n  if (Number.isNaN(codePoint)) {\n    return false;\n  }\n\n  // Code points are derived from:\n  // http://www.unix.org/Public/UNIDATA/EastAsianWidth.txt\n  if (codePoint >= 0x1100 && (codePoint <= 0x115F ||\n  // Hangul Jamo\n  codePoint === 0x2329 ||\n  // LEFT-POINTING ANGLE BRACKET\n  codePoint === 0x232A ||\n  // RIGHT-POINTING ANGLE BRACKET\n  // CJK Radicals Supplement .. Enclosed CJK Letters and Months\n  0x2E80 <= codePoint && codePoint <= 0x3247 && codePoint !== 0x303F ||\n  // Enclosed CJK Letters and Months .. CJK Unified Ideographs Extension A\n  0x3250 <= codePoint && codePoint <= 0x4DBF ||\n  // CJK Unified Ideographs .. Yi Radicals\n  0x4E00 <= codePoint && codePoint <= 0xA4C6 ||\n  // Hangul Jamo Extended-A\n  0xA960 <= codePoint && codePoint <= 0xA97C ||\n  // Hangul Syllables\n  0xAC00 <= codePoint && codePoint <= 0xD7A3 ||\n  // CJK Compatibility Ideographs\n  0xF900 <= codePoint && codePoint <= 0xFAFF ||\n  // Vertical Forms\n  0xFE10 <= codePoint && codePoint <= 0xFE19 ||\n  // CJK Compatibility Forms .. Small Form Variants\n  0xFE30 <= codePoint && codePoint <= 0xFE6B ||\n  // Halfwidth and Fullwidth Forms\n  0xFF01 <= codePoint && codePoint <= 0xFF60 || 0xFFE0 <= codePoint && codePoint <= 0xFFE6 ||\n  // Kana Supplement\n  0x1B000 <= codePoint && codePoint <= 0x1B001 ||\n  // Enclosed Ideographic Supplement\n  0x1F200 <= codePoint && codePoint <= 0x1F251 ||\n  // CJK Unified Ideographs Extension B .. Tertiary Ideographic Plane\n  0x20000 <= codePoint && codePoint <= 0x3FFFD)) {\n    return true;\n  }\n  return false;\n};\nmodule.exports = isFullwidthCodePoint;\nmodule.exports.default = isFullwidthCodePoint;","map":{"version":3,"names":["isFullwidthCodePoint","codePoint","Number","isNaN","module","exports","default"],"sources":["C:/Users/Ryan/Documents/school/fall 2023/cmpe 133/project/CookChad/frontend/node_modules/is-fullwidth-code-point/index.js"],"sourcesContent":["/* eslint-disable yoda */\r\n'use strict';\r\n\r\nconst isFullwidthCodePoint = codePoint => {\r\n\tif (Number.isNaN(codePoint)) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\t// Code points are derived from:\r\n\t// http://www.unix.org/Public/UNIDATA/EastAsianWidth.txt\r\n\tif (\r\n\t\tcodePoint >= 0x1100 && (\r\n\t\t\tcodePoint <= 0x115F || // Hangul Jamo\r\n\t\t\tcodePoint === 0x2329 || // LEFT-POINTING ANGLE BRACKET\r\n\t\t\tcodePoint === 0x232A || // RIGHT-POINTING ANGLE BRACKET\r\n\t\t\t// CJK Radicals Supplement .. Enclosed CJK Letters and Months\r\n\t\t\t(0x2E80 <= codePoint && codePoint <= 0x3247 && codePoint !== 0x303F) ||\r\n\t\t\t// Enclosed CJK Letters and Months .. CJK Unified Ideographs Extension A\r\n\t\t\t(0x3250 <= codePoint && codePoint <= 0x4DBF) ||\r\n\t\t\t// CJK Unified Ideographs .. Yi Radicals\r\n\t\t\t(0x4E00 <= codePoint && codePoint <= 0xA4C6) ||\r\n\t\t\t// Hangul Jamo Extended-A\r\n\t\t\t(0xA960 <= codePoint && codePoint <= 0xA97C) ||\r\n\t\t\t// Hangul Syllables\r\n\t\t\t(0xAC00 <= codePoint && codePoint <= 0xD7A3) ||\r\n\t\t\t// CJK Compatibility Ideographs\r\n\t\t\t(0xF900 <= codePoint && codePoint <= 0xFAFF) ||\r\n\t\t\t// Vertical Forms\r\n\t\t\t(0xFE10 <= codePoint && codePoint <= 0xFE19) ||\r\n\t\t\t// CJK Compatibility Forms .. Small Form Variants\r\n\t\t\t(0xFE30 <= codePoint && codePoint <= 0xFE6B) ||\r\n\t\t\t// Halfwidth and Fullwidth Forms\r\n\t\t\t(0xFF01 <= codePoint && codePoint <= 0xFF60) ||\r\n\t\t\t(0xFFE0 <= codePoint && codePoint <= 0xFFE6) ||\r\n\t\t\t// Kana Supplement\r\n\t\t\t(0x1B000 <= codePoint && codePoint <= 0x1B001) ||\r\n\t\t\t// Enclosed Ideographic Supplement\r\n\t\t\t(0x1F200 <= codePoint && codePoint <= 0x1F251) ||\r\n\t\t\t// CJK Unified Ideographs Extension B .. Tertiary Ideographic Plane\r\n\t\t\t(0x20000 <= codePoint && codePoint <= 0x3FFFD)\r\n\t\t)\r\n\t) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\treturn false;\r\n};\r\n\r\nmodule.exports = isFullwidthCodePoint;\r\nmodule.exports.default = isFullwidthCodePoint;\r\n"],"mappings":"AAAA;AACA,YAAY;;AAEZ,MAAMA,oBAAoB,GAAGC,SAAS,IAAI;EACzC,IAAIC,MAAM,CAACC,KAAK,CAACF,SAAS,CAAC,EAAE;IAC5B,OAAO,KAAK;EACb;;EAEA;EACA;EACA,IACCA,SAAS,IAAI,MAAM,KAClBA,SAAS,IAAI,MAAM;EAAI;EACvBA,SAAS,KAAK,MAAM;EAAI;EACxBA,SAAS,KAAK,MAAM;EAAI;EACxB;EACC,MAAM,IAAIA,SAAS,IAAIA,SAAS,IAAI,MAAM,IAAIA,SAAS,KAAK,MAAO;EACpE;EACC,MAAM,IAAIA,SAAS,IAAIA,SAAS,IAAI,MAAO;EAC5C;EACC,MAAM,IAAIA,SAAS,IAAIA,SAAS,IAAI,MAAO;EAC5C;EACC,MAAM,IAAIA,SAAS,IAAIA,SAAS,IAAI,MAAO;EAC5C;EACC,MAAM,IAAIA,SAAS,IAAIA,SAAS,IAAI,MAAO;EAC5C;EACC,MAAM,IAAIA,SAAS,IAAIA,SAAS,IAAI,MAAO;EAC5C;EACC,MAAM,IAAIA,SAAS,IAAIA,SAAS,IAAI,MAAO;EAC5C;EACC,MAAM,IAAIA,SAAS,IAAIA,SAAS,IAAI,MAAO;EAC5C;EACC,MAAM,IAAIA,SAAS,IAAIA,SAAS,IAAI,MAAO,IAC3C,MAAM,IAAIA,SAAS,IAAIA,SAAS,IAAI,MAAO;EAC5C;EACC,OAAO,IAAIA,SAAS,IAAIA,SAAS,IAAI,OAAQ;EAC9C;EACC,OAAO,IAAIA,SAAS,IAAIA,SAAS,IAAI,OAAQ;EAC9C;EACC,OAAO,IAAIA,SAAS,IAAIA,SAAS,IAAI,OAAQ,CAC9C,EACA;IACD,OAAO,IAAI;EACZ;EAEA,OAAO,KAAK;AACb,CAAC;AAEDG,MAAM,CAACC,OAAO,GAAGL,oBAAoB;AACrCI,MAAM,CAACC,OAAO,CAACC,OAAO,GAAGN,oBAAoB"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"\"use strict\";\n\nvar os = require(\"os\");\nvar hasUnicode = module.exports = function () {\n  // Recent Win32 platforms (>XP) CAN support unicode in the console but\n  // don't have to, and in non-english locales often use traditional local\n  // code pages. There's no way, short of windows system calls or execing\n  // the chcp command line program to figure this out. As such, we default\n  // this to false and encourage your users to override it via config if\n  // appropriate.\n  if (os.type() == \"Windows_NT\") {\n    return false;\n  }\n  var isUTF8 = /UTF-?8$/i;\n  var ctype = process.env.LC_ALL || process.env.LC_CTYPE || process.env.LANG;\n  return isUTF8.test(ctype);\n};","map":{"version":3,"names":["os","require","hasUnicode","module","exports","type","isUTF8","ctype","process","env","LC_ALL","LC_CTYPE","LANG","test"],"sources":["C:/Users/Ryan/Documents/school/fall 2023/cmpe 133/project/CookChad/frontend/node_modules/has-unicode/index.js"],"sourcesContent":["\"use strict\"\nvar os = require(\"os\")\n\nvar hasUnicode = module.exports = function () {\n  // Recent Win32 platforms (>XP) CAN support unicode in the console but\n  // don't have to, and in non-english locales often use traditional local\n  // code pages. There's no way, short of windows system calls or execing\n  // the chcp command line program to figure this out. As such, we default\n  // this to false and encourage your users to override it via config if\n  // appropriate.\n  if (os.type() == \"Windows_NT\") { return false }\n\n  var isUTF8 = /UTF-?8$/i\n  var ctype = process.env.LC_ALL || process.env.LC_CTYPE || process.env.LANG\n  return isUTF8.test(ctype)\n}\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,EAAE,GAAGC,OAAO,CAAC,IAAI,CAAC;AAEtB,IAAIC,UAAU,GAAGC,MAAM,CAACC,OAAO,GAAG,YAAY;EAC5C;EACA;EACA;EACA;EACA;EACA;EACA,IAAIJ,EAAE,CAACK,IAAI,CAAC,CAAC,IAAI,YAAY,EAAE;IAAE,OAAO,KAAK;EAAC;EAE9C,IAAIC,MAAM,GAAG,UAAU;EACvB,IAAIC,KAAK,GAAGC,OAAO,CAACC,GAAG,CAACC,MAAM,IAAIF,OAAO,CAACC,GAAG,CAACE,QAAQ,IAAIH,OAAO,CAACC,GAAG,CAACG,IAAI;EAC1E,OAAON,MAAM,CAACO,IAAI,CAACN,KAAK,CAAC;AAC3B,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}
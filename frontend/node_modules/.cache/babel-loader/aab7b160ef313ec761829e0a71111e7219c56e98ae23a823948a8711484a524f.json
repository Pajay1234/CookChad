{"ast":null,"code":"'use strict';\n\nconst fs = require('fs');\nmodule.exports = exports;\nconst versionArray = process.version.substr(1).replace(/-.*$/, '').split('.').map(item => {\n  return +item;\n});\nconst napi_multiple_commands = ['build', 'clean', 'configure', 'package', 'publish', 'reveal', 'testbinary', 'testpackage', 'unpublish'];\nconst napi_build_version_tag = 'napi_build_version=';\nmodule.exports.get_napi_version = function () {\n  // returns the non-zero numeric napi version or undefined if napi is not supported.\n  // correctly supporting target requires an updated cross-walk\n  let version = process.versions.napi; // can be undefined\n  if (!version) {\n    // this code should never need to be updated\n    if (versionArray[0] === 9 && versionArray[1] >= 3) version = 2; // 9.3.0+\n    else if (versionArray[0] === 8) version = 1; // 8.0.0+\n  }\n\n  return version;\n};\nmodule.exports.get_napi_version_as_string = function (target) {\n  // returns the napi version as a string or an empty string if napi is not supported.\n  const version = module.exports.get_napi_version(target);\n  return version ? '' + version : '';\n};\nmodule.exports.validate_package_json = function (package_json, opts) {\n  // throws Error\n\n  const binary = package_json.binary;\n  const module_path_ok = pathOK(binary.module_path);\n  const remote_path_ok = pathOK(binary.remote_path);\n  const package_name_ok = pathOK(binary.package_name);\n  const napi_build_versions = module.exports.get_napi_build_versions(package_json, opts, true);\n  const napi_build_versions_raw = module.exports.get_napi_build_versions_raw(package_json);\n  if (napi_build_versions) {\n    napi_build_versions.forEach(napi_build_version => {\n      if (!(parseInt(napi_build_version, 10) === napi_build_version && napi_build_version > 0)) {\n        throw new Error('All values specified in napi_versions must be positive integers.');\n      }\n    });\n  }\n  if (napi_build_versions && (!module_path_ok || !remote_path_ok && !package_name_ok)) {\n    throw new Error('When napi_versions is specified; module_path and either remote_path or ' + \"package_name must contain the substitution string '{napi_build_version}`.\");\n  }\n  if ((module_path_ok || remote_path_ok || package_name_ok) && !napi_build_versions_raw) {\n    throw new Error(\"When the substitution string '{napi_build_version}` is specified in \" + 'module_path, remote_path, or package_name; napi_versions must also be specified.');\n  }\n  if (napi_build_versions && !module.exports.get_best_napi_build_version(package_json, opts) && module.exports.build_napi_only(package_json)) {\n    throw new Error('The Node-API version of this Node instance is ' + module.exports.get_napi_version(opts ? opts.target : undefined) + '. ' + 'This module supports Node-API version(s) ' + module.exports.get_napi_build_versions_raw(package_json) + '. ' + 'This Node instance cannot run this module.');\n  }\n  if (napi_build_versions_raw && !napi_build_versions && module.exports.build_napi_only(package_json)) {\n    throw new Error('The Node-API version of this Node instance is ' + module.exports.get_napi_version(opts ? opts.target : undefined) + '. ' + 'This module supports Node-API version(s) ' + module.exports.get_napi_build_versions_raw(package_json) + '. ' + 'This Node instance cannot run this module.');\n  }\n};\nfunction pathOK(path) {\n  return path && (path.indexOf('{napi_build_version}') !== -1 || path.indexOf('{node_napi_label}') !== -1);\n}\nmodule.exports.expand_commands = function (package_json, opts, commands) {\n  const expanded_commands = [];\n  const napi_build_versions = module.exports.get_napi_build_versions(package_json, opts);\n  commands.forEach(command => {\n    if (napi_build_versions && command.name === 'install') {\n      const napi_build_version = module.exports.get_best_napi_build_version(package_json, opts);\n      const args = napi_build_version ? [napi_build_version_tag + napi_build_version] : [];\n      expanded_commands.push({\n        name: command.name,\n        args: args\n      });\n    } else if (napi_build_versions && napi_multiple_commands.indexOf(command.name) !== -1) {\n      napi_build_versions.forEach(napi_build_version => {\n        const args = command.args.slice();\n        args.push(napi_build_version_tag + napi_build_version);\n        expanded_commands.push({\n          name: command.name,\n          args: args\n        });\n      });\n    } else {\n      expanded_commands.push(command);\n    }\n  });\n  return expanded_commands;\n};\nmodule.exports.get_napi_build_versions = function (package_json, opts, warnings) {\n  // opts may be undefined\n  const log = require('npmlog');\n  let napi_build_versions = [];\n  const supported_napi_version = module.exports.get_napi_version(opts ? opts.target : undefined);\n  // remove duplicates, verify each napi version can actaully be built\n  if (package_json.binary && package_json.binary.napi_versions) {\n    package_json.binary.napi_versions.forEach(napi_version => {\n      const duplicated = napi_build_versions.indexOf(napi_version) !== -1;\n      if (!duplicated && supported_napi_version && napi_version <= supported_napi_version) {\n        napi_build_versions.push(napi_version);\n      } else if (warnings && !duplicated && supported_napi_version) {\n        log.info('This Node instance does not support builds for Node-API version', napi_version);\n      }\n    });\n  }\n  if (opts && opts['build-latest-napi-version-only']) {\n    let latest_version = 0;\n    napi_build_versions.forEach(napi_version => {\n      if (napi_version > latest_version) latest_version = napi_version;\n    });\n    napi_build_versions = latest_version ? [latest_version] : [];\n  }\n  return napi_build_versions.length ? napi_build_versions : undefined;\n};\nmodule.exports.get_napi_build_versions_raw = function (package_json) {\n  const napi_build_versions = [];\n  // remove duplicates\n  if (package_json.binary && package_json.binary.napi_versions) {\n    package_json.binary.napi_versions.forEach(napi_version => {\n      if (napi_build_versions.indexOf(napi_version) === -1) {\n        napi_build_versions.push(napi_version);\n      }\n    });\n  }\n  return napi_build_versions.length ? napi_build_versions : undefined;\n};\nmodule.exports.get_command_arg = function (napi_build_version) {\n  return napi_build_version_tag + napi_build_version;\n};\nmodule.exports.get_napi_build_version_from_command_args = function (command_args) {\n  for (let i = 0; i < command_args.length; i++) {\n    const arg = command_args[i];\n    if (arg.indexOf(napi_build_version_tag) === 0) {\n      return parseInt(arg.substr(napi_build_version_tag.length), 10);\n    }\n  }\n  return undefined;\n};\nmodule.exports.swap_build_dir_out = function (napi_build_version) {\n  if (napi_build_version) {\n    const rm = require('rimraf');\n    rm.sync(module.exports.get_build_dir(napi_build_version));\n    fs.renameSync('build', module.exports.get_build_dir(napi_build_version));\n  }\n};\nmodule.exports.swap_build_dir_in = function (napi_build_version) {\n  if (napi_build_version) {\n    const rm = require('rimraf');\n    rm.sync('build');\n    fs.renameSync(module.exports.get_build_dir(napi_build_version), 'build');\n  }\n};\nmodule.exports.get_build_dir = function (napi_build_version) {\n  return 'build-tmp-napi-v' + napi_build_version;\n};\nmodule.exports.get_best_napi_build_version = function (package_json, opts) {\n  let best_napi_build_version = 0;\n  const napi_build_versions = module.exports.get_napi_build_versions(package_json, opts);\n  if (napi_build_versions) {\n    const our_napi_version = module.exports.get_napi_version(opts ? opts.target : undefined);\n    napi_build_versions.forEach(napi_build_version => {\n      if (napi_build_version > best_napi_build_version && napi_build_version <= our_napi_version) {\n        best_napi_build_version = napi_build_version;\n      }\n    });\n  }\n  return best_napi_build_version === 0 ? undefined : best_napi_build_version;\n};\nmodule.exports.build_napi_only = function (package_json) {\n  return package_json.binary && package_json.binary.package_name && package_json.binary.package_name.indexOf('{node_napi_label}') === -1;\n};","map":{"version":3,"names":["fs","require","module","exports","versionArray","process","version","substr","replace","split","map","item","napi_multiple_commands","napi_build_version_tag","get_napi_version","versions","napi","get_napi_version_as_string","target","validate_package_json","package_json","opts","binary","module_path_ok","pathOK","module_path","remote_path_ok","remote_path","package_name_ok","package_name","napi_build_versions","get_napi_build_versions","napi_build_versions_raw","get_napi_build_versions_raw","forEach","napi_build_version","parseInt","Error","get_best_napi_build_version","build_napi_only","undefined","path","indexOf","expand_commands","commands","expanded_commands","command","name","args","push","slice","warnings","log","supported_napi_version","napi_versions","napi_version","duplicated","info","latest_version","length","get_command_arg","get_napi_build_version_from_command_args","command_args","i","arg","swap_build_dir_out","rm","sync","get_build_dir","renameSync","swap_build_dir_in","best_napi_build_version","our_napi_version"],"sources":["C:/Users/Ryan/Documents/school/fall 2023/cmpe 133/project/CookChad/frontend/node_modules/@mapbox/node-pre-gyp/lib/util/napi.js"],"sourcesContent":["'use strict';\n\nconst fs = require('fs');\n\nmodule.exports = exports;\n\nconst versionArray = process.version\n  .substr(1)\n  .replace(/-.*$/, '')\n  .split('.')\n  .map((item) => {\n    return +item;\n  });\n\nconst napi_multiple_commands = [\n  'build',\n  'clean',\n  'configure',\n  'package',\n  'publish',\n  'reveal',\n  'testbinary',\n  'testpackage',\n  'unpublish'\n];\n\nconst napi_build_version_tag = 'napi_build_version=';\n\nmodule.exports.get_napi_version = function() {\n  // returns the non-zero numeric napi version or undefined if napi is not supported.\n  // correctly supporting target requires an updated cross-walk\n  let version = process.versions.napi; // can be undefined\n  if (!version) { // this code should never need to be updated\n    if (versionArray[0] === 9 && versionArray[1] >= 3) version = 2; // 9.3.0+\n    else if (versionArray[0] === 8) version = 1; // 8.0.0+\n  }\n  return version;\n};\n\nmodule.exports.get_napi_version_as_string = function(target) {\n  // returns the napi version as a string or an empty string if napi is not supported.\n  const version = module.exports.get_napi_version(target);\n  return version ? '' + version : '';\n};\n\nmodule.exports.validate_package_json = function(package_json, opts) { // throws Error\n\n  const binary = package_json.binary;\n  const module_path_ok = pathOK(binary.module_path);\n  const remote_path_ok = pathOK(binary.remote_path);\n  const package_name_ok = pathOK(binary.package_name);\n  const napi_build_versions = module.exports.get_napi_build_versions(package_json, opts, true);\n  const napi_build_versions_raw = module.exports.get_napi_build_versions_raw(package_json);\n\n  if (napi_build_versions) {\n    napi_build_versions.forEach((napi_build_version)=> {\n      if (!(parseInt(napi_build_version, 10) === napi_build_version && napi_build_version > 0)) {\n        throw new Error('All values specified in napi_versions must be positive integers.');\n      }\n    });\n  }\n\n  if (napi_build_versions && (!module_path_ok || (!remote_path_ok && !package_name_ok))) {\n    throw new Error('When napi_versions is specified; module_path and either remote_path or ' +\n\t\t\t\"package_name must contain the substitution string '{napi_build_version}`.\");\n  }\n\n  if ((module_path_ok || remote_path_ok || package_name_ok) && !napi_build_versions_raw) {\n    throw new Error(\"When the substitution string '{napi_build_version}` is specified in \" +\n\t\t\t'module_path, remote_path, or package_name; napi_versions must also be specified.');\n  }\n\n  if (napi_build_versions && !module.exports.get_best_napi_build_version(package_json, opts) &&\n\tmodule.exports.build_napi_only(package_json)) {\n    throw new Error(\n      'The Node-API version of this Node instance is ' + module.exports.get_napi_version(opts ? opts.target : undefined) + '. ' +\n\t\t\t'This module supports Node-API version(s) ' + module.exports.get_napi_build_versions_raw(package_json) + '. ' +\n\t\t\t'This Node instance cannot run this module.');\n  }\n\n  if (napi_build_versions_raw && !napi_build_versions && module.exports.build_napi_only(package_json)) {\n    throw new Error(\n      'The Node-API version of this Node instance is ' + module.exports.get_napi_version(opts ? opts.target : undefined) + '. ' +\n\t\t\t'This module supports Node-API version(s) ' + module.exports.get_napi_build_versions_raw(package_json) + '. ' +\n\t\t\t'This Node instance cannot run this module.');\n  }\n\n};\n\nfunction pathOK(path) {\n  return path && (path.indexOf('{napi_build_version}') !== -1 || path.indexOf('{node_napi_label}') !== -1);\n}\n\nmodule.exports.expand_commands = function(package_json, opts, commands) {\n  const expanded_commands = [];\n  const napi_build_versions = module.exports.get_napi_build_versions(package_json, opts);\n  commands.forEach((command)=> {\n    if (napi_build_versions && command.name === 'install') {\n      const napi_build_version = module.exports.get_best_napi_build_version(package_json, opts);\n      const args = napi_build_version ? [napi_build_version_tag + napi_build_version] : [];\n      expanded_commands.push({ name: command.name, args: args });\n    } else if (napi_build_versions && napi_multiple_commands.indexOf(command.name) !== -1) {\n      napi_build_versions.forEach((napi_build_version)=> {\n        const args = command.args.slice();\n        args.push(napi_build_version_tag + napi_build_version);\n        expanded_commands.push({ name: command.name, args: args });\n      });\n    } else {\n      expanded_commands.push(command);\n    }\n  });\n  return expanded_commands;\n};\n\nmodule.exports.get_napi_build_versions = function(package_json, opts, warnings) { // opts may be undefined\n  const log = require('npmlog');\n  let napi_build_versions = [];\n  const supported_napi_version = module.exports.get_napi_version(opts ? opts.target : undefined);\n  // remove duplicates, verify each napi version can actaully be built\n  if (package_json.binary && package_json.binary.napi_versions) {\n    package_json.binary.napi_versions.forEach((napi_version) => {\n      const duplicated = napi_build_versions.indexOf(napi_version) !== -1;\n      if (!duplicated && supported_napi_version && napi_version <= supported_napi_version) {\n        napi_build_versions.push(napi_version);\n      } else if (warnings && !duplicated && supported_napi_version) {\n        log.info('This Node instance does not support builds for Node-API version', napi_version);\n      }\n    });\n  }\n  if (opts && opts['build-latest-napi-version-only']) {\n    let latest_version = 0;\n    napi_build_versions.forEach((napi_version) => {\n      if (napi_version > latest_version) latest_version = napi_version;\n    });\n    napi_build_versions = latest_version ? [latest_version] : [];\n  }\n  return napi_build_versions.length ? napi_build_versions : undefined;\n};\n\nmodule.exports.get_napi_build_versions_raw = function(package_json) {\n  const napi_build_versions = [];\n  // remove duplicates\n  if (package_json.binary && package_json.binary.napi_versions) {\n    package_json.binary.napi_versions.forEach((napi_version) => {\n      if (napi_build_versions.indexOf(napi_version) === -1) {\n        napi_build_versions.push(napi_version);\n      }\n    });\n  }\n  return napi_build_versions.length ? napi_build_versions : undefined;\n};\n\nmodule.exports.get_command_arg = function(napi_build_version) {\n  return napi_build_version_tag + napi_build_version;\n};\n\nmodule.exports.get_napi_build_version_from_command_args = function(command_args) {\n  for (let i = 0; i < command_args.length; i++) {\n    const arg = command_args[i];\n    if (arg.indexOf(napi_build_version_tag) === 0) {\n      return parseInt(arg.substr(napi_build_version_tag.length), 10);\n    }\n  }\n  return undefined;\n};\n\nmodule.exports.swap_build_dir_out = function(napi_build_version) {\n  if (napi_build_version) {\n    const rm = require('rimraf');\n    rm.sync(module.exports.get_build_dir(napi_build_version));\n    fs.renameSync('build', module.exports.get_build_dir(napi_build_version));\n  }\n};\n\nmodule.exports.swap_build_dir_in = function(napi_build_version) {\n  if (napi_build_version) {\n    const rm = require('rimraf');\n    rm.sync('build');\n    fs.renameSync(module.exports.get_build_dir(napi_build_version), 'build');\n  }\n};\n\nmodule.exports.get_build_dir = function(napi_build_version) {\n  return 'build-tmp-napi-v' + napi_build_version;\n};\n\nmodule.exports.get_best_napi_build_version = function(package_json, opts) {\n  let best_napi_build_version = 0;\n  const napi_build_versions = module.exports.get_napi_build_versions(package_json, opts);\n  if (napi_build_versions) {\n    const our_napi_version = module.exports.get_napi_version(opts ? opts.target : undefined);\n    napi_build_versions.forEach((napi_build_version)=> {\n      if (napi_build_version > best_napi_build_version &&\n\t\t\t\tnapi_build_version <= our_napi_version) {\n        best_napi_build_version = napi_build_version;\n      }\n    });\n  }\n  return best_napi_build_version === 0 ? undefined : best_napi_build_version;\n};\n\nmodule.exports.build_napi_only = function(package_json) {\n  return package_json.binary && package_json.binary.package_name &&\n\tpackage_json.binary.package_name.indexOf('{node_napi_label}') === -1;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"module.exports = globSync;\nglobSync.GlobSync = GlobSync;\nvar rp = require('fs.realpath');\nvar minimatch = require('minimatch');\nvar Minimatch = minimatch.Minimatch;\nvar Glob = require('./glob.js').Glob;\nvar util = require('util');\nvar path = require('path');\nvar assert = require('assert');\nvar isAbsolute = require('path-is-absolute');\nvar common = require('./common.js');\nvar setopts = common.setopts;\nvar ownProp = common.ownProp;\nvar childrenIgnored = common.childrenIgnored;\nvar isIgnored = common.isIgnored;\nfunction globSync(pattern, options) {\n  if (typeof options === 'function' || arguments.length === 3) throw new TypeError('callback provided to sync glob\\n' + 'See: https://github.com/isaacs/node-glob/issues/167');\n  return new GlobSync(pattern, options).found;\n}\nfunction GlobSync(pattern, options) {\n  if (!pattern) throw new Error('must provide pattern');\n  if (typeof options === 'function' || arguments.length === 3) throw new TypeError('callback provided to sync glob\\n' + 'See: https://github.com/isaacs/node-glob/issues/167');\n  if (!(this instanceof GlobSync)) return new GlobSync(pattern, options);\n  setopts(this, pattern, options);\n  if (this.noprocess) return this;\n  var n = this.minimatch.set.length;\n  this.matches = new Array(n);\n  for (var i = 0; i < n; i++) {\n    this._process(this.minimatch.set[i], i, false);\n  }\n  this._finish();\n}\nGlobSync.prototype._finish = function () {\n  assert.ok(this instanceof GlobSync);\n  if (this.realpath) {\n    var self = this;\n    this.matches.forEach(function (matchset, index) {\n      var set = self.matches[index] = Object.create(null);\n      for (var p in matchset) {\n        try {\n          p = self._makeAbs(p);\n          var real = rp.realpathSync(p, self.realpathCache);\n          set[real] = true;\n        } catch (er) {\n          if (er.syscall === 'stat') set[self._makeAbs(p)] = true;else throw er;\n        }\n      }\n    });\n  }\n  common.finish(this);\n};\nGlobSync.prototype._process = function (pattern, index, inGlobStar) {\n  assert.ok(this instanceof GlobSync);\n\n  // Get the first [n] parts of pattern that are all strings.\n  var n = 0;\n  while (typeof pattern[n] === 'string') {\n    n++;\n  }\n  // now n is the index of the first one that is *not* a string.\n\n  // See if there's anything else\n  var prefix;\n  switch (n) {\n    // if not, then this is rather simple\n    case pattern.length:\n      this._processSimple(pattern.join('/'), index);\n      return;\n    case 0:\n      // pattern *starts* with some non-trivial item.\n      // going to readdir(cwd), but not include the prefix in matches.\n      prefix = null;\n      break;\n    default:\n      // pattern has some string bits in the front.\n      // whatever it starts with, whether that's 'absolute' like /foo/bar,\n      // or 'relative' like '../baz'\n      prefix = pattern.slice(0, n).join('/');\n      break;\n  }\n  var remain = pattern.slice(n);\n\n  // get the list of entries.\n  var read;\n  if (prefix === null) read = '.';else if (isAbsolute(prefix) || isAbsolute(pattern.map(function (p) {\n    return typeof p === 'string' ? p : '[*]';\n  }).join('/'))) {\n    if (!prefix || !isAbsolute(prefix)) prefix = '/' + prefix;\n    read = prefix;\n  } else read = prefix;\n  var abs = this._makeAbs(read);\n\n  //if ignored, skip processing\n  if (childrenIgnored(this, read)) return;\n  var isGlobStar = remain[0] === minimatch.GLOBSTAR;\n  if (isGlobStar) this._processGlobStar(prefix, read, abs, remain, index, inGlobStar);else this._processReaddir(prefix, read, abs, remain, index, inGlobStar);\n};\nGlobSync.prototype._processReaddir = function (prefix, read, abs, remain, index, inGlobStar) {\n  var entries = this._readdir(abs, inGlobStar);\n\n  // if the abs isn't a dir, then nothing can match!\n  if (!entries) return;\n\n  // It will only match dot entries if it starts with a dot, or if\n  // dot is set.  Stuff like @(.foo|.bar) isn't allowed.\n  var pn = remain[0];\n  var negate = !!this.minimatch.negate;\n  var rawGlob = pn._glob;\n  var dotOk = this.dot || rawGlob.charAt(0) === '.';\n  var matchedEntries = [];\n  for (var i = 0; i < entries.length; i++) {\n    var e = entries[i];\n    if (e.charAt(0) !== '.' || dotOk) {\n      var m;\n      if (negate && !prefix) {\n        m = !e.match(pn);\n      } else {\n        m = e.match(pn);\n      }\n      if (m) matchedEntries.push(e);\n    }\n  }\n  var len = matchedEntries.length;\n  // If there are no matched entries, then nothing matches.\n  if (len === 0) return;\n\n  // if this is the last remaining pattern bit, then no need for\n  // an additional stat *unless* the user has specified mark or\n  // stat explicitly.  We know they exist, since readdir returned\n  // them.\n\n  if (remain.length === 1 && !this.mark && !this.stat) {\n    if (!this.matches[index]) this.matches[index] = Object.create(null);\n    for (var i = 0; i < len; i++) {\n      var e = matchedEntries[i];\n      if (prefix) {\n        if (prefix.slice(-1) !== '/') e = prefix + '/' + e;else e = prefix + e;\n      }\n      if (e.charAt(0) === '/' && !this.nomount) {\n        e = path.join(this.root, e);\n      }\n      this._emitMatch(index, e);\n    }\n    // This was the last one, and no stats were needed\n    return;\n  }\n\n  // now test all matched entries as stand-ins for that part\n  // of the pattern.\n  remain.shift();\n  for (var i = 0; i < len; i++) {\n    var e = matchedEntries[i];\n    var newPattern;\n    if (prefix) newPattern = [prefix, e];else newPattern = [e];\n    this._process(newPattern.concat(remain), index, inGlobStar);\n  }\n};\nGlobSync.prototype._emitMatch = function (index, e) {\n  if (isIgnored(this, e)) return;\n  var abs = this._makeAbs(e);\n  if (this.mark) e = this._mark(e);\n  if (this.absolute) {\n    e = abs;\n  }\n  if (this.matches[index][e]) return;\n  if (this.nodir) {\n    var c = this.cache[abs];\n    if (c === 'DIR' || Array.isArray(c)) return;\n  }\n  this.matches[index][e] = true;\n  if (this.stat) this._stat(e);\n};\nGlobSync.prototype._readdirInGlobStar = function (abs) {\n  // follow all symlinked directories forever\n  // just proceed as if this is a non-globstar situation\n  if (this.follow) return this._readdir(abs, false);\n  var entries;\n  var lstat;\n  var stat;\n  try {\n    lstat = this.fs.lstatSync(abs);\n  } catch (er) {\n    if (er.code === 'ENOENT') {\n      // lstat failed, doesn't exist\n      return null;\n    }\n  }\n  var isSym = lstat && lstat.isSymbolicLink();\n  this.symlinks[abs] = isSym;\n\n  // If it's not a symlink or a dir, then it's definitely a regular file.\n  // don't bother doing a readdir in that case.\n  if (!isSym && lstat && !lstat.isDirectory()) this.cache[abs] = 'FILE';else entries = this._readdir(abs, false);\n  return entries;\n};\nGlobSync.prototype._readdir = function (abs, inGlobStar) {\n  var entries;\n  if (inGlobStar && !ownProp(this.symlinks, abs)) return this._readdirInGlobStar(abs);\n  if (ownProp(this.cache, abs)) {\n    var c = this.cache[abs];\n    if (!c || c === 'FILE') return null;\n    if (Array.isArray(c)) return c;\n  }\n  try {\n    return this._readdirEntries(abs, this.fs.readdirSync(abs));\n  } catch (er) {\n    this._readdirError(abs, er);\n    return null;\n  }\n};\nGlobSync.prototype._readdirEntries = function (abs, entries) {\n  // if we haven't asked to stat everything, then just\n  // assume that everything in there exists, so we can avoid\n  // having to stat it a second time.\n  if (!this.mark && !this.stat) {\n    for (var i = 0; i < entries.length; i++) {\n      var e = entries[i];\n      if (abs === '/') e = abs + e;else e = abs + '/' + e;\n      this.cache[e] = true;\n    }\n  }\n  this.cache[abs] = entries;\n\n  // mark and cache dir-ness\n  return entries;\n};\nGlobSync.prototype._readdirError = function (f, er) {\n  // handle errors, and cache the information\n  switch (er.code) {\n    case 'ENOTSUP': // https://github.com/isaacs/node-glob/issues/205\n    case 'ENOTDIR':\n      // totally normal. means it *does* exist.\n      var abs = this._makeAbs(f);\n      this.cache[abs] = 'FILE';\n      if (abs === this.cwdAbs) {\n        var error = new Error(er.code + ' invalid cwd ' + this.cwd);\n        error.path = this.cwd;\n        error.code = er.code;\n        throw error;\n      }\n      break;\n    case 'ENOENT': // not terribly unusual\n    case 'ELOOP':\n    case 'ENAMETOOLONG':\n    case 'UNKNOWN':\n      this.cache[this._makeAbs(f)] = false;\n      break;\n    default:\n      // some unusual error.  Treat as failure.\n      this.cache[this._makeAbs(f)] = false;\n      if (this.strict) throw er;\n      if (!this.silent) console.error('glob error', er);\n      break;\n  }\n};\nGlobSync.prototype._processGlobStar = function (prefix, read, abs, remain, index, inGlobStar) {\n  var entries = this._readdir(abs, inGlobStar);\n\n  // no entries means not a dir, so it can never have matches\n  // foo.txt/** doesn't match foo.txt\n  if (!entries) return;\n\n  // test without the globstar, and with every child both below\n  // and replacing the globstar.\n  var remainWithoutGlobStar = remain.slice(1);\n  var gspref = prefix ? [prefix] : [];\n  var noGlobStar = gspref.concat(remainWithoutGlobStar);\n\n  // the noGlobStar pattern exits the inGlobStar state\n  this._process(noGlobStar, index, false);\n  var len = entries.length;\n  var isSym = this.symlinks[abs];\n\n  // If it's a symlink, and we're in a globstar, then stop\n  if (isSym && inGlobStar) return;\n  for (var i = 0; i < len; i++) {\n    var e = entries[i];\n    if (e.charAt(0) === '.' && !this.dot) continue;\n\n    // these two cases enter the inGlobStar state\n    var instead = gspref.concat(entries[i], remainWithoutGlobStar);\n    this._process(instead, index, true);\n    var below = gspref.concat(entries[i], remain);\n    this._process(below, index, true);\n  }\n};\nGlobSync.prototype._processSimple = function (prefix, index) {\n  // XXX review this.  Shouldn't it be doing the mounting etc\n  // before doing stat?  kinda weird?\n  var exists = this._stat(prefix);\n  if (!this.matches[index]) this.matches[index] = Object.create(null);\n\n  // If it doesn't exist, then just mark the lack of results\n  if (!exists) return;\n  if (prefix && isAbsolute(prefix) && !this.nomount) {\n    var trail = /[\\/\\\\]$/.test(prefix);\n    if (prefix.charAt(0) === '/') {\n      prefix = path.join(this.root, prefix);\n    } else {\n      prefix = path.resolve(this.root, prefix);\n      if (trail) prefix += '/';\n    }\n  }\n  if (process.platform === 'win32') prefix = prefix.replace(/\\\\/g, '/');\n\n  // Mark this as a match\n  this._emitMatch(index, prefix);\n};\n\n// Returns either 'DIR', 'FILE', or false\nGlobSync.prototype._stat = function (f) {\n  var abs = this._makeAbs(f);\n  var needDir = f.slice(-1) === '/';\n  if (f.length > this.maxLength) return false;\n  if (!this.stat && ownProp(this.cache, abs)) {\n    var c = this.cache[abs];\n    if (Array.isArray(c)) c = 'DIR';\n\n    // It exists, but maybe not how we need it\n    if (!needDir || c === 'DIR') return c;\n    if (needDir && c === 'FILE') return false;\n\n    // otherwise we have to stat, because maybe c=true\n    // if we know it exists, but not what it is.\n  }\n\n  var exists;\n  var stat = this.statCache[abs];\n  if (!stat) {\n    var lstat;\n    try {\n      lstat = this.fs.lstatSync(abs);\n    } catch (er) {\n      if (er && (er.code === 'ENOENT' || er.code === 'ENOTDIR')) {\n        this.statCache[abs] = false;\n        return false;\n      }\n    }\n    if (lstat && lstat.isSymbolicLink()) {\n      try {\n        stat = this.fs.statSync(abs);\n      } catch (er) {\n        stat = lstat;\n      }\n    } else {\n      stat = lstat;\n    }\n  }\n  this.statCache[abs] = stat;\n  var c = true;\n  if (stat) c = stat.isDirectory() ? 'DIR' : 'FILE';\n  this.cache[abs] = this.cache[abs] || c;\n  if (needDir && c === 'FILE') return false;\n  return c;\n};\nGlobSync.prototype._mark = function (p) {\n  return common.mark(this, p);\n};\nGlobSync.prototype._makeAbs = function (f) {\n  return common.makeAbs(this, f);\n};","map":{"version":3,"names":["module","exports","globSync","GlobSync","rp","require","minimatch","Minimatch","Glob","util","path","assert","isAbsolute","common","setopts","ownProp","childrenIgnored","isIgnored","pattern","options","arguments","length","TypeError","found","Error","noprocess","n","set","matches","Array","i","_process","_finish","prototype","ok","realpath","self","forEach","matchset","index","Object","create","p","_makeAbs","real","realpathSync","realpathCache","er","syscall","finish","inGlobStar","prefix","_processSimple","join","slice","remain","read","map","abs","isGlobStar","GLOBSTAR","_processGlobStar","_processReaddir","entries","_readdir","pn","negate","rawGlob","_glob","dotOk","dot","charAt","matchedEntries","e","m","match","push","len","mark","stat","nomount","root","_emitMatch","shift","newPattern","concat","_mark","absolute","nodir","c","cache","isArray","_stat","_readdirInGlobStar","follow","lstat","fs","lstatSync","code","isSym","isSymbolicLink","symlinks","isDirectory","_readdirEntries","readdirSync","_readdirError","f","cwdAbs","error","cwd","strict","silent","console","remainWithoutGlobStar","gspref","noGlobStar","instead","below","exists","trail","test","resolve","process","platform","replace","needDir","maxLength","statCache","statSync","makeAbs"],"sources":["C:/Users/Ryan/Documents/school/fall 2023/cmpe 133/project/CookChad/frontend/node_modules/glob/sync.js"],"sourcesContent":["module.exports = globSync\r\nglobSync.GlobSync = GlobSync\r\n\r\nvar rp = require('fs.realpath')\r\nvar minimatch = require('minimatch')\r\nvar Minimatch = minimatch.Minimatch\r\nvar Glob = require('./glob.js').Glob\r\nvar util = require('util')\r\nvar path = require('path')\r\nvar assert = require('assert')\r\nvar isAbsolute = require('path-is-absolute')\r\nvar common = require('./common.js')\r\nvar setopts = common.setopts\r\nvar ownProp = common.ownProp\r\nvar childrenIgnored = common.childrenIgnored\r\nvar isIgnored = common.isIgnored\r\n\r\nfunction globSync (pattern, options) {\r\n  if (typeof options === 'function' || arguments.length === 3)\r\n    throw new TypeError('callback provided to sync glob\\n'+\r\n                        'See: https://github.com/isaacs/node-glob/issues/167')\r\n\r\n  return new GlobSync(pattern, options).found\r\n}\r\n\r\nfunction GlobSync (pattern, options) {\r\n  if (!pattern)\r\n    throw new Error('must provide pattern')\r\n\r\n  if (typeof options === 'function' || arguments.length === 3)\r\n    throw new TypeError('callback provided to sync glob\\n'+\r\n                        'See: https://github.com/isaacs/node-glob/issues/167')\r\n\r\n  if (!(this instanceof GlobSync))\r\n    return new GlobSync(pattern, options)\r\n\r\n  setopts(this, pattern, options)\r\n\r\n  if (this.noprocess)\r\n    return this\r\n\r\n  var n = this.minimatch.set.length\r\n  this.matches = new Array(n)\r\n  for (var i = 0; i < n; i ++) {\r\n    this._process(this.minimatch.set[i], i, false)\r\n  }\r\n  this._finish()\r\n}\r\n\r\nGlobSync.prototype._finish = function () {\r\n  assert.ok(this instanceof GlobSync)\r\n  if (this.realpath) {\r\n    var self = this\r\n    this.matches.forEach(function (matchset, index) {\r\n      var set = self.matches[index] = Object.create(null)\r\n      for (var p in matchset) {\r\n        try {\r\n          p = self._makeAbs(p)\r\n          var real = rp.realpathSync(p, self.realpathCache)\r\n          set[real] = true\r\n        } catch (er) {\r\n          if (er.syscall === 'stat')\r\n            set[self._makeAbs(p)] = true\r\n          else\r\n            throw er\r\n        }\r\n      }\r\n    })\r\n  }\r\n  common.finish(this)\r\n}\r\n\r\n\r\nGlobSync.prototype._process = function (pattern, index, inGlobStar) {\r\n  assert.ok(this instanceof GlobSync)\r\n\r\n  // Get the first [n] parts of pattern that are all strings.\r\n  var n = 0\r\n  while (typeof pattern[n] === 'string') {\r\n    n ++\r\n  }\r\n  // now n is the index of the first one that is *not* a string.\r\n\r\n  // See if there's anything else\r\n  var prefix\r\n  switch (n) {\r\n    // if not, then this is rather simple\r\n    case pattern.length:\r\n      this._processSimple(pattern.join('/'), index)\r\n      return\r\n\r\n    case 0:\r\n      // pattern *starts* with some non-trivial item.\r\n      // going to readdir(cwd), but not include the prefix in matches.\r\n      prefix = null\r\n      break\r\n\r\n    default:\r\n      // pattern has some string bits in the front.\r\n      // whatever it starts with, whether that's 'absolute' like /foo/bar,\r\n      // or 'relative' like '../baz'\r\n      prefix = pattern.slice(0, n).join('/')\r\n      break\r\n  }\r\n\r\n  var remain = pattern.slice(n)\r\n\r\n  // get the list of entries.\r\n  var read\r\n  if (prefix === null)\r\n    read = '.'\r\n  else if (isAbsolute(prefix) ||\r\n      isAbsolute(pattern.map(function (p) {\r\n        return typeof p === 'string' ? p : '[*]'\r\n      }).join('/'))) {\r\n    if (!prefix || !isAbsolute(prefix))\r\n      prefix = '/' + prefix\r\n    read = prefix\r\n  } else\r\n    read = prefix\r\n\r\n  var abs = this._makeAbs(read)\r\n\r\n  //if ignored, skip processing\r\n  if (childrenIgnored(this, read))\r\n    return\r\n\r\n  var isGlobStar = remain[0] === minimatch.GLOBSTAR\r\n  if (isGlobStar)\r\n    this._processGlobStar(prefix, read, abs, remain, index, inGlobStar)\r\n  else\r\n    this._processReaddir(prefix, read, abs, remain, index, inGlobStar)\r\n}\r\n\r\n\r\nGlobSync.prototype._processReaddir = function (prefix, read, abs, remain, index, inGlobStar) {\r\n  var entries = this._readdir(abs, inGlobStar)\r\n\r\n  // if the abs isn't a dir, then nothing can match!\r\n  if (!entries)\r\n    return\r\n\r\n  // It will only match dot entries if it starts with a dot, or if\r\n  // dot is set.  Stuff like @(.foo|.bar) isn't allowed.\r\n  var pn = remain[0]\r\n  var negate = !!this.minimatch.negate\r\n  var rawGlob = pn._glob\r\n  var dotOk = this.dot || rawGlob.charAt(0) === '.'\r\n\r\n  var matchedEntries = []\r\n  for (var i = 0; i < entries.length; i++) {\r\n    var e = entries[i]\r\n    if (e.charAt(0) !== '.' || dotOk) {\r\n      var m\r\n      if (negate && !prefix) {\r\n        m = !e.match(pn)\r\n      } else {\r\n        m = e.match(pn)\r\n      }\r\n      if (m)\r\n        matchedEntries.push(e)\r\n    }\r\n  }\r\n\r\n  var len = matchedEntries.length\r\n  // If there are no matched entries, then nothing matches.\r\n  if (len === 0)\r\n    return\r\n\r\n  // if this is the last remaining pattern bit, then no need for\r\n  // an additional stat *unless* the user has specified mark or\r\n  // stat explicitly.  We know they exist, since readdir returned\r\n  // them.\r\n\r\n  if (remain.length === 1 && !this.mark && !this.stat) {\r\n    if (!this.matches[index])\r\n      this.matches[index] = Object.create(null)\r\n\r\n    for (var i = 0; i < len; i ++) {\r\n      var e = matchedEntries[i]\r\n      if (prefix) {\r\n        if (prefix.slice(-1) !== '/')\r\n          e = prefix + '/' + e\r\n        else\r\n          e = prefix + e\r\n      }\r\n\r\n      if (e.charAt(0) === '/' && !this.nomount) {\r\n        e = path.join(this.root, e)\r\n      }\r\n      this._emitMatch(index, e)\r\n    }\r\n    // This was the last one, and no stats were needed\r\n    return\r\n  }\r\n\r\n  // now test all matched entries as stand-ins for that part\r\n  // of the pattern.\r\n  remain.shift()\r\n  for (var i = 0; i < len; i ++) {\r\n    var e = matchedEntries[i]\r\n    var newPattern\r\n    if (prefix)\r\n      newPattern = [prefix, e]\r\n    else\r\n      newPattern = [e]\r\n    this._process(newPattern.concat(remain), index, inGlobStar)\r\n  }\r\n}\r\n\r\n\r\nGlobSync.prototype._emitMatch = function (index, e) {\r\n  if (isIgnored(this, e))\r\n    return\r\n\r\n  var abs = this._makeAbs(e)\r\n\r\n  if (this.mark)\r\n    e = this._mark(e)\r\n\r\n  if (this.absolute) {\r\n    e = abs\r\n  }\r\n\r\n  if (this.matches[index][e])\r\n    return\r\n\r\n  if (this.nodir) {\r\n    var c = this.cache[abs]\r\n    if (c === 'DIR' || Array.isArray(c))\r\n      return\r\n  }\r\n\r\n  this.matches[index][e] = true\r\n\r\n  if (this.stat)\r\n    this._stat(e)\r\n}\r\n\r\n\r\nGlobSync.prototype._readdirInGlobStar = function (abs) {\r\n  // follow all symlinked directories forever\r\n  // just proceed as if this is a non-globstar situation\r\n  if (this.follow)\r\n    return this._readdir(abs, false)\r\n\r\n  var entries\r\n  var lstat\r\n  var stat\r\n  try {\r\n    lstat = this.fs.lstatSync(abs)\r\n  } catch (er) {\r\n    if (er.code === 'ENOENT') {\r\n      // lstat failed, doesn't exist\r\n      return null\r\n    }\r\n  }\r\n\r\n  var isSym = lstat && lstat.isSymbolicLink()\r\n  this.symlinks[abs] = isSym\r\n\r\n  // If it's not a symlink or a dir, then it's definitely a regular file.\r\n  // don't bother doing a readdir in that case.\r\n  if (!isSym && lstat && !lstat.isDirectory())\r\n    this.cache[abs] = 'FILE'\r\n  else\r\n    entries = this._readdir(abs, false)\r\n\r\n  return entries\r\n}\r\n\r\nGlobSync.prototype._readdir = function (abs, inGlobStar) {\r\n  var entries\r\n\r\n  if (inGlobStar && !ownProp(this.symlinks, abs))\r\n    return this._readdirInGlobStar(abs)\r\n\r\n  if (ownProp(this.cache, abs)) {\r\n    var c = this.cache[abs]\r\n    if (!c || c === 'FILE')\r\n      return null\r\n\r\n    if (Array.isArray(c))\r\n      return c\r\n  }\r\n\r\n  try {\r\n    return this._readdirEntries(abs, this.fs.readdirSync(abs))\r\n  } catch (er) {\r\n    this._readdirError(abs, er)\r\n    return null\r\n  }\r\n}\r\n\r\nGlobSync.prototype._readdirEntries = function (abs, entries) {\r\n  // if we haven't asked to stat everything, then just\r\n  // assume that everything in there exists, so we can avoid\r\n  // having to stat it a second time.\r\n  if (!this.mark && !this.stat) {\r\n    for (var i = 0; i < entries.length; i ++) {\r\n      var e = entries[i]\r\n      if (abs === '/')\r\n        e = abs + e\r\n      else\r\n        e = abs + '/' + e\r\n      this.cache[e] = true\r\n    }\r\n  }\r\n\r\n  this.cache[abs] = entries\r\n\r\n  // mark and cache dir-ness\r\n  return entries\r\n}\r\n\r\nGlobSync.prototype._readdirError = function (f, er) {\r\n  // handle errors, and cache the information\r\n  switch (er.code) {\r\n    case 'ENOTSUP': // https://github.com/isaacs/node-glob/issues/205\r\n    case 'ENOTDIR': // totally normal. means it *does* exist.\r\n      var abs = this._makeAbs(f)\r\n      this.cache[abs] = 'FILE'\r\n      if (abs === this.cwdAbs) {\r\n        var error = new Error(er.code + ' invalid cwd ' + this.cwd)\r\n        error.path = this.cwd\r\n        error.code = er.code\r\n        throw error\r\n      }\r\n      break\r\n\r\n    case 'ENOENT': // not terribly unusual\r\n    case 'ELOOP':\r\n    case 'ENAMETOOLONG':\r\n    case 'UNKNOWN':\r\n      this.cache[this._makeAbs(f)] = false\r\n      break\r\n\r\n    default: // some unusual error.  Treat as failure.\r\n      this.cache[this._makeAbs(f)] = false\r\n      if (this.strict)\r\n        throw er\r\n      if (!this.silent)\r\n        console.error('glob error', er)\r\n      break\r\n  }\r\n}\r\n\r\nGlobSync.prototype._processGlobStar = function (prefix, read, abs, remain, index, inGlobStar) {\r\n\r\n  var entries = this._readdir(abs, inGlobStar)\r\n\r\n  // no entries means not a dir, so it can never have matches\r\n  // foo.txt/** doesn't match foo.txt\r\n  if (!entries)\r\n    return\r\n\r\n  // test without the globstar, and with every child both below\r\n  // and replacing the globstar.\r\n  var remainWithoutGlobStar = remain.slice(1)\r\n  var gspref = prefix ? [ prefix ] : []\r\n  var noGlobStar = gspref.concat(remainWithoutGlobStar)\r\n\r\n  // the noGlobStar pattern exits the inGlobStar state\r\n  this._process(noGlobStar, index, false)\r\n\r\n  var len = entries.length\r\n  var isSym = this.symlinks[abs]\r\n\r\n  // If it's a symlink, and we're in a globstar, then stop\r\n  if (isSym && inGlobStar)\r\n    return\r\n\r\n  for (var i = 0; i < len; i++) {\r\n    var e = entries[i]\r\n    if (e.charAt(0) === '.' && !this.dot)\r\n      continue\r\n\r\n    // these two cases enter the inGlobStar state\r\n    var instead = gspref.concat(entries[i], remainWithoutGlobStar)\r\n    this._process(instead, index, true)\r\n\r\n    var below = gspref.concat(entries[i], remain)\r\n    this._process(below, index, true)\r\n  }\r\n}\r\n\r\nGlobSync.prototype._processSimple = function (prefix, index) {\r\n  // XXX review this.  Shouldn't it be doing the mounting etc\r\n  // before doing stat?  kinda weird?\r\n  var exists = this._stat(prefix)\r\n\r\n  if (!this.matches[index])\r\n    this.matches[index] = Object.create(null)\r\n\r\n  // If it doesn't exist, then just mark the lack of results\r\n  if (!exists)\r\n    return\r\n\r\n  if (prefix && isAbsolute(prefix) && !this.nomount) {\r\n    var trail = /[\\/\\\\]$/.test(prefix)\r\n    if (prefix.charAt(0) === '/') {\r\n      prefix = path.join(this.root, prefix)\r\n    } else {\r\n      prefix = path.resolve(this.root, prefix)\r\n      if (trail)\r\n        prefix += '/'\r\n    }\r\n  }\r\n\r\n  if (process.platform === 'win32')\r\n    prefix = prefix.replace(/\\\\/g, '/')\r\n\r\n  // Mark this as a match\r\n  this._emitMatch(index, prefix)\r\n}\r\n\r\n// Returns either 'DIR', 'FILE', or false\r\nGlobSync.prototype._stat = function (f) {\r\n  var abs = this._makeAbs(f)\r\n  var needDir = f.slice(-1) === '/'\r\n\r\n  if (f.length > this.maxLength)\r\n    return false\r\n\r\n  if (!this.stat && ownProp(this.cache, abs)) {\r\n    var c = this.cache[abs]\r\n\r\n    if (Array.isArray(c))\r\n      c = 'DIR'\r\n\r\n    // It exists, but maybe not how we need it\r\n    if (!needDir || c === 'DIR')\r\n      return c\r\n\r\n    if (needDir && c === 'FILE')\r\n      return false\r\n\r\n    // otherwise we have to stat, because maybe c=true\r\n    // if we know it exists, but not what it is.\r\n  }\r\n\r\n  var exists\r\n  var stat = this.statCache[abs]\r\n  if (!stat) {\r\n    var lstat\r\n    try {\r\n      lstat = this.fs.lstatSync(abs)\r\n    } catch (er) {\r\n      if (er && (er.code === 'ENOENT' || er.code === 'ENOTDIR')) {\r\n        this.statCache[abs] = false\r\n        return false\r\n      }\r\n    }\r\n\r\n    if (lstat && lstat.isSymbolicLink()) {\r\n      try {\r\n        stat = this.fs.statSync(abs)\r\n      } catch (er) {\r\n        stat = lstat\r\n      }\r\n    } else {\r\n      stat = lstat\r\n    }\r\n  }\r\n\r\n  this.statCache[abs] = stat\r\n\r\n  var c = true\r\n  if (stat)\r\n    c = stat.isDirectory() ? 'DIR' : 'FILE'\r\n\r\n  this.cache[abs] = this.cache[abs] || c\r\n\r\n  if (needDir && c === 'FILE')\r\n    return false\r\n\r\n  return c\r\n}\r\n\r\nGlobSync.prototype._mark = function (p) {\r\n  return common.mark(this, p)\r\n}\r\n\r\nGlobSync.prototype._makeAbs = function (f) {\r\n  return common.makeAbs(this, f)\r\n}\r\n"],"mappings":"AAAAA,MAAM,CAACC,OAAO,GAAGC,QAAQ;AACzBA,QAAQ,CAACC,QAAQ,GAAGA,QAAQ;AAE5B,IAAIC,EAAE,GAAGC,OAAO,CAAC,aAAa,CAAC;AAC/B,IAAIC,SAAS,GAAGD,OAAO,CAAC,WAAW,CAAC;AACpC,IAAIE,SAAS,GAAGD,SAAS,CAACC,SAAS;AACnC,IAAIC,IAAI,GAAGH,OAAO,CAAC,WAAW,CAAC,CAACG,IAAI;AACpC,IAAIC,IAAI,GAAGJ,OAAO,CAAC,MAAM,CAAC;AAC1B,IAAIK,IAAI,GAAGL,OAAO,CAAC,MAAM,CAAC;AAC1B,IAAIM,MAAM,GAAGN,OAAO,CAAC,QAAQ,CAAC;AAC9B,IAAIO,UAAU,GAAGP,OAAO,CAAC,kBAAkB,CAAC;AAC5C,IAAIQ,MAAM,GAAGR,OAAO,CAAC,aAAa,CAAC;AACnC,IAAIS,OAAO,GAAGD,MAAM,CAACC,OAAO;AAC5B,IAAIC,OAAO,GAAGF,MAAM,CAACE,OAAO;AAC5B,IAAIC,eAAe,GAAGH,MAAM,CAACG,eAAe;AAC5C,IAAIC,SAAS,GAAGJ,MAAM,CAACI,SAAS;AAEhC,SAASf,QAAQA,CAAEgB,OAAO,EAAEC,OAAO,EAAE;EACnC,IAAI,OAAOA,OAAO,KAAK,UAAU,IAAIC,SAAS,CAACC,MAAM,KAAK,CAAC,EACzD,MAAM,IAAIC,SAAS,CAAC,kCAAkC,GAClC,qDAAqD,CAAC;EAE5E,OAAO,IAAInB,QAAQ,CAACe,OAAO,EAAEC,OAAO,CAAC,CAACI,KAAK;AAC7C;AAEA,SAASpB,QAAQA,CAAEe,OAAO,EAAEC,OAAO,EAAE;EACnC,IAAI,CAACD,OAAO,EACV,MAAM,IAAIM,KAAK,CAAC,sBAAsB,CAAC;EAEzC,IAAI,OAAOL,OAAO,KAAK,UAAU,IAAIC,SAAS,CAACC,MAAM,KAAK,CAAC,EACzD,MAAM,IAAIC,SAAS,CAAC,kCAAkC,GAClC,qDAAqD,CAAC;EAE5E,IAAI,EAAE,IAAI,YAAYnB,QAAQ,CAAC,EAC7B,OAAO,IAAIA,QAAQ,CAACe,OAAO,EAAEC,OAAO,CAAC;EAEvCL,OAAO,CAAC,IAAI,EAAEI,OAAO,EAAEC,OAAO,CAAC;EAE/B,IAAI,IAAI,CAACM,SAAS,EAChB,OAAO,IAAI;EAEb,IAAIC,CAAC,GAAG,IAAI,CAACpB,SAAS,CAACqB,GAAG,CAACN,MAAM;EACjC,IAAI,CAACO,OAAO,GAAG,IAAIC,KAAK,CAACH,CAAC,CAAC;EAC3B,KAAK,IAAII,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,CAAC,EAAEI,CAAC,EAAG,EAAE;IAC3B,IAAI,CAACC,QAAQ,CAAC,IAAI,CAACzB,SAAS,CAACqB,GAAG,CAACG,CAAC,CAAC,EAAEA,CAAC,EAAE,KAAK,CAAC;EAChD;EACA,IAAI,CAACE,OAAO,CAAC,CAAC;AAChB;AAEA7B,QAAQ,CAAC8B,SAAS,CAACD,OAAO,GAAG,YAAY;EACvCrB,MAAM,CAACuB,EAAE,CAAC,IAAI,YAAY/B,QAAQ,CAAC;EACnC,IAAI,IAAI,CAACgC,QAAQ,EAAE;IACjB,IAAIC,IAAI,GAAG,IAAI;IACf,IAAI,CAACR,OAAO,CAACS,OAAO,CAAC,UAAUC,QAAQ,EAAEC,KAAK,EAAE;MAC9C,IAAIZ,GAAG,GAAGS,IAAI,CAACR,OAAO,CAACW,KAAK,CAAC,GAAGC,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC;MACnD,KAAK,IAAIC,CAAC,IAAIJ,QAAQ,EAAE;QACtB,IAAI;UACFI,CAAC,GAAGN,IAAI,CAACO,QAAQ,CAACD,CAAC,CAAC;UACpB,IAAIE,IAAI,GAAGxC,EAAE,CAACyC,YAAY,CAACH,CAAC,EAAEN,IAAI,CAACU,aAAa,CAAC;UACjDnB,GAAG,CAACiB,IAAI,CAAC,GAAG,IAAI;QAClB,CAAC,CAAC,OAAOG,EAAE,EAAE;UACX,IAAIA,EAAE,CAACC,OAAO,KAAK,MAAM,EACvBrB,GAAG,CAACS,IAAI,CAACO,QAAQ,CAACD,CAAC,CAAC,CAAC,GAAG,IAAI,MAE5B,MAAMK,EAAE;QACZ;MACF;IACF,CAAC,CAAC;EACJ;EACAlC,MAAM,CAACoC,MAAM,CAAC,IAAI,CAAC;AACrB,CAAC;AAGD9C,QAAQ,CAAC8B,SAAS,CAACF,QAAQ,GAAG,UAAUb,OAAO,EAAEqB,KAAK,EAAEW,UAAU,EAAE;EAClEvC,MAAM,CAACuB,EAAE,CAAC,IAAI,YAAY/B,QAAQ,CAAC;;EAEnC;EACA,IAAIuB,CAAC,GAAG,CAAC;EACT,OAAO,OAAOR,OAAO,CAACQ,CAAC,CAAC,KAAK,QAAQ,EAAE;IACrCA,CAAC,EAAG;EACN;EACA;;EAEA;EACA,IAAIyB,MAAM;EACV,QAAQzB,CAAC;IACP;IACA,KAAKR,OAAO,CAACG,MAAM;MACjB,IAAI,CAAC+B,cAAc,CAAClC,OAAO,CAACmC,IAAI,CAAC,GAAG,CAAC,EAAEd,KAAK,CAAC;MAC7C;IAEF,KAAK,CAAC;MACJ;MACA;MACAY,MAAM,GAAG,IAAI;MACb;IAEF;MACE;MACA;MACA;MACAA,MAAM,GAAGjC,OAAO,CAACoC,KAAK,CAAC,CAAC,EAAE5B,CAAC,CAAC,CAAC2B,IAAI,CAAC,GAAG,CAAC;MACtC;EACJ;EAEA,IAAIE,MAAM,GAAGrC,OAAO,CAACoC,KAAK,CAAC5B,CAAC,CAAC;;EAE7B;EACA,IAAI8B,IAAI;EACR,IAAIL,MAAM,KAAK,IAAI,EACjBK,IAAI,GAAG,GAAG,MACP,IAAI5C,UAAU,CAACuC,MAAM,CAAC,IACvBvC,UAAU,CAACM,OAAO,CAACuC,GAAG,CAAC,UAAUf,CAAC,EAAE;IAClC,OAAO,OAAOA,CAAC,KAAK,QAAQ,GAAGA,CAAC,GAAG,KAAK;EAC1C,CAAC,CAAC,CAACW,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE;IACjB,IAAI,CAACF,MAAM,IAAI,CAACvC,UAAU,CAACuC,MAAM,CAAC,EAChCA,MAAM,GAAG,GAAG,GAAGA,MAAM;IACvBK,IAAI,GAAGL,MAAM;EACf,CAAC,MACCK,IAAI,GAAGL,MAAM;EAEf,IAAIO,GAAG,GAAG,IAAI,CAACf,QAAQ,CAACa,IAAI,CAAC;;EAE7B;EACA,IAAIxC,eAAe,CAAC,IAAI,EAAEwC,IAAI,CAAC,EAC7B;EAEF,IAAIG,UAAU,GAAGJ,MAAM,CAAC,CAAC,CAAC,KAAKjD,SAAS,CAACsD,QAAQ;EACjD,IAAID,UAAU,EACZ,IAAI,CAACE,gBAAgB,CAACV,MAAM,EAAEK,IAAI,EAAEE,GAAG,EAAEH,MAAM,EAAEhB,KAAK,EAAEW,UAAU,CAAC,MAEnE,IAAI,CAACY,eAAe,CAACX,MAAM,EAAEK,IAAI,EAAEE,GAAG,EAAEH,MAAM,EAAEhB,KAAK,EAAEW,UAAU,CAAC;AACtE,CAAC;AAGD/C,QAAQ,CAAC8B,SAAS,CAAC6B,eAAe,GAAG,UAAUX,MAAM,EAAEK,IAAI,EAAEE,GAAG,EAAEH,MAAM,EAAEhB,KAAK,EAAEW,UAAU,EAAE;EAC3F,IAAIa,OAAO,GAAG,IAAI,CAACC,QAAQ,CAACN,GAAG,EAAER,UAAU,CAAC;;EAE5C;EACA,IAAI,CAACa,OAAO,EACV;;EAEF;EACA;EACA,IAAIE,EAAE,GAAGV,MAAM,CAAC,CAAC,CAAC;EAClB,IAAIW,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC5D,SAAS,CAAC4D,MAAM;EACpC,IAAIC,OAAO,GAAGF,EAAE,CAACG,KAAK;EACtB,IAAIC,KAAK,GAAG,IAAI,CAACC,GAAG,IAAIH,OAAO,CAACI,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG;EAEjD,IAAIC,cAAc,GAAG,EAAE;EACvB,KAAK,IAAI1C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGiC,OAAO,CAAC1C,MAAM,EAAES,CAAC,EAAE,EAAE;IACvC,IAAI2C,CAAC,GAAGV,OAAO,CAACjC,CAAC,CAAC;IAClB,IAAI2C,CAAC,CAACF,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,IAAIF,KAAK,EAAE;MAChC,IAAIK,CAAC;MACL,IAAIR,MAAM,IAAI,CAACf,MAAM,EAAE;QACrBuB,CAAC,GAAG,CAACD,CAAC,CAACE,KAAK,CAACV,EAAE,CAAC;MAClB,CAAC,MAAM;QACLS,CAAC,GAAGD,CAAC,CAACE,KAAK,CAACV,EAAE,CAAC;MACjB;MACA,IAAIS,CAAC,EACHF,cAAc,CAACI,IAAI,CAACH,CAAC,CAAC;IAC1B;EACF;EAEA,IAAII,GAAG,GAAGL,cAAc,CAACnD,MAAM;EAC/B;EACA,IAAIwD,GAAG,KAAK,CAAC,EACX;;EAEF;EACA;EACA;EACA;;EAEA,IAAItB,MAAM,CAAClC,MAAM,KAAK,CAAC,IAAI,CAAC,IAAI,CAACyD,IAAI,IAAI,CAAC,IAAI,CAACC,IAAI,EAAE;IACnD,IAAI,CAAC,IAAI,CAACnD,OAAO,CAACW,KAAK,CAAC,EACtB,IAAI,CAACX,OAAO,CAACW,KAAK,CAAC,GAAGC,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC;IAE3C,KAAK,IAAIX,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+C,GAAG,EAAE/C,CAAC,EAAG,EAAE;MAC7B,IAAI2C,CAAC,GAAGD,cAAc,CAAC1C,CAAC,CAAC;MACzB,IAAIqB,MAAM,EAAE;QACV,IAAIA,MAAM,CAACG,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,EAC1BmB,CAAC,GAAGtB,MAAM,GAAG,GAAG,GAAGsB,CAAC,MAEpBA,CAAC,GAAGtB,MAAM,GAAGsB,CAAC;MAClB;MAEA,IAAIA,CAAC,CAACF,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAACS,OAAO,EAAE;QACxCP,CAAC,GAAG/D,IAAI,CAAC2C,IAAI,CAAC,IAAI,CAAC4B,IAAI,EAAER,CAAC,CAAC;MAC7B;MACA,IAAI,CAACS,UAAU,CAAC3C,KAAK,EAAEkC,CAAC,CAAC;IAC3B;IACA;IACA;EACF;;EAEA;EACA;EACAlB,MAAM,CAAC4B,KAAK,CAAC,CAAC;EACd,KAAK,IAAIrD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+C,GAAG,EAAE/C,CAAC,EAAG,EAAE;IAC7B,IAAI2C,CAAC,GAAGD,cAAc,CAAC1C,CAAC,CAAC;IACzB,IAAIsD,UAAU;IACd,IAAIjC,MAAM,EACRiC,UAAU,GAAG,CAACjC,MAAM,EAAEsB,CAAC,CAAC,MAExBW,UAAU,GAAG,CAACX,CAAC,CAAC;IAClB,IAAI,CAAC1C,QAAQ,CAACqD,UAAU,CAACC,MAAM,CAAC9B,MAAM,CAAC,EAAEhB,KAAK,EAAEW,UAAU,CAAC;EAC7D;AACF,CAAC;AAGD/C,QAAQ,CAAC8B,SAAS,CAACiD,UAAU,GAAG,UAAU3C,KAAK,EAAEkC,CAAC,EAAE;EAClD,IAAIxD,SAAS,CAAC,IAAI,EAAEwD,CAAC,CAAC,EACpB;EAEF,IAAIf,GAAG,GAAG,IAAI,CAACf,QAAQ,CAAC8B,CAAC,CAAC;EAE1B,IAAI,IAAI,CAACK,IAAI,EACXL,CAAC,GAAG,IAAI,CAACa,KAAK,CAACb,CAAC,CAAC;EAEnB,IAAI,IAAI,CAACc,QAAQ,EAAE;IACjBd,CAAC,GAAGf,GAAG;EACT;EAEA,IAAI,IAAI,CAAC9B,OAAO,CAACW,KAAK,CAAC,CAACkC,CAAC,CAAC,EACxB;EAEF,IAAI,IAAI,CAACe,KAAK,EAAE;IACd,IAAIC,CAAC,GAAG,IAAI,CAACC,KAAK,CAAChC,GAAG,CAAC;IACvB,IAAI+B,CAAC,KAAK,KAAK,IAAI5D,KAAK,CAAC8D,OAAO,CAACF,CAAC,CAAC,EACjC;EACJ;EAEA,IAAI,CAAC7D,OAAO,CAACW,KAAK,CAAC,CAACkC,CAAC,CAAC,GAAG,IAAI;EAE7B,IAAI,IAAI,CAACM,IAAI,EACX,IAAI,CAACa,KAAK,CAACnB,CAAC,CAAC;AACjB,CAAC;AAGDtE,QAAQ,CAAC8B,SAAS,CAAC4D,kBAAkB,GAAG,UAAUnC,GAAG,EAAE;EACrD;EACA;EACA,IAAI,IAAI,CAACoC,MAAM,EACb,OAAO,IAAI,CAAC9B,QAAQ,CAACN,GAAG,EAAE,KAAK,CAAC;EAElC,IAAIK,OAAO;EACX,IAAIgC,KAAK;EACT,IAAIhB,IAAI;EACR,IAAI;IACFgB,KAAK,GAAG,IAAI,CAACC,EAAE,CAACC,SAAS,CAACvC,GAAG,CAAC;EAChC,CAAC,CAAC,OAAOX,EAAE,EAAE;IACX,IAAIA,EAAE,CAACmD,IAAI,KAAK,QAAQ,EAAE;MACxB;MACA,OAAO,IAAI;IACb;EACF;EAEA,IAAIC,KAAK,GAAGJ,KAAK,IAAIA,KAAK,CAACK,cAAc,CAAC,CAAC;EAC3C,IAAI,CAACC,QAAQ,CAAC3C,GAAG,CAAC,GAAGyC,KAAK;;EAE1B;EACA;EACA,IAAI,CAACA,KAAK,IAAIJ,KAAK,IAAI,CAACA,KAAK,CAACO,WAAW,CAAC,CAAC,EACzC,IAAI,CAACZ,KAAK,CAAChC,GAAG,CAAC,GAAG,MAAM,MAExBK,OAAO,GAAG,IAAI,CAACC,QAAQ,CAACN,GAAG,EAAE,KAAK,CAAC;EAErC,OAAOK,OAAO;AAChB,CAAC;AAED5D,QAAQ,CAAC8B,SAAS,CAAC+B,QAAQ,GAAG,UAAUN,GAAG,EAAER,UAAU,EAAE;EACvD,IAAIa,OAAO;EAEX,IAAIb,UAAU,IAAI,CAACnC,OAAO,CAAC,IAAI,CAACsF,QAAQ,EAAE3C,GAAG,CAAC,EAC5C,OAAO,IAAI,CAACmC,kBAAkB,CAACnC,GAAG,CAAC;EAErC,IAAI3C,OAAO,CAAC,IAAI,CAAC2E,KAAK,EAAEhC,GAAG,CAAC,EAAE;IAC5B,IAAI+B,CAAC,GAAG,IAAI,CAACC,KAAK,CAAChC,GAAG,CAAC;IACvB,IAAI,CAAC+B,CAAC,IAAIA,CAAC,KAAK,MAAM,EACpB,OAAO,IAAI;IAEb,IAAI5D,KAAK,CAAC8D,OAAO,CAACF,CAAC,CAAC,EAClB,OAAOA,CAAC;EACZ;EAEA,IAAI;IACF,OAAO,IAAI,CAACc,eAAe,CAAC7C,GAAG,EAAE,IAAI,CAACsC,EAAE,CAACQ,WAAW,CAAC9C,GAAG,CAAC,CAAC;EAC5D,CAAC,CAAC,OAAOX,EAAE,EAAE;IACX,IAAI,CAAC0D,aAAa,CAAC/C,GAAG,EAAEX,EAAE,CAAC;IAC3B,OAAO,IAAI;EACb;AACF,CAAC;AAED5C,QAAQ,CAAC8B,SAAS,CAACsE,eAAe,GAAG,UAAU7C,GAAG,EAAEK,OAAO,EAAE;EAC3D;EACA;EACA;EACA,IAAI,CAAC,IAAI,CAACe,IAAI,IAAI,CAAC,IAAI,CAACC,IAAI,EAAE;IAC5B,KAAK,IAAIjD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGiC,OAAO,CAAC1C,MAAM,EAAES,CAAC,EAAG,EAAE;MACxC,IAAI2C,CAAC,GAAGV,OAAO,CAACjC,CAAC,CAAC;MAClB,IAAI4B,GAAG,KAAK,GAAG,EACbe,CAAC,GAAGf,GAAG,GAAGe,CAAC,MAEXA,CAAC,GAAGf,GAAG,GAAG,GAAG,GAAGe,CAAC;MACnB,IAAI,CAACiB,KAAK,CAACjB,CAAC,CAAC,GAAG,IAAI;IACtB;EACF;EAEA,IAAI,CAACiB,KAAK,CAAChC,GAAG,CAAC,GAAGK,OAAO;;EAEzB;EACA,OAAOA,OAAO;AAChB,CAAC;AAED5D,QAAQ,CAAC8B,SAAS,CAACwE,aAAa,GAAG,UAAUC,CAAC,EAAE3D,EAAE,EAAE;EAClD;EACA,QAAQA,EAAE,CAACmD,IAAI;IACb,KAAK,SAAS,CAAC,CAAC;IAChB,KAAK,SAAS;MAAE;MACd,IAAIxC,GAAG,GAAG,IAAI,CAACf,QAAQ,CAAC+D,CAAC,CAAC;MAC1B,IAAI,CAAChB,KAAK,CAAChC,GAAG,CAAC,GAAG,MAAM;MACxB,IAAIA,GAAG,KAAK,IAAI,CAACiD,MAAM,EAAE;QACvB,IAAIC,KAAK,GAAG,IAAIpF,KAAK,CAACuB,EAAE,CAACmD,IAAI,GAAG,eAAe,GAAG,IAAI,CAACW,GAAG,CAAC;QAC3DD,KAAK,CAAClG,IAAI,GAAG,IAAI,CAACmG,GAAG;QACrBD,KAAK,CAACV,IAAI,GAAGnD,EAAE,CAACmD,IAAI;QACpB,MAAMU,KAAK;MACb;MACA;IAEF,KAAK,QAAQ,CAAC,CAAC;IACf,KAAK,OAAO;IACZ,KAAK,cAAc;IACnB,KAAK,SAAS;MACZ,IAAI,CAAClB,KAAK,CAAC,IAAI,CAAC/C,QAAQ,CAAC+D,CAAC,CAAC,CAAC,GAAG,KAAK;MACpC;IAEF;MAAS;MACP,IAAI,CAAChB,KAAK,CAAC,IAAI,CAAC/C,QAAQ,CAAC+D,CAAC,CAAC,CAAC,GAAG,KAAK;MACpC,IAAI,IAAI,CAACI,MAAM,EACb,MAAM/D,EAAE;MACV,IAAI,CAAC,IAAI,CAACgE,MAAM,EACdC,OAAO,CAACJ,KAAK,CAAC,YAAY,EAAE7D,EAAE,CAAC;MACjC;EACJ;AACF,CAAC;AAED5C,QAAQ,CAAC8B,SAAS,CAAC4B,gBAAgB,GAAG,UAAUV,MAAM,EAAEK,IAAI,EAAEE,GAAG,EAAEH,MAAM,EAAEhB,KAAK,EAAEW,UAAU,EAAE;EAE5F,IAAIa,OAAO,GAAG,IAAI,CAACC,QAAQ,CAACN,GAAG,EAAER,UAAU,CAAC;;EAE5C;EACA;EACA,IAAI,CAACa,OAAO,EACV;;EAEF;EACA;EACA,IAAIkD,qBAAqB,GAAG1D,MAAM,CAACD,KAAK,CAAC,CAAC,CAAC;EAC3C,IAAI4D,MAAM,GAAG/D,MAAM,GAAG,CAAEA,MAAM,CAAE,GAAG,EAAE;EACrC,IAAIgE,UAAU,GAAGD,MAAM,CAAC7B,MAAM,CAAC4B,qBAAqB,CAAC;;EAErD;EACA,IAAI,CAAClF,QAAQ,CAACoF,UAAU,EAAE5E,KAAK,EAAE,KAAK,CAAC;EAEvC,IAAIsC,GAAG,GAAGd,OAAO,CAAC1C,MAAM;EACxB,IAAI8E,KAAK,GAAG,IAAI,CAACE,QAAQ,CAAC3C,GAAG,CAAC;;EAE9B;EACA,IAAIyC,KAAK,IAAIjD,UAAU,EACrB;EAEF,KAAK,IAAIpB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+C,GAAG,EAAE/C,CAAC,EAAE,EAAE;IAC5B,IAAI2C,CAAC,GAAGV,OAAO,CAACjC,CAAC,CAAC;IAClB,IAAI2C,CAAC,CAACF,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAACD,GAAG,EAClC;;IAEF;IACA,IAAI8C,OAAO,GAAGF,MAAM,CAAC7B,MAAM,CAACtB,OAAO,CAACjC,CAAC,CAAC,EAAEmF,qBAAqB,CAAC;IAC9D,IAAI,CAAClF,QAAQ,CAACqF,OAAO,EAAE7E,KAAK,EAAE,IAAI,CAAC;IAEnC,IAAI8E,KAAK,GAAGH,MAAM,CAAC7B,MAAM,CAACtB,OAAO,CAACjC,CAAC,CAAC,EAAEyB,MAAM,CAAC;IAC7C,IAAI,CAACxB,QAAQ,CAACsF,KAAK,EAAE9E,KAAK,EAAE,IAAI,CAAC;EACnC;AACF,CAAC;AAEDpC,QAAQ,CAAC8B,SAAS,CAACmB,cAAc,GAAG,UAAUD,MAAM,EAAEZ,KAAK,EAAE;EAC3D;EACA;EACA,IAAI+E,MAAM,GAAG,IAAI,CAAC1B,KAAK,CAACzC,MAAM,CAAC;EAE/B,IAAI,CAAC,IAAI,CAACvB,OAAO,CAACW,KAAK,CAAC,EACtB,IAAI,CAACX,OAAO,CAACW,KAAK,CAAC,GAAGC,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC;;EAE3C;EACA,IAAI,CAAC6E,MAAM,EACT;EAEF,IAAInE,MAAM,IAAIvC,UAAU,CAACuC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC6B,OAAO,EAAE;IACjD,IAAIuC,KAAK,GAAG,SAAS,CAACC,IAAI,CAACrE,MAAM,CAAC;IAClC,IAAIA,MAAM,CAACoB,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;MAC5BpB,MAAM,GAAGzC,IAAI,CAAC2C,IAAI,CAAC,IAAI,CAAC4B,IAAI,EAAE9B,MAAM,CAAC;IACvC,CAAC,MAAM;MACLA,MAAM,GAAGzC,IAAI,CAAC+G,OAAO,CAAC,IAAI,CAACxC,IAAI,EAAE9B,MAAM,CAAC;MACxC,IAAIoE,KAAK,EACPpE,MAAM,IAAI,GAAG;IACjB;EACF;EAEA,IAAIuE,OAAO,CAACC,QAAQ,KAAK,OAAO,EAC9BxE,MAAM,GAAGA,MAAM,CAACyE,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC;;EAErC;EACA,IAAI,CAAC1C,UAAU,CAAC3C,KAAK,EAAEY,MAAM,CAAC;AAChC,CAAC;;AAED;AACAhD,QAAQ,CAAC8B,SAAS,CAAC2D,KAAK,GAAG,UAAUc,CAAC,EAAE;EACtC,IAAIhD,GAAG,GAAG,IAAI,CAACf,QAAQ,CAAC+D,CAAC,CAAC;EAC1B,IAAImB,OAAO,GAAGnB,CAAC,CAACpD,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG;EAEjC,IAAIoD,CAAC,CAACrF,MAAM,GAAG,IAAI,CAACyG,SAAS,EAC3B,OAAO,KAAK;EAEd,IAAI,CAAC,IAAI,CAAC/C,IAAI,IAAIhE,OAAO,CAAC,IAAI,CAAC2E,KAAK,EAAEhC,GAAG,CAAC,EAAE;IAC1C,IAAI+B,CAAC,GAAG,IAAI,CAACC,KAAK,CAAChC,GAAG,CAAC;IAEvB,IAAI7B,KAAK,CAAC8D,OAAO,CAACF,CAAC,CAAC,EAClBA,CAAC,GAAG,KAAK;;IAEX;IACA,IAAI,CAACoC,OAAO,IAAIpC,CAAC,KAAK,KAAK,EACzB,OAAOA,CAAC;IAEV,IAAIoC,OAAO,IAAIpC,CAAC,KAAK,MAAM,EACzB,OAAO,KAAK;;IAEd;IACA;EACF;;EAEA,IAAI6B,MAAM;EACV,IAAIvC,IAAI,GAAG,IAAI,CAACgD,SAAS,CAACrE,GAAG,CAAC;EAC9B,IAAI,CAACqB,IAAI,EAAE;IACT,IAAIgB,KAAK;IACT,IAAI;MACFA,KAAK,GAAG,IAAI,CAACC,EAAE,CAACC,SAAS,CAACvC,GAAG,CAAC;IAChC,CAAC,CAAC,OAAOX,EAAE,EAAE;MACX,IAAIA,EAAE,KAAKA,EAAE,CAACmD,IAAI,KAAK,QAAQ,IAAInD,EAAE,CAACmD,IAAI,KAAK,SAAS,CAAC,EAAE;QACzD,IAAI,CAAC6B,SAAS,CAACrE,GAAG,CAAC,GAAG,KAAK;QAC3B,OAAO,KAAK;MACd;IACF;IAEA,IAAIqC,KAAK,IAAIA,KAAK,CAACK,cAAc,CAAC,CAAC,EAAE;MACnC,IAAI;QACFrB,IAAI,GAAG,IAAI,CAACiB,EAAE,CAACgC,QAAQ,CAACtE,GAAG,CAAC;MAC9B,CAAC,CAAC,OAAOX,EAAE,EAAE;QACXgC,IAAI,GAAGgB,KAAK;MACd;IACF,CAAC,MAAM;MACLhB,IAAI,GAAGgB,KAAK;IACd;EACF;EAEA,IAAI,CAACgC,SAAS,CAACrE,GAAG,CAAC,GAAGqB,IAAI;EAE1B,IAAIU,CAAC,GAAG,IAAI;EACZ,IAAIV,IAAI,EACNU,CAAC,GAAGV,IAAI,CAACuB,WAAW,CAAC,CAAC,GAAG,KAAK,GAAG,MAAM;EAEzC,IAAI,CAACZ,KAAK,CAAChC,GAAG,CAAC,GAAG,IAAI,CAACgC,KAAK,CAAChC,GAAG,CAAC,IAAI+B,CAAC;EAEtC,IAAIoC,OAAO,IAAIpC,CAAC,KAAK,MAAM,EACzB,OAAO,KAAK;EAEd,OAAOA,CAAC;AACV,CAAC;AAEDtF,QAAQ,CAAC8B,SAAS,CAACqD,KAAK,GAAG,UAAU5C,CAAC,EAAE;EACtC,OAAO7B,MAAM,CAACiE,IAAI,CAAC,IAAI,EAAEpC,CAAC,CAAC;AAC7B,CAAC;AAEDvC,QAAQ,CAAC8B,SAAS,CAACU,QAAQ,GAAG,UAAU+D,CAAC,EAAE;EACzC,OAAO7F,MAAM,CAACoH,OAAO,CAAC,IAAI,EAAEvB,CAAC,CAAC;AAChC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}